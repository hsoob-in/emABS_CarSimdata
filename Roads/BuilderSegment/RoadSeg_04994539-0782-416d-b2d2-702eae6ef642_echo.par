PARSFILE
! VS Road Calculator
! Utility to calculate road and path coordinates for visualization
! Revision 153671, December 9, 2020

TITLE curve_road_108_constraint <Copied 03-19-2025 17:17:21>

! Echo: Roads\BuilderSegment\RoadSeg_04994539-0782-416d-b2d2-702eae6ef642_echo.par
! This run was made 14:53 on April 13, 2025.

!------------------------------------------------------------------------------------
! SYSTEM PARAMETERS (SIMULATION OPTIONS)
!------------------------------------------------------------------------------------
! [D] (default) indicates that a parameter was not set by reading from a Parsfile.
! [I] indicates that changing the parameter via an Event triggers an initialization.
! [L] indicates that the parameter is locked once the simulation starts.

ID_EVENT            0 ; - ! ID number that can be assigned to the current event
ID_RUN              0 ; - ! ID number that can be assigned to a simulation run
NDIGITS_ECHO       10 ! [D] Max. no. of digits for printing floating-point numbers
! NIMPORT           0 ! Number of variables activated for import (read only)
! NOUT_ANI_LIVE     0 ! Number of variables sent live to animators (read only)
! NOUT_EXPORT       0 ! Number of output variables activated for export (read only)
! NOUT_WRITE        0 ! Number of output variables written to file (read only)
OPT_ALL_WRITE       0 ! Write all outputs to file? 1 -> all, 0 -> only activated
                      ! outputs
OPT_BUFFER_WRITE    0 ! [D] Retain output data in memory buffer until end of run? 0
                      ! -> no, write immediately to file, 1 -> yes, buffer during
                      ! run and write to file after run finishes [L]
OPT_CHECK_MATH      2 ! [D] Check for math exceptions? 2 -> as errors, 1 -> as
                      ! warnings, 0 -> no checks
OPT_ECHO_ALL_PARS   0 ! [D] Echo all parameters in this VS Solver? 0 -> no, 1 -> yes
OPT_ECHO_ALL_UNITS  0 ! [D] Echo list of units and scale factors? 0 -> no, 1 -> yes
OPT_ECHO_ICS        0 ! [D] Echo initial conditions? 0 -> no, 1 -> yes
OPT_ECHO_KEYWORDS_LC 0 ! [D] Echo all keywords in lowercase? 0 -> no, 1 -> yes
OPT_ERROR_DIALOG    0 ! Show pop-up dialog box if fatal error occurs: 1 -> yes
                      ! (normal use), 0 -> no (for batch runs)
OPT_ERROR_DUP_DEF   0 ! [D] Handle case where DEFINE_IMPORT, DEFINE_OUTPUT,
                      ! DEFINE_PARAMETER, or DEFINE_VARIABLE attempts to define a
                      ! variable with a name that is already in use. 0 -> write
                      ! warning in log file, 1 -> generate error [L]
OPT_ERROR_SHOW_ALL  0 ! [D] Show pop-up boxes for all errors: 0 -> only show the
                      ! first, 1 -> also show subsequent errors
OPT_LOG_DEBUG       0 ! [D] Log file writing: 0 -> normal, 1 -> crash expected
OPT_LOG_VERBOSE     2 ! [D] Log file verbosity: 2 -> errors + most events + parsfile
                      ! names, 0 -> errors only, 1 -> errors + events, 3 ->
                      ! advanced diagnostics
OPT_LOG_WARNINGS    1 ! [D] Write warnings into log file? 1 -> yes, 0 -> no
OPT_PAUSE           0 ! [D] Pause at end of run with window open? 0 -> no, 1 -> yes
OPT_SKIP_INIT_DYN   0 ! [D] Skip initial dynamic calculations (for some RT systems)?
                      ! 0 -> no, 1 -> yes
OPT_STOP            0 ! [D] Option for stopping the run: 0 -> stop when T reaches
                      ! TSTOP; 1 -> stop when T reaches TSTOP or station reaches
                      ! SSTOP; -1 -> run until stopped using VS Commands or
                      ! external control
OPT_VS_FILETYPE     1 ! [D] Type of output file: 1-> 64-bit VS, 2-> 32-bit VS, 3 ->
                      ! 32-bit ERD, 4 -> text CSV (no binary), 0 -> no output file
OPT_WRITE           0 ; - ! Write outputs when T > TSTART_WRITE? 1 -> write, 0 ->
                      ! don't write; change this using VS Commands or Events
TSTART              0 ; s ! [D] Starting time for the simulation clock
TSTART_T_EVENT      0 ; s ! [D] Event clock reset time: T_EVENT = T - TSTART_T_EVENT
TSTART_WRITE        0 ; s ! [D] Start writing outputs when this time is reached
TSTEP            0.04 ; s ! Time step for numerical integration [L]
TSTOP              10 ; s ! [D] Stop when this time is reached
! T_DT           0.04 ; s ! CALC -- Time increment between calculations

!------------------------------------------------------------------------------------
! SYSTEM CONSTANTS
!------------------------------------------------------------------------------------
! DR      57.29577951 ; - ! Deg/rad symbol to use in formulas (read-only)
! G           9.80665 ; - ! Symbol for gravity constant m/s/s (read-only)
! PI      3.141592654 ; - ! Symbol for PI to use in formulas (read-only)
! ZERO              0 ; - ! Symbol for zero to use in VS Events (read-only)

!------------------------------------------------------------------------------------
! REFERENCE PATHS
!------------------------------------------------------------------------------------
! Up to 500 reference paths may be installed to provide station-based coordinate
! systems used to define 3D road surfaces, targets for the driver model, and
! positions of moving objects. In addition to the parameters shown in this section,
! the paths may include spline X-Y tables (keyword = SEGMENT_XY_TABLE).

! NPATH             1 ! Number of installed paths available for roads, driver model,
                      ! and moving objects (read only)
DEFINE_PATHS        1 ! VS Command to install reference paths

PATH_ID(1)          1 ! [D] ID number for this Reference Path
OPT_PATH_START(1)   1 ! Set initial heading and X-Y coordinates of the path? 0 -> no
                      ! (legacy, using table data), 1 -> yes
OPT_PATH_LOOP(1)    0 ! Is this path looped? 0 -> no, 1 -> yes
SPATH_START(1)      0 ; m ! Station at the start of this path
HEADING_START(1)    0 ; deg ! Heading at the start of this path
X_PATH_START(1)     0 ; m ! Global X coordinate at the start of this path
Y_PATH_START(1)     0 ; m ! Global Y coordinate at the start of this path

NSEGMENTS(1)       19 ! Number of segments in this path
SEGMENT_TYPE(1,1)   0 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
SEGMENT_LENGTH(1,1) 110 ; m ! Segment length
! S_SEGMENT_END(1,1) 110 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(1,1) 110 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(1,1) 0 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(1,1)  0 ; deg ! CALC -- Heading at end of segment

SEGMENT_TYPE(1,2)   3 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
SEGMENT_RADIUS(1,2) 1436 ; m ! Radius of arc; + -> left turn
SEGMENT_ARC(1,2) 0.359096 ; deg ! Central angle of arc
! S_SEGMENT_END(1,2) 118.9999972 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(1,2) 118.9999383 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(1,2) 0.02820323284 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(1,2) 0.359096 ; deg ! CALC -- Heading at end of segment

SEGMENT_TYPE(1,3)   3 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
SEGMENT_RADIUS(1,3) 1184 ; m ! Radius of arc; + -> left turn
SEGMENT_ARC(1,3) 0.822659 ; deg ! Central angle of arc
! S_SEGMENT_END(1,3) 135.9999973 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(1,3) 135.9982555 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(1,3) 0.2567842295 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(1,3) 1.181755 ; deg ! CALC -- Heading at end of segment

SEGMENT_TYPE(1,4)   3 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
SEGMENT_RADIUS(1,4) 932 ; m ! Radius of arc; + -> left turn
SEGMENT_ARC(1,4) 0.553285 ; deg ! Central angle of arc
! S_SEGMENT_END(1,4) 144.9999904 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(1,4) 144.9952983 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(1,4) 0.4858429709 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(1,4) 1.73504 ; deg ! CALC -- Heading at end of segment

SEGMENT_TYPE(1,5)   3 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
SEGMENT_RADIUS(1,5) 588 ; m ! Radius of arc; + -> left turn
SEGMENT_ARC(1,5) 1.948836 ; deg ! Central angle of arc
! S_SEGMENT_END(1,5) 164.99999 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(1,5) 164.9719766 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(1,5) 1.43122418 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(1,5) 3.683876 ; deg ! CALC -- Heading at end of segment

SEGMENT_TYPE(1,6)   3 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
SEGMENT_RADIUS(1,6) 2608 ; m ! Radius of arc; + -> left turn
SEGMENT_ARC(1,6) 0.010985 ; deg ! Central angle of arc
! S_SEGMENT_END(1,6) 165.5000073 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(1,6) 165.4709576 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(1,6) 1.463398861 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(1,6) 3.694861 ; deg ! CALC -- Heading at end of segment

SEGMENT_TYPE(1,7)   3 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
SEGMENT_RADIUS(1,7) 500 ; m ! Radius of arc; + -> left turn
SEGMENT_ARC(1,7) 4.354479 ; deg ! Central angle of arc
! S_SEGMENT_END(1,7) 203.5000052 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(1,7) 203.2624634 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(1,7) 5.350173374 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(1,7) 8.04934 ; deg ! CALC -- Heading at end of segment

SEGMENT_TYPE(1,8)   3 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
SEGMENT_RADIUS(1,8) 404 ; m ! Radius of arc; + -> left turn
SEGMENT_ARC(1,8) 1.560034 ; deg ! Central angle of arc
! S_SEGMENT_END(1,8) 214.500008 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(1,8) 214.131779 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(1,8) 7.038535423 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(1,8) 9.609374 ; deg ! CALC -- Heading at end of segment

SEGMENT_TYPE(1,9)   3 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
SEGMENT_RADIUS(1,9) 332 ; m ! Radius of arc; + -> left turn
SEGMENT_ARC(1,9) 1.725776 ; deg ! Central angle of arc
! S_SEGMENT_END(1,9) 224.5000051 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(1,9) 223.9648346 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(1,9) 8.856061111 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(1,9) 11.33515 ; deg ! CALC -- Heading at end of segment

SEGMENT_TYPE(1,10)  3 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
SEGMENT_RADIUS(1,10) 260 ; m ! Radius of arc; + -> left turn
SEGMENT_ARC(1,10) 2.424052 ; deg ! Central angle of arc
! S_SEGMENT_END(1,10) 235.5000042 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(1,10) 234.701325 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(1,10) 11.24556008 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(1,10) 13.759202 ; deg ! CALC -- Heading at end of segment

SEGMENT_TYPE(1,11)  3 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
SEGMENT_RADIUS(1,11) 196 ; m ! Radius of arc; + -> left turn
SEGMENT_ARC(1,11) 2.630929 ; deg ! Central angle of arc
! S_SEGMENT_END(1,11) 244.5000054 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(1,11) 243.3908522 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(1,11) 13.58605313 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(1,11) 16.390131 ; deg ! CALC -- Heading at end of segment

SEGMENT_TYPE(1,12)  3 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
SEGMENT_RADIUS(1,12) 136 ; m ! Radius of arc; + -> left turn
SEGMENT_ARC(1,12) 0.210646 ; deg ! Central angle of arc
! S_SEGMENT_END(1,12) 245.0000048 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(1,12) 243.8702725 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(1,12) 13.72802251 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(1,12) 16.600777 ; deg ! CALC -- Heading at end of segment

SEGMENT_TYPE(1,13)  3 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
SEGMENT_RADIUS(1,13) 108 ; m ! Radius of arc; + -> left turn
SEGMENT_ARC(1,13) 47.746483 ; deg ! Central angle of arc
! S_SEGMENT_END(1,13) 335.0000049 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(1,13) 310.3694421 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(1,13) 70.47154756 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(1,13) 64.34726 ; deg ! CALC -- Heading at end of segment

SEGMENT_TYPE(1,14)  3 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
SEGMENT_RADIUS(1,14) 148 ; m ! Radius of arc; + -> left turn
SEGMENT_ARC(1,14) 3.097069 ; deg ! Central angle of arc
! S_SEGMENT_END(1,14) 343.0000045 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(1,14) 313.6362239 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(1,14) 77.77309181 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(1,14) 67.444329 ; deg ! CALC -- Heading at end of segment

SEGMENT_TYPE(1,15)  3 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
SEGMENT_RADIUS(1,15) 208 ; m ! Radius of arc; + -> left turn
SEGMENT_ARC(1,15) 3.305526 ; deg ! Central angle of arc
! S_SEGMENT_END(1,15) 355.0000054 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(1,15) 317.9170554 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(1,15) 88.98177448 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(1,15) 70.749855 ; deg ! CALC -- Heading at end of segment

SEGMENT_TYPE(1,16)  3 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
SEGMENT_RADIUS(1,16) 264 ; m ! Radius of arc; + -> left turn
SEGMENT_ARC(1,16) 2.170295 ; deg ! Central angle of arc
! S_SEGMENT_END(1,16) 365.0000069 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(1,16) 321.0344146 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(1,16) 98.48283469 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(1,16) 72.92015 ; deg ! CALC -- Heading at end of segment

SEGMENT_TYPE(1,17)  3 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
SEGMENT_RADIUS(1,17) 332 ; m ! Radius of arc; + -> left turn
SEGMENT_ARC(1,17) 1.725776 ; deg ! Central angle of arc
! S_SEGMENT_END(1,17) 375.0000041 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(1,17) 323.8270621 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(1,17) 108.0845795 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(1,17) 74.645926 ; deg ! CALC -- Heading at end of segment

SEGMENT_TYPE(1,18)  3 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
SEGMENT_RADIUS(1,18) 404 ; m ! Radius of arc; + -> left turn
SEGMENT_ARC(1,18) 14.182124 ; deg ! Central angle of arc
! S_SEGMENT_END(1,18) 475.0000066 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(1,18) 338.1621386 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(1,18) 206.7940175 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(1,18) 88.82805 ; deg ! CALC -- Heading at end of segment

SEGMENT_TYPE(1,19)  0 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
SEGMENT_LENGTH(1,19) 100 ; m ! Segment length
! S_SEGMENT_END(1,19) 575.0000066 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(1,19) 340.2074346 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(1,19) 306.7730991 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(1,19) 88.82805 ; deg ! CALC -- Heading at end of segment

!------------------------------------------------------------------------------------
! ROAD SURFACES
!------------------------------------------------------------------------------------
! Road surfaces define elevation Z and friction MU as functions of global X and Y
! coordinates, using a station-based coordinate system defined with a Reference
! Path. Up to 200 surfaces may be installed to represent sections, intersections,
! multiple lanes, etc. The Z, MU, and RR_SURF values for a road surface are
! provided with Configurable Functions MU_ROAD, ROAD_DZ, RR_SURF, and ROAD_ZS.
! Boundaries that control automatic switching from one road surface to another make
! use of the Configurable Functions ROAD_L_BOUNDARY, ROAD_NEW_ID, and ROAD_NEW_S.

! NROAD             1 ! Number of installed road surfaces (read only)
NROAD_DZ            0 ! [D] Number of ROAD_DZ datasets
DEFINE_ROADS        1 ! VS Command to define road surfaces
CURRENT_ROAD_ID     1 ! ROAD_ID for the vehicle during initialization [I]

ROAD_ID(1)          1 ! [D] ID number for this road
ROAD_PATH_ID(1)     1 ! PATH_ID of reference path used for this road [I]
ROAD_SMAX_NEW_ID(1) 0 ! [D] 0 -> No SMAX limit, -1 -> stop if S > ROAD_SMAX, > 0 ->
                      ! switch to road with this ID if S > ROAD_SMAX
ROAD_SMIN_NEW_ID(1) 0 ! [D] 0 -> No SMIN limit, -1 -> stop if S < ROAD_SMIN, > 0 ->
                      ! switch to road with this ID if S < ROAD_SMIN
ROAD_N_DZ(1)        0 ! [D] Number of ROAD_DZ layers added to the surface

!------------------------------------------------------------------------------------
! START AND STOP INFORMATION FOR PATH
!------------------------------------------------------------------------------------
N_LTARG             0 ! [D] Number of LTARG datasets that are used in this run
PATH_ID_DM          1 ! PATH_ID of reference path for the driver and vehicle [I]
LTARG_ID_DM         0 ! [D] LTARG_ID of reference LTARG for the driver model (0 ->
                      ! no reference LTARG)
OPT_INIT_PATH       1 ! [D] Set Xo, Yo, and Yaw to match path PATH_ID_DM and target
                      ! LTARG_ID_DM at station SSTART? 1 -> yes, 0 -> no [I]
OPT_DIRECTION       1 ! Travel direction along path PATH_ID_DM: 0 -> set to 1 or -1
                      ! using SSTART and SSTOP values (legacy); 1 -> increasing
                      ! station, -1 -> decreasing station [I]
SSTART              0 ; m ! [D] Start the vehicle at this station on path PATH_ID_DM
                      ! and possibly with target LTARG_ID_DM. The current station
                      ! on this path is the output variable "Station", which is
                      ! also a state variable. [I]

!------------------------------------------------------------------------------------
! CONFIGURABLE FUNCTIONS
!------------------------------------------------------------------------------------

! MU_ROAD: Tire/road friction coefficient (MU) for a road surface. Use MU = -1 for
! original tire data (no scaling). MU can be a nonlinear CARPET function of lateral
! position and station or a function of station (CONSTANT or TABLE) combined with a
! function MU_ROAD_L of lateral position (CONSTANT or TABLE). Alternatively, a custom
! equation can be defined at runtime. MU from the calculation can be adjusted with
! MU_ROAD_GAIN and MU_ROAD_OFFSET. Station used in the calculation can be adjusted
! with SSCALE_MU_ROAD and SSTART_MU_ROAD. Lateral position used in the calculation
! can be adjusted with L_SCALE_MU_ROAD and L_START_MU_ROAD. This configurable
! function supports 200 datasets; if indices shown below are not used, e.g., (2), the
! current value of the index IROAD is used to identify the dataset when reading data.

MU_ROAD_CONSTANT(1) -1 ; - ! [D] Constant MU component due to station
MU_ROAD_GAIN(1)     1 ! Gain multiplied with calculated value to get MU
MU_ROAD_OFFSET(1)   0 ; - ! Offset added (after gain) to get MU
MU_ROAD_COMBINE(1) MULTIPLY ! How to combine the two components
MU_ROAD_L_CONSTANT(1) 1 ; - ! [D] Constant MU component due to lateral position

! ROAD_NEW_ID: Left/right boundary: 0 -> no boundary, -1 stop when L reaches
! boundary, > 0 ID of adjacent road. ID is a function of S (CONSTANT, COEFFICIENT, or
! TABLE). Alternatively, a custom equation can be defined at runtime. ID from the
! calculation can be adjusted with ROAD_NEW_ID_GAIN and ROAD_NEW_ID_OFFSET. S used in
! the calculation can be adjusted with SSCALE_ROAD_NEW_ID and SSTART_ROAD_NEW_ID.
! This configurable function supports 400 datasets; if indices shown below are not
! used, e.g., (1,2), the current values of the indices IROAD and ISIDE are used to
! identify the dataset when reading data.

ROAD_NEW_ID_CONSTANT(1,1) 0 ; - ! [D] Constant ID, Road 1, left side boundary
ROAD_NEW_ID_OFFSET(1,1) 0 ; - ! Offset added (after gain) to get ID

ROAD_NEW_ID_CONSTANT(1,2) 0 ; - ! [D] Constant ID, Road 1, right side boundary
ROAD_NEW_ID_OFFSET(1,2) 0 ; - ! Offset added (after gain) to get ID

! ROAD_ZS: Road elevation component related only to road station S. Elevation is a
! function of station (CONSTANT, COEFFICIENT, or TABLE). Elevation from the
! calculation can be adjusted with ROAD_ZS_GAIN and ROAD_ZS_OFFSET. Station used in
! the calculation can be adjusted with SSCALE_ROAD_ZS and SSTART_ROAD_ZS. The
! derivative of this function is used internally. This configurable function supports
! 200 datasets; if indices shown below are not used, e.g., (2), the current value of
! the index IROAD is used to identify the dataset when reading data.

ROAD_ZS_CONSTANT(1) 0 ; m ! [D] Constant elevation
ROAD_ZS_OFFSET(1)   0 ; m ! Offset added (after gain) to get elevation

! RR_SURF: Tire/road rolling resistance surface-effect coefficient. RR_SURF can be a
! nonlinear CARPET function of lateral position and station or a function of station
! (CONSTANT or TABLE) combined with a function RR_SURF_L of lateral position
! (CONSTANT or TABLE). Alternatively, a custom equation can be defined at runtime.
! RR_SURF from the calculation can be adjusted with RR_SURF_GAIN and RR_SURF_OFFSET.
! Station used in the calculation can be adjusted with SSCALE_RR_SURF and
! SSTART_RR_SURF. Lateral position used in the calculation can be adjusted with
! L_SCALE_RR_SURF and L_START_RR_SURF. This configurable function supports 200
! datasets; if indices shown below are not used, e.g., (2), the current value of the
! index IROAD is used to identify the dataset when reading data.

RR_SURF_CONSTANT(1) 1 ; - ! [D] Constant RR_SURF component due to station
RR_SURF_GAIN(1)     1 ! Gain multiplied with calculated value to get RR_SURF
RR_SURF_OFFSET(1)   0 ; - ! Offset added (after gain) to get RR_SURF
RR_SURF_COMBINE(1) MULTIPLY ! How to combine the two components
RR_SURF_L_CONSTANT(1) 1 ; - ! [D] Constant RR_SURF component due to lateral position


END
