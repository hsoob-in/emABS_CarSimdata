PARSFILE
! CarSim 2021.0
! Revision 153671, December 9, 2020
MODEL_LAYOUT I_S

DATASET_TITLE Split Mu Braking Test w/ ESC
CATEGORY * CS 2021.0 - New Proving Ground
TITLE Split Mu Braking Test w/ ESC <* CS 2021.0 - New Proving Ground>

! Echo: Results\Run_22b236e6-0ff9-44aa-90dd-63ee4fb827ff\LastRun_echo.par
! This run was made 18:47 on December 10, 2020.

!------------------------------------------------------------------------------------
! SYSTEM PARAMETERS (SIMULATION OPTIONS)
!------------------------------------------------------------------------------------
! [D] (default) indicates that a parameter was not set by reading from a Parsfile.
! [I] indicates that changing the parameter via an Event triggers an initialization.
! [L] indicates that the parameter is locked once the simulation starts.

ID_EVENT            0 ; - ! ID number that can be assigned to the current event
ID_RUN              0 ; - ! ID number that can be assigned to a simulation run
IPRINT             50 ! Print interval: output time step TSTEP_WRITE = TSTEP*IPRINT;
                      ! set IPRINT = 0 for debug (TSTEP_WRITE = T_DT) [L]
NDIGITS_ECHO       10 ! [D] Max. no. of digits for printing floating-point numbers
! NIMPORT           0 ! Number of variables activated for import (read only)
! NOUT_ANI_LIVE    70 ! Number of variables sent live to animators (read only)
! NOUT_EXPORT       0 ! Number of output variables activated for export (read only)
! NOUT_WRITE       99 ! Number of output variables written to file (read only)
OPT_ALL_WRITE       0 ! Write all outputs to file? 1 -> all, 0 -> only activated
                      ! outputs
OPT_BUFFER_WRITE    0 ! [D] Retain output data in memory buffer until end of run? 0
                      ! -> no, write immediately to file, 1 -> yes, buffer during
                      ! run and write to file after run finishes [L]
OPT_CHECK_MATH      2 ! [D] Check for math exceptions? 2 -> as errors, 1 -> as
                      ! warnings, 0 -> no checks
OPT_ECHO_ALL_PARS   0 ! [D] Echo all parameters in this VS Solver? 0 -> no, 1 -> yes
OPT_ECHO_ALL_UNITS  0 ! [D] Echo list of units and scale factors? 0 -> no, 1 -> yes
OPT_ECHO_ANI_LIVE   0 ! [D] Echo variables sent live to video? 0 -> no, 1 -> yes
OPT_ECHO_ICS        0 ! [D] Echo initial conditions? 0 -> no, 1 -> yes
OPT_ECHO_KEYWORDS_LC 0 ! [D] Echo all keywords in lowercase? 0 -> no, 1 -> yes
OPT_ECHO_WRITE      0 ! [D] Echo written outputs? 0 -> no, 1 -> yes
OPT_ENABLE_PYTHON   0 ! [D] Enable access to embedded Python? 0 -> no, 1 -> yes
OPT_ERROR_DIALOG    1 ! [D] Show pop-up dialog box if fatal error occurs: 1 -> yes
                      ! (normal use), 0 -> no (for batch runs)
OPT_ERROR_DUP_DEF   0 ! [D] Handle case where DEFINE_IMPORT, DEFINE_OUTPUT,
                      ! DEFINE_PARAMETER, or DEFINE_VARIABLE attempts to define a
                      ! variable with a name that is already in use. 0 -> write
                      ! warning in log file, 1 -> generate error [L]
OPT_ERROR_SHOW_ALL  0 ! [D] Show pop-up boxes for all errors: 0 -> only show the
                      ! first, 1 -> also show subsequent errors
OPT_INT_METHOD      0 ! Numerical integration method: 0 -> AB-2; 1 -> RK-2; 2 ->
                      ! AM-2; 3 -> AM-3; 4 -> AM-4; -1 -> Euler. AB-2 and Euler are
                      ! full-step methods (TSTEP = 0.0005s is typical); AM and RK-2
                      ! use half-steps (TSTEP = 0.001s is typical, i.e., half-step
                      ! = 0.0005s) [L]
OPT_LINEARIZATION   0 ! [D] Numerical linearization applied for: 0 -> all ODEs of
                      ! the model, 1 -> only selected derivatives [L]
OPT_LOG_DEBUG       0 ! [D] Log file writing: 0 -> normal, 1 -> crash expected
OPT_LOG_VERBOSE     2 ! [D] Log file verbosity: 2 -> errors + most events + parsfile
                      ! names, 0 -> errors only, 1 -> errors + events, 3 ->
                      ! advanced diagnostics
OPT_LOG_WARNINGS    1 ! [D] Write warnings into log file? 1 -> yes, 0 -> no
OPT_PAUSE           0 ! [D] Pause at end of run with window open? 0 -> no, 1 -> yes
OPT_SKIP_INIT_DYN   0 ! [D] Skip initial dynamic calculations (for some RT systems)?
                      ! 0 -> no, 1 -> yes
OPT_SORT_WRITE      1 ! [D] Sort written outputs? 1 -> alphabetical, 0 -> as entered
OPT_STOP           -1 ! Option for stopping the run: 0 -> stop when T reaches TSTOP;
                      ! 1 -> stop when T reaches TSTOP or station reaches SSTOP; -1
                      ! -> run until stopped using VS Commands or external control
OPT_VS_FILETYPE     2 ! Type of output file: 1-> 64-bit VS, 2-> 32-bit VS, 3 ->
                      ! 32-bit ERD, 4 -> text CSV (no binary), 0 -> no output file
OPT_WRITE           1 ; - ! [D] Write outputs when T > TSTART_WRITE? 1 -> write, 0
                      ! -> don't write; change this using VS Commands or Events
! RTIME    0.17771813 ; - ! CALC -- Computational efficiency (sec/sim. sec)
TSTART        10.6925 ; s ! Starting time for the simulation clock
TSTART_T_EVENT      0 ; s ! [D] Event clock reset time: T_EVENT = T - TSTART_T_EVENT
TSTART_WRITE  10.6925 ; s ! Start writing outputs when this time is reached
TSTEP          0.0005 ; s ! Time step for numerical integration [L]
! TSTEP_WRITE   0.025 ; s ! CALC -- Time interval in output time-series file
! T_DT         0.0005 ; s ! CALC -- Time increment between calculations

!------------------------------------------------------------------------------------
! SYSTEM CONSTANTS
!------------------------------------------------------------------------------------
! DR      57.29577951 ; - ! Deg/rad symbol to use in formulas (read-only)
! G           9.80665 ; - ! Symbol for gravity constant m/s/s (read-only)
! PI      3.141592654 ; - ! Symbol for PI to use in formulas (read-only)
! ZERO              0 ; - ! Symbol for zero to use in VS Events (read-only)

!------------------------------------------------------------------------------------
! VEHICLE INITIALIZATION, LIMITS, AND GRAVITY
!------------------------------------------------------------------------------------
R_GRAVITY           1 ; - ! [D] Scale factor applied to acceleration of gravity [I]

OPT_INIT_CONFIG     0 ! Initialize vehicle height, pitch, roll, and deflection
                      ! variables? 1 -> yes, 0 -> no, start 'as is' [I]
OPT_INIT_SPEED      0 ! Initialize vehicle speed variables? 1 -> yes, 0 -> no, start
                      ! 'as is' [I]
ROLL_MAX_STOP      80 ; deg ! [D] Maximum roll angle magnitude: stop the run if
                      ! reached
VLOW_STOP          -1 ; km/h ! Minimum allowed absolute speed: stop the run if
                      ! reached; use -1 to disable

!------------------------------------------------------------------------------------
! VEHICLE CONFIGURATION
!------------------------------------------------------------------------------------
! N_VEHICLES        1 ! Number of vehicles (lead units) (read-only)
! VEHICLE_NUNITS    1 ! Number of vehicle units (read-only)
! VEHICLE_NAXLES    2 ! Number of vehicle axles (read-only)
! VEHICLE_AXLE_MAP(1) 2 ! Number of axles on unit 1 (read-only)

!------------------------------------------------------------------------------------
! VEHICLE
!------------------------------------------------------------------------------------
! The instant center of gravity is calculated every time step using the sprung mass
! + axles and wheels + payloads. Output variables for the vehicle such as Vx, Vy,
! Vz, Ax, Ay, and Az are based on the motion of this instant CG for the total laden
! (TL) unit.

! H_CG_TL 875.1326019 ; mm ! CALC -- Height of TL CG
! LX_CG_TL 1385.648565 ; mm ! CALC -- X distance TL CG is behind origin
! Y_CG_TL -0.002013503107 ; mm ! CALC -- Y coordinate of TL CG
! M_TL         2169.2 ; kg ! CALC -- TL mass
! IXX_TL   1843.11393 ; kg-m2 ! CALC -- TL roll inertia moment
! IYY_TL  4657.637857 ; kg-m2 ! CALC -- TL pitch inertia moment
! IZZ_TL  3995.323256 ; kg-m2 ! CALC -- TL yaw inertia moment

!------------------------------------------------------------------------------------
! SPRUNG MASS
!------------------------------------------------------------------------------------
! The following parameters apply for the sprung mass without payloads, designated
! SU (sprung mass unladen). If any payloads are attached, the combined inertia
! properties (SU sprung mass + payloads) are also listed and designated SL (sprung
! mass laden).

H_CG_SU           720 ; mm ! Height of CG of sprung mass, unladen (SU) [I]
LX_CG_SU         1180 ; mm ! X distance SU CG is behind sprung mass origin [I]
Y_CG_SU             0 ; mm ! Y coordinate of SU CG [I]
M_SU             1590 ; kg ! Mass of unladen sprung mass (SU) [I]
IXX_SU          894.4 ; kg-m2 ! Roll inertia for unladen sprung mass [I]
IYY_SU         2687.1 ; kg-m2 ! Pitch inertia for SU [I]
IZZ_SU         2687.1 ; kg-m2 ! Yaw inertia for SU [I]
IXY_SU              0 ; kg-m2 ! XY product of inertia for SU [I]
IXZ_SU              0 ; kg-m2 ! XZ product of inertia for SU [I]
IYZ_SU              0 ; kg-m2 ! YZ product of inertia for SU [I]

! N_PAYLOADS        1 ! No. of payloads attached to this sprung mass (read only)
! H_CG_SL 961.8478261 ; mm ! CALC -- Height of laden sprung mass CG (SL)
! LX_CG_SL 1359.347826 ; mm ! CALC -- X distance SL CG is behind origin
! Y_CG_SL           0 ; mm ! CALC -- Y coord. of laden sprung mass CG
! M_SL           1840 ; kg ! CALC -- Mass of laden sprung mass (SL)
! IXX_SL  1606.017717 ; kg-m2 ! CALC -- Roll inertia for SL
! IYY_SL  3810.332935 ; kg-m2 ! CALC -- Pitch inertia for SL
! IZZ_SL  3140.385217 ; kg-m2 ! CALC -- Yaw inertia for SL
! IXY_SL            0 ; kg-m2 ! CALC -- XY product of inertia for SL
! IXZ_SL  507.5902174 ; kg-m2 ! CALC -- XZ product of inertia for SL
! IYZ_SL            0 ; kg-m2 ! CALC -- YZ product of inertia for SL

HT_SM            1714 ; mm ! Reference height of sprung mass (maybe for target)
LEN_SM           5500 ; mm ! Reference length of sprung mass (maybe for target)
WID_SM           2176 ; mm ! Reference width of sprung mass (maybe for target)
LX_F_SM          1000 ; mm ! Length from front to control pt (maybe for target)

!------------------------------------------------------------------------------------
! PAYLOADS
!------------------------------------------------------------------------------------
! NLOAD             1 ! Number of installed payloads (read only)
DEFINE_PAYLOADS     1 ! VS Command to add payloads

PAYLOAD_NAME(1)     1 ; Roof Cargo Box
LX_CG_PL(1)      2500 ; mm ! Distance payload mass center is behind origin (-X) [I]
Y_CG_PL(1)          0 ; mm ! Y coordinate of payload mass center [I]
Z_CG_PL(1)       2500 ; mm ! Z coordinate of payload mass center [I]
M_PL(1)           250 ; kg ! Mass of payload [I]
IXX_PL(1)       27.14 ; kg-m2 ! Roll moment of inertia of payload [I]
IYY_PL(1)       62.34 ; kg-m2 ! Pitch moment of inertia of payload [I]
IZZ_PL(1)       76.87 ; kg-m2 ! Yaw moment of inertia of payload [I]
IXY_PL(1)           0 ; kg-m2 ! XY product of inertia of payload [I]
IXZ_PL(1)           0 ; kg-m2 ! XZ product of inertia of payload [I]
IYZ_PL(1)           0 ; kg-m2 ! YZ product of inertia of payload [I]

!------------------------------------------------------------------------------------
! AERODYNAMICS
!------------------------------------------------------------------------------------
! Aerodynamic coefficients are largely defined with the nonlinear Configurable
! Functions xx_AERO_SHAPING (where xx = FX, FY, etc.). Wind speed and direction are
! defined with the functions WIND_HEADING and WIND_SPEED.

D_AIR           1.206 ; kg/m3 ! Air mass density

AREA_AERO           3 ; m2 ! Frontal cross-section area
H_REF_AERO          0 ; mm ! Height of aerodynamic reference point
L_REF_AERO       2950 ; mm ! Aerodynamic reference length
X_REF_AERO      -1475 ; mm ! X coordinate of aerodynamic reference point
Y_REF_AERO          0 ; mm ! Y coordinate of aerodynamic reference point

!------------------------------------------------------------------------------------
! SUSPENSION GEOMETRY AND INERTIA
!------------------------------------------------------------------------------------
! Suspension geometry is specified with the following parameters along with some
! nonlinear Configurable Functions that can use tables of measured or simulated
! suspension kinematical relationships. For independent suspensions, these include
! the functions CAMBER, SUSP_DIVE, SUSP_LAT, SUSP_X, and TOE. For solid-axle
! suspensions, these include the functions SUSP_AXLE_ROLL_STEER, SUSP_DIVE_AXLE,
! SUSP_X_AXLE, and SUSP_Y_AXLE_ROLL. All coordinate parameters are relative to the
! origin of the sprung mass (SM) coordinate system.

! Generic/independent suspension for axle 1
OPT_JNC_DESIGN(1)   1 ! Specify JNC_DESIGN (jounce when the wheel center is at the
                      ! reference Z coordinate H_WC) explicitly? 1 -> yes, 0 -> no,
                      ! calculate JNC_DESIGN from the ride spring data [I]
A_CAMBER(1,1)       0 ; deg ! Static camber for wheel L1 [I]
A_CAMBER(1,2)       0 ; deg ! Static camber for wheel R1 [I]
A_TOE(1,1)        0.2 ; deg ! Static toe for wheel L1 [I]
A_TOE(1,2)        0.2 ; deg ! Static toe for wheel R1 [I]
H_WC(1,1)         390 ; mm ! Reference Z coordinate of wheel center L1 (in SM
                      ! coordinate system) [I]
H_WC(1,2)         390 ; mm ! Reference Z coordinate of wheel center R1 [I]
! ISPIN(1,1)     3.37 ; kg-m2 ! CALC -- Spin inertia for wheel + tire L1 [I]
! ISPIN(1,2)     3.37 ; kg-m2 ! CALC -- Spin inertia for wheel + tire R1 [I]
! ISPIN_XXZZ(1,1) 1.89 ; kg-m2 ! CALC -- IXX/IZZ inertia for wheel + tire L1 [I]
! ISPIN_XXZZ(1,2) 1.89 ; kg-m2 ! CALC -- IXX/IZZ inertia for wheel + tire R1 [I]
IW(1,1)          0.57 ; kg-m2 ! Spin inertia for wheel L1 [I]
IW(1,2)          0.57 ; kg-m2 ! Spin inertia for wheel R1 [I]
IW_XXZZ(1,1)     0.29 ; kg-m2 ! IXX/IZZ inertia for wheel L1 [I]
IW_XXZZ(1,2)     0.29 ; kg-m2 ! IXX/IZZ inertia for wheel R1 [I]
JNC_DESIGN(1,1)     0 ; mm ! Jounce when center of wheel L1 is at the reference
                      ! coordinate H_WC [I]
JNC_DESIGN(1,2)     0 ; mm ! Jounce when center of wheel R1 is at H_WC [I]
L_TRACK(1)       1575 ; mm ! Track width, wheel-center to wheel-center, axle 1 [I]
LX_AXLE(1)          0 ; mm ! [D] X dist. axle 1 is behind the sprung-mass origin [I]
M_US_IND(1,1)   14.83 ; kg ! Unsteered suspension mass for wheel L1 [I]
M_US_IND(1,2)   14.83 ; kg ! Unsteered suspension mass for wheel R1 [I]
M_US_STR(1,1)   36.27 ; kg ! Steered mass for wheel L1 [I]
M_US_STR(1,2)   36.27 ; kg ! Steered mass for wheel R1 [I]
! M_US(1)       158.2 ; kg ! CALC -- Total unsprung mass for axle 1
! R_US_STR(1) 0.8125158028 ; - ! CALC -- Steered fraction of unsprung mass, axle 1
! Y_CG_SUSP(1)      0 ; mm ! CALC -- Y coord. for total unsprung mass, axle 1 [I]
Y_CL_SUSP(1)        0 ; mm ! Y coord. for suspension centerline, axle 1 [I]

! Solid-axle suspension for axle 2
OPT_JNC_DESIGN(2)   1 ! Specify JNC_DESIGN explicitly for axle 2? [I]
A_CAMBER(2,1)       0 ; deg ! Static camber for wheel L2 [I]
A_CAMBER(2,2)       0 ; deg ! Static camber for wheel R2 [I]
A_TOE(2,1)          0 ; deg ! Static toe for wheel L2 [I]
A_TOE(2,2)          0 ; deg ! Static toe for wheel R2 [I]
H_CG_AXLE(2)      385 ; mm ! Z coordinate of axle 2 CG [I]
H_WC(2,1)         380 ; mm ! Reference Z coordinate of wheel center L2 [I]
H_WC(2,2)         380 ; mm ! Reference Z coordinate of wheel center R2 [I]
IA(2)              24 ; kg-m2 ! Yaw and roll moment of inertia, axle 2 [I]
! ISPIN(2,1)     3.45 ; kg-m2 ! CALC -- Spin inertia for wheel + tire L2 [I]
! ISPIN(2,2)     3.45 ; kg-m2 ! CALC -- Spin inertia for wheel + tire R2 [I]
! ISPIN_XXZZ(2,1) 1.93 ; kg-m2 ! CALC -- IXX/IZZ inertia for wheel + tire L2 [I]
! ISPIN_XXZZ(2,2) 1.93 ; kg-m2 ! CALC -- IXX/IZZ inertia for wheel + tire R2 [I]
IW(2,1)          0.65 ; kg-m2 ! Spin inertia for wheel L2 [I]
IW(2,2)          0.65 ; kg-m2 ! Spin inertia for wheel R2 [I]
IW_XXZZ(2,1)     0.33 ; kg-m2 ! IXX/IZZ inertia for wheel L2 [I]
IW_XXZZ(2,2)     0.33 ; kg-m2 ! IXX/IZZ inertia for wheel R2 [I]
JNC_DESIGN(2,1)     0 ; mm ! Jounce when center of wheel L2 is at H_WC [I]
JNC_DESIGN(2,2)     0 ; mm ! Jounce when center of wheel R2 is at H_WC [I]
L_TRACK(2)       1575 ; mm ! Track width, wheel-center to wheel-center, axle 2 [I]
LX_AXLE(2)       2950 ; mm ! X dist. axle 2 is behind the sprung-mass origin [I]
M_US_AXLE(2)      115 ; kg ! Unsteered mass for axle 2 [I]
M_US_STR(2,1)       0 ; kg ! Steered mass for wheel L2 [I]
M_US_STR(2,2)       0 ; kg ! Steered mass for wheel R2 [I]
! M_US(2)         171 ; kg ! CALC -- Total unsprung mass for axle 2
! R_US_STR(2) 0.3274853801 ; - ! CALC -- Steered fraction of unsprung mass, axle 2
Y_CG_AXLE(2)        0 ; mm ! [D] Y offset of M_US_AXLE CG from track center [I]
! Y_CG_SUSP(2)      0 ; mm ! CALC -- Y coord. for total unsprung mass, axle 2 [I]
Y_CL_SUSP(2)        0 ; mm ! Y coord. for suspension centerline, axle 2 [I]

!------------------------------------------------------------------------------------
! SUSPENSION SPRINGS AND DAMPERS
!------------------------------------------------------------------------------------
! Suspension springs and dampers are specified with the following parameters, along
! with the nonlinear Configurable Functions CMP_DAMP, CMP_JSTOP, CMP_RSTOP,
! CMP_SPR_SEAT, FD, F_JNC_STOP, F_REB_STOP, FS_COMP, FS_EXT, and MX_AUX. All
! suspension models calculate compliance effects using the functions CC_FX, CI_FY,
! CI_MZ, CS_FY, CS_MZ, and CT_FX. Independent suspensions also use the functions
! CD_MY, C_LAT, and C_LONG. Solid-axle suspensions also use the functions
! C_LAT_AXLE and C_LONG_AXLE.

! Generic/independent suspension for axle 1
OPT_EXT_SP(1,1)     0 ! External option for spring L1: 0 -> use built-in spring
                      ! (with or without external model), 1 -> disable built-in
                      ! spring and use an external model [I]
OPT_EXT_SP(1,2)     0 ! Disable built-in spring R1? 0 -> no, 1 -> yes [I]
OPT_SUSP_COMPLIANCE_METHOD(1) 1 ! [D] Subtract offset from each compliance table to
                                ! avoid double-counting kinematical offset? 1 ->
                                ! Yes, subtract the offset, 0 -> No, use compliance
                                ! table as is [I]
CMP_OFFSET(1,1)     0 ; mm ! Initial compression of external spring L1 [I]
CMP_OFFSET(1,2)     0 ; mm ! Initial compression of external spring R1 [I]
! CMP_DESIGN(1,1) 52.42928259 ; mm ! CALC -- Compression at design load, spring L1
! CMP_DESIGN(1,2) 52.42928259 ; mm ! CALC -- Compression at design load, spring R1
DAUX(1)             0 ; N-m-s/deg ! Auxiliary roll damping, axle 1
! FSA_DESIGN(1) 9355.5441 ; N ! CALC -- Design Load (susp., unladen), axle 1
! FSA_L(1) 9729.526515 ; N ! CALC -- Static suspension load, laden, axle  1
FS_OFFSET(1,1)      0 ; N ! Force offset subtracted from built-in spring L1 [I]
FS_OFFSET(1,2)      0 ; N ! Force offset subtracted from built-in spring R1 [I]
! FS_STATIC(1,1) 7960.666434 ; N ! CALC -- Static spring force, laden, spring L1
! FS_STATIC(1,2) 7960.666434 ; N ! CALC -- Static spring force, laden, spring R1
! FZA_L(1) 11280.93855 ; N ! CALC -- Static ground load, laden, axle 1
! FZA_UL(1) 10906.95613 ; N ! CALC -- Static ground load, unladen, axle 1
! FZ_STATIC(1,1) 5640.469273 ; N ! CALC -- Static ground force, laden, wheel L1
! FZ_STATIC(1,2) 5640.469273 ; N ! CALC -- Static ground force, laden, wheel R1
! KA_ROLL(1) 3544.540384 ; N-m/deg ! CALC -- Total roll stiffness, axle 1
L_SPG_ADJ(1,1)      0 ; mm ! Upper seat height increase for spring L1 to reduce
                      ! spring compression [I]
L_SPG_ADJ(1,2)      0 ; mm ! Upper seat height increase for spring R1 [I]
SPRING_COMP_BETA(1,1) 2 ; mm ! Reference hysteretic compression (1/3 of the
                        ! compression needed to go from the lower force boundary to
                        ! the upper force boundary) for ride spring L1 
SPRING_COMP_BETA(1,2) 2 ; mm ! Ref. hysteretic compression, ride spring R1
SPRING_EXT_BETA(1,1) 2 ; mm ! Ref. hysteretic extension, ride spring L1
SPRING_EXT_BETA(1,2) 2 ; mm ! Ref. hysteretic extension, ride spring R1

! Solid-axle suspension for axle 2
OPT_EXT_SP(2,1)     0 ! Disable built-in spring L2? 0 -> no, 1 -> yes [I]
OPT_EXT_SP(2,2)     0 ! Disable built-in spring R2? 0 -> no, 1 -> yes [I]
OPT_SUSP_COMPLIANCE_METHOD(2) 1 ! [D] Adjust compliance tables to avoid
                                ! double-counting? 1 -> Adjust, 0 -> No [I]
CMP_OFFSET(2,1)     0 ; mm ! Initial compression of external spring L2 [I]
CMP_OFFSET(2,2)     0 ; mm ! Initial compression of external spring R2 [I]
! CMP_DESIGN(2,1) 67.79379783 ; mm ! CALC -- Compression at design load, spring L2
! CMP_DESIGN(2,2) 67.79379783 ; mm ! CALC -- Compression at design load, spring R2
DAUX(2)             0 ; N-m-s/deg ! Auxiliary roll damping, axle 2
DMP_AX(2,1)         0 ; deg ! [D] Front-view inclination angle for damper L2 [I]
DMP_AX(2,2)         0 ; deg ! [D] Front-view inclination angle for damper R2 [I]
DMP_AY(2,1)         0 ; deg ! [D] Side-view inclination angle for damper L2 [I]
DMP_AY(2,2)         0 ; deg ! [D] Side-view inclination angle for damper R2 [I]
DMP_LEN(2,1)        0 ; mm ! [D] Length at design for damper L2 [I]
DMP_LEN(2,2)        0 ; mm ! [D] Length at design for damper R2 [I]
SPG_AX(2,1)         0 ; deg ! [D] Front-view inclination angle for spring L2 [I]
SPG_AX(2,2)         0 ; deg ! [D] Front-view inclination angle for spring R2 [I]
SPG_AY(2,1)         0 ; deg ! [D] Side-view inclination angle for spring L2 [I]
SPG_AY(2,2)         0 ; deg ! [D] Side-view inclination angle for spring R2 [I]
SPG_LEN(2,1)        0 ; mm ! [D] Length at design for spring L2 [I]
SPG_LEN(2,2)        0 ; mm ! [D] Length at design for spring R2 [I]
! FSA_DESIGN(2) 6237.0294 ; N ! CALC -- Design Load (susp., unladen), axle 2
! FSA_L(2) 8314.709485 ; N ! CALC -- Static suspension load, laden, axle  2
FS_OFFSET(2,1)      0 ; N ! Force offset subtracted from built-in spring L2 [I]
FS_OFFSET(2,2)      0 ; N ! Force offset subtracted from built-in spring R2 [I]
! FS_STATIC(2,1) 4157.354742 ; N ! CALC -- Static spring force, laden, spring L2
! FS_STATIC(2,2) 4157.354742 ; N ! CALC -- Static spring force, laden, spring R2
! FZA_L(2) 9991.646635 ; N ! CALC -- Static ground load, laden, axle 2
! FZA_UL(2) 7913.96655 ; N ! CALC -- Static ground load, unladen, axle 2
! FZ_STATIC(2,1) 4995.823317 ; N ! CALC -- Static ground force, laden, wheel L2
! FZ_STATIC(2,2) 4995.823317 ; N ! CALC -- Static ground force, laden, wheel R2
! KA_ROLL(2) 1088.053048 ; N-m/deg ! CALC -- Total roll stiffness, axle 2
L_DAMPERS(2)     1100 ; mm ! Distance between dampers on axle 2 [I]
Y_DAMPERS(2)        0 ; mm ! [D] Lateral (left) offset of dampers on axle 2 [I]
L_JNC_STOPS(2)   1200 ; mm ! Distance between jounce stops on axle 2 [I]
L_REB_STOPS(2)   1200 ; mm ! Distance between rebound stops on axle 2 [I]
L_SPRINGS(2)     1200 ; mm ! Distance between springs on axle 2 [I]
Y_SPRINGS(2)        0 ; mm ! [D] Lateral (left) offset of springs on axle 2 [I]
L_SPG_ADJ(2,1)      0 ; mm ! Upper seat height increase for spring L2 [I]
L_SPG_ADJ(2,2)      0 ; mm ! Upper seat height increase for spring R2 [I]
SPRING_COMP_BETA(2,1) 3 ; mm ! Ref. hysteretic compression, ride spring L2
SPRING_COMP_BETA(2,2) 3 ; mm ! Ref. hysteretic compression, ride spring R2
SPRING_EXT_BETA(2,1) 3 ; mm ! Ref. hysteretic extension, ride spring L2
SPRING_EXT_BETA(2,2) 3 ; mm ! Ref. hysteretic extension, ride spring R2

!------------------------------------------------------------------------------------
! STEERING
!------------------------------------------------------------------------------------
! The steering system is specified with the following parameters along with the
! nonlinear Configurable Functions F_BOOST_R, GEAR_ROT, M_BOOST_G, M_SW, M_TBAR,
! MZ_PARKING_STEER, RACK_KIN, RACK_TRAVEL, R_STEER_SPEED, STEER_COMP, and
! STEER_KIN. Open-loop steering can be specified with the function STEER_SW (angle
! control) or M_STR_IN (torque control)

OPT_M_SW_CALC       1 ! Option for calculating steering wheel torque when the angle
                      ! is controlled (OPT_STR_BY_TRQ = 0): 0 -> from table, 1 ->
                      ! calculated (see the steering Help document for details) [I]
OPT_POWER           1 ! Power steering? 0 -> No, 1 -> Rack or Gear assist, 2 ->
                      ! Column assist [I]
OPT_STEER_DEF       1 ! How are steer angles of knuckles defined? 1 -> as in K&C
                      ! test, 0 -> rotation angle about a kingpin axis
OPT_I_GEAR_IN       0 ! Add wheel and suspension inertias for axle 1 to I_GEAR_IN? 0
                      ! -> no, 1 = yes [I]
BETA_COL          0.1 ; deg ! Ref hysteretic angle for steering column friction
D_COL           0.002 ; N-m-s/deg ! Steering column viscous damping
D_TBAR              0 ; N-m-s/deg ! [D] Torsion bar viscous damping
HYS_COL           0.2 ; N-m ! Steering column friction torque
I_COL            0.02 ; kg-m2 ! Steering column inertia used with torque input
I_GEAR_IN    0.000337 ; kg-m2 ! Steering system inertia
F_BOOST_MAX      7000 ; N ! Maximum power steering boost force
TC_BOOST         0.04 ; s ! Time constant for power steering boost
A_STR_STOP_L      -45 ; deg ! Steer angle limit during torque control (Left)
A_STR_STOP_R       45 ; deg ! Steer angle limit during torque control (Right)
K_STR_STOP_L        0 ; N-m/deg ! Steering stop stiffness (Left)
K_STR_STOP_R        0 ; N-m/deg ! Steering stop stiffness (Right)

OPT_STEER_EXT(1)    0 ! Steer model option for axle 1: 0 -> Internal model, 1 -> Not
                      ! steered, 2 -> External gear/rack, 3 -> External except
                      ! tie-rod linkage, 4 -> Full external model [I]
OPT_CS(1)           0 ! [D] Compliance steer option, axle 1: 0 -> symmetric, 1 ->
                      ! control L wheel, 2 -> control R wheel
OPT_RACK(1)         1 ! Steer gear type: 0 -> Recirc. ball, 1 -> Rack & pinion [I]
A_CASTER(1,1)     3.5 ; deg ! Caster for wheel L1 [I]
A_CASTER(1,2)     3.5 ; deg ! Caster for wheel R1 [I]
A_KPI(1,1)          8 ; deg ! Kingpin inclination for wheel L1 [I]
A_KPI(1,2)          8 ; deg ! Kingpin inclination for wheel R1 [I]
A_MZ_BETA(1,1)      5 ; deg ! Ref. hysteresis angle for L1 parking steer torque
A_MZ_BETA(1,2)      5 ; deg ! Ref. hysteresis angle for R1 parking steer torque
BETA_RACK(1)      0.5 ; mm ! Ref hys. displ. for steering rack friction, axle 1
D_RACK(1)         4.5 ; N-s/mm ! Steering rack viscous damping, axle 1
HYS_RACK(1)       250 ; N ! Steering rack hysteresis, axle 1
L_KPO(1,1)       39.5 ; mm ! Lateral kingpin offset to center of wheel L1 [I]
L_KPO(1,2)       39.5 ; mm ! Lateral kingpin offset to center of wheel R1 [I]
X_KPO(1,1)         -1 ; mm ! X coord. of kingpin at center of wheel L1 [I]
X_KPO(1,2)         -1 ; mm ! X coord. of kingpin at center of wheel R1 [I]

OPT_STEER_EXT(2)    1 ! Steer model option for axle 2: 1 -> Not steered, 0 ->
                      ! Internal model, 2 -> External gear/rack, 3 -> External
                      ! except tie-rod linkage, 4 -> Full external model [I]

!------------------------------------------------------------------------------------
! TIRES
!------------------------------------------------------------------------------------
! Tire behavior is specified with the following parameters. Depending on the
! selected options, the following nonlinear Configurable Functions might also be
! used: FX_TIRE, FY_TIRE, FYG_TIRE, FZ_TIRE, KGAMMA, L_CONTACT_X, L_CONTACT_Y,
! L_RELAX_X, L_RELAX_Y, MX_TIRE, MXG_TIRE, MZ_TIRE, STI_TYPARR, and Z_PROFILE

VLOW_DRIFT_X      0.1 ; km/h ! [D] Low speed limit: allow near-static Fx to avoid
                      ! drift when stopped on a grade
VLOW_DRIFT_Y      0.1 ; km/h ! [D] Low speed limit: allow near-static Fy to avoid
                      ! drift when stopped on a grade

OPT_TIRE_MODEL(1,1) 1 ! Internal tire shear-model option, tire L1: 1 -> original
                      ! tabular model; 0 -> fully external model; 2 -> built-in
                      ! lags; 3 -> built-in for Fx, My, and lags; 6 -> tabular with
                      ! camber extensions; 7 -> built-in Pacejka 5.2; 8 -> TNO
                      ! Delft-Tyre; 9 -> COSIN FTire; 10 -> third-party STI tire
                      ! model [I]
OPT_TIRE_COMB(1,1)  0 ! Option for combined slip calculation: 0 -> use only
                      ! theoretical combined slip; 1 -> use transition between the
                      ! normalized and theoretical combined slip
OPT_TIRE_LAG_ALPHA(1,1) 1 ! Options for handling lag in tire alpha: 1 -> transition
                          ! to using instant slip when the time constant is less
                          ! than 12*TSTEP, 0 -> use fixed time constant 12*TSTEP at
                          ! high speeds
OPT_TIRE_LAG_KAPPA(1,1) 2 ! Options for handling lag in tire kappa: 2 -> use instant
                          ! slip when absolute kappa is decreasing and transition
                          ! to instant slip when the time constant is less than
                          ! 12*TSTEP; 1 -> transition to instant slip when the time
                          ! constant is less than 12*TSTEP; 0 -> use fixed time
                          ! constant 12*TSTEP at high speeds
FZ_MAX(1,1)    100000 ; N ! Maximum allowed vertical force, tire L1 [I]
FZ_REF(1,1)     11500 ; N ! Reference vertical force: Not used directly in the VS
                      ! Math Model; provided as a standard reference for advanced
                      ! users to scale other parameters and Configurable Functions
                      ! for this tire
IT(1,1)           2.8 ; kg-m2 ! Spin inertia for tire L1 [I]
IT_XXZZ(1,1)      1.6 ; kg-m2 ! XX/ZZ inertia for tire L1 [I]
M_TIRE(1,1)        28 ; kg ! Mass of tire L1
MU_REF_X(1,1)       1 ; - ! Ground friction during meas. of Fx data, tire L1
MU_REF_Y(1,1)       1 ; - ! Ground friction during meas. of Fy data, tire L1
R0(1,1)           402 ; mm ! Free (unloaded) radius (if 0, R0 is set to RRE) [I]
RRE(1,1)          393 ; mm ! Effective rolling radius (Vx/AVy), tire L1 [I]
RR_C(1,1)      0.0044 ; - ! Rolling resistance: MyRR = R*Fz*RR_surf*(RR_c + RR_v*Vx)
RR_FX(1,1)          0 ; - ! Switch: 0 -> do not add the effect of tire Fx to the
                      ! rolling resistance moment MyRR; 1 add the effect
RR_V(1,1)     2.8e-05 ; h/km ! Rolling resistance: MyRR = R*Fz*RR_surf*(RR_c +
                      ! RR_v*Vx)
VLOW_ALPHA(1,1)     2 ; km/h ! Minimum Vx used in ODE for lagged alpha
VLOW_DAMP_Y(1,1)    0 ; km/h ! [D] Low speed when damping is added to Fy
VLOW_KAPPA(1,1)     2 ; km/h ! Minimum Vx used in ODE for lagged kappa

OPT_TIRE_MODEL(1,2) 1 ! Internal tire shear-model option, R1 [I]
OPT_TIRE_COMB(1,2)  0 ! Option for combined slip calculation
OPT_TIRE_LAG_ALPHA(1,2) 1 ! Options for handling lag in alpha
OPT_TIRE_LAG_KAPPA(1,2) 2 ! Options for handling lag in kappa
FZ_MAX(1,2)    100000 ; N ! Maximum allowed vertical force, tire R1 [I]
FZ_REF(1,2)     11500 ; N ! Reference vertical force
IT(1,2)           2.8 ; kg-m2 ! Spin inertia for tire R1 [I]
IT_XXZZ(1,2)      1.6 ; kg-m2 ! XX/ZZ inertia for tire R1 [I]
M_TIRE(1,2)        28 ; kg ! Mass of tire R1
MU_REF_X(1,2)       1 ; - ! Ground friction during meas. of Fx data, tire R1
MU_REF_Y(1,2)       1 ; - ! Ground friction during meas. of Fy data, tire R1
R0(1,2)           402 ; mm ! Free (unloaded) radius (if 0, R0 is set to RRE) [I]
RRE(1,2)          393 ; mm ! Effective rolling radius (Vx/AVy), tire R1 [I]
RR_C(1,2)      0.0044 ; - ! MyRR = R*Fz*RR_surf*(RR_c + RR_v*Vx)
RR_FX(1,2)          0 ; - ! 0 -> do not add Fx effect to MyRR; 1 -> add it
RR_V(1,2)     2.8e-05 ; h/km ! MyRR = R*Fz*RR_surf*(RR_c + RR_v*Vx)
VLOW_ALPHA(1,2)     2 ; km/h ! Minimum Vx used in ODE for lagged alpha
VLOW_DAMP_Y(1,2)    0 ; km/h ! [D] Low speed when damping is added to Fy
VLOW_KAPPA(1,2)     2 ; km/h ! Minimum Vx used in ODE for lagged kappa

OPT_TIRE_MODEL(2,1) 1 ! Internal tire shear-model option, L2 [I]
OPT_TIRE_COMB(2,1)  0 ! Option for combined slip calculation
OPT_TIRE_LAG_ALPHA(2,1) 1 ! Options for handling lag in alpha
OPT_TIRE_LAG_KAPPA(2,1) 2 ! Options for handling lag in kappa
FZ_MAX(2,1)    100000 ; N ! Maximum allowed vertical force, tire L2 [I]
FZ_REF(2,1)     11500 ; N ! Reference vertical force
IT(2,1)           2.8 ; kg-m2 ! Spin inertia for tire L2 [I]
IT_XXZZ(2,1)      1.6 ; kg-m2 ! XX/ZZ inertia for tire L2 [I]
M_TIRE(2,1)        28 ; kg ! Mass of tire L2
MU_REF_X(2,1)       1 ; - ! Ground friction during meas. of Fx data, tire L2
MU_REF_Y(2,1)       1 ; - ! Ground friction during meas. of Fy data, tire L2
R0(2,1)           402 ; mm ! Free (unloaded) radius (if 0, R0 is set to RRE) [I]
RRE(2,1)          393 ; mm ! Effective rolling radius (Vx/AVy), tire L2 [I]
RR_C(2,1)      0.0044 ; - ! MyRR = R*Fz*RR_surf*(RR_c + RR_v*Vx)
RR_FX(2,1)          0 ; - ! 0 -> do not add Fx effect to MyRR; 1 -> add it
RR_V(2,1)     2.8e-05 ; h/km ! MyRR = R*Fz*RR_surf*(RR_c + RR_v*Vx)
VLOW_ALPHA(2,1)     2 ; km/h ! Minimum Vx used in ODE for lagged alpha
VLOW_DAMP_Y(2,1)    0 ; km/h ! [D] Low speed when damping is added to Fy
VLOW_KAPPA(2,1)     2 ; km/h ! Minimum Vx used in ODE for lagged kappa

OPT_TIRE_MODEL(2,2) 1 ! Internal tire shear-model option, R2 [I]
OPT_TIRE_COMB(2,2)  0 ! Option for combined slip calculation
OPT_TIRE_LAG_ALPHA(2,2) 1 ! Options for handling lag in alpha
OPT_TIRE_LAG_KAPPA(2,2) 2 ! Options for handling lag in kappa
FZ_MAX(2,2)    100000 ; N ! Maximum allowed vertical force, tire R2 [I]
FZ_REF(2,2)     11500 ; N ! Reference vertical force
IT(2,2)           2.8 ; kg-m2 ! Spin inertia for tire R2 [I]
IT_XXZZ(2,2)      1.6 ; kg-m2 ! XX/ZZ inertia for tire R2 [I]
M_TIRE(2,2)        28 ; kg ! Mass of tire R2
MU_REF_X(2,2)       1 ; - ! Ground friction during meas. of Fx data, tire R2
MU_REF_Y(2,2)       1 ; - ! Ground friction during meas. of Fy data, tire R2
R0(2,2)           402 ; mm ! Free (unloaded) radius (if 0, R0 is set to RRE) [I]
RRE(2,2)          393 ; mm ! Effective rolling radius (Vx/AVy), tire R2 [I]
RR_C(2,2)      0.0044 ; - ! MyRR = R*Fz*RR_surf*(RR_c + RR_v*Vx)
RR_FX(2,2)          0 ; - ! 0 -> do not add Fx effect to MyRR; 1 -> add it
RR_V(2,2)     2.8e-05 ; h/km ! MyRR = R*Fz*RR_surf*(RR_c + RR_v*Vx)
VLOW_ALPHA(2,2)     2 ; km/h ! Minimum Vx used in ODE for lagged alpha
VLOW_DAMP_Y(2,2)    0 ; km/h ! [D] Low speed when damping is added to Fy
VLOW_KAPPA(2,2)     2 ; km/h ! Minimum Vx used in ODE for lagged kappa

!------------------------------------------------------------------------------------
! BRAKES
!------------------------------------------------------------------------------------
! The brake system is specified with the following parameters along with the
! nonlinear Configurable Functions BRAKE_COOL, F_BRAKE_PEDAL_BOOST, MY_BRAKE,
! MY_BRAKE_TEMP, PBK_CALIPER, and PBK_DL. Open-loop braking can be specified with
! the function F_BRAKE_PEDAL (pedal force) or PBK_CON (master cylinder pressure)

LOCK_BK_R_FREQ     33 ; - ! [D] Ratio: simulation update frequency (1/dt) divided by
                      ! torsional natural frequency of a wheel during brake lockup
LOCK_BK_ZETA        2 ; - ! [D] Torsional damping ratio of each wheel during lockup

OPT_BK_PEDAL        0 ! Brake input: 0 -> pressure (M/C), 1 -> pedal force (manual),
                      ! 2 -> pedal force with boost

OPT_BK_DYN(1,1)     1 ! Fluid dynamics: 1 -> time constant for actuator pressure, 2
                      ! -> hydraulic resistance for flow into actuator, 0 -> no
                      ! dynamics (instant actuator response)
OPT_BK_THERMAL(1,1) 0 ! [D] Brake L1 thermal effects (fade)? 0 -> no, 1 -> yes
MY_FRICTION(1,1)  0.5 ; N-m ! Bearing/brake friction, wheel L1
TC_BK(1,1)       0.06 ; s ! Time constant for brake actuator L1
TLAG_BK(1,1)        0 ; s ! Transport time delay for fluid to reach brake L1 [I]

OPT_BK_DYN(1,2)     1 ! Dynamics: 1 -> time const., 2 -> hyd. res., 0 -> none
OPT_BK_THERMAL(1,2) 0 ! [D] Brake R1 thermal effects (fade)? 0 -> no, 1 -> yes
MY_FRICTION(1,2)  0.5 ; N-m ! Bearing/brake friction, wheel R1
TC_BK(1,2)       0.06 ; s ! Time constant for brake actuator R1
TLAG_BK(1,2)        0 ; s ! Transport time delay for fluid to reach brake R1 [I]

OPT_BK_DYN(2,1)     1 ! Dynamics: 1 -> time const., 2 -> hyd. res., 0 -> none
OPT_BK_THERMAL(2,1) 0 ! [D] Brake L2 thermal effects (fade)? 0 -> no, 1 -> yes
MY_FRICTION(2,1)  0.5 ; N-m ! Bearing/brake friction, wheel L2
TC_BK(2,1)       0.06 ; s ! Time constant for brake actuator L2
TLAG_BK(2,1)        0 ; s ! Transport time delay for fluid to reach brake L2 [I]

OPT_BK_DYN(2,2)     1 ! Dynamics: 1 -> time const., 2 -> hyd. res., 0 -> none
OPT_BK_THERMAL(2,2) 0 ! [D] Brake R2 thermal effects (fade)? 0 -> no, 1 -> yes
MY_FRICTION(2,2)  0.5 ; N-m ! Bearing/brake friction, wheel R2
TC_BK(2,2)       0.06 ; s ! Time constant for brake actuator R2
TLAG_BK(2,2)        0 ; s ! Transport time delay for fluid to reach brake R2 [I]

!------------------------------------------------------------------------------------
! POWERTRAIN
!------------------------------------------------------------------------------------
! The powertrain model is specified with the following parameters along with up to
! 25 nonlinear Configurable Functions. Open-loop throttle can be specified with the
! function THROTTLE_ENGINE. Engine behavior is specified in part with the functions
! MENGINE and FUEL_RATE.

OPT_PT              3 ! Powertrain type: 0 -> Simple, 1 -> FWD, 2 -> RWD, 3 -> AWD,
                      ! 7 -> AVL Cruise [L]
OPT_HEV             0 ! Propulsion types: 0 -> internal-combustion engine, 1 ->
                      ! hybrid electric, 2 -> electric
R_MDRIVE            1 ; - ! Multiplier for driveshaft torque acting on sprung mass
                      ! from drive axle: +1 -> cause positive vehicle roll, -1 ->
                      ! cause negative vehicle roll, 0 -> no effect. [I]
VLOW_IW             0 ; km/h ! [D] Increase wheel spin inertia below this speed to
                      ! fix instability with some HIL systems; set 0 to disable

! The powertrain differentials are specified with the following parameters along
! with the functions M_DIFF_VISC, CLUTCH_CONTROL_DIFF, CLUTCH_TORQUE_DIFF,
! CLUTCH_TORQUE_DIFF2, CLUTCH_TWIN, and M_TWIN.

OPT_DIFF_INTERNAL(1) 1 ! Front diff model: 1 -> internal, 0 -> external [I]
OPT_LOCKED_DIFF(1)  0 ! Is the front diff locked? 0 -> no, 1 -> yes [I]
LOCKED_DIFF_DAMP(1) 1 ; N-m-s/deg ! Torsional damping for locked front diff [I]
LOCKED_DIFF_K(1)  100 ; N-m/deg ! Torsional spring rate for locked front diff [I]
R_EFF_F_DIFF(1)  0.99 ; - ! Forward efficiency of front diff [I]
R_EFF_R_DIFF(1)  0.99 ; - ! Reverse efficiency of front diff [I]
R_GEAR_DIFF(1)    4.1 ; - ! Gear ratio of front diff [I]
IDS(1)          0.013 ; kg-m2 ! Spin inertia of front diff input shaft [I]
IHS_L(1)        0.009 ; kg-m2 ! Spin inertia of left half shaft, front diff [I]
IHS_R(1)        0.009 ; kg-m2 ! Spin inertia of right half shaft, front diff [I]
OPT_CLUTCH_DIFF(1)  0 ! [D] Clutch control for front diff: 0 -> table lookup or
                      ! external, 1 -> Torsen parameters, 2 -> yaw control [I]
OPT_TWIN_CLUTCH(1)  0 ! [D] Twin clutches on front diff? 0 -> no, 1 -> yes [I]

OPT_DIFF_INTERNAL(2) 1 ! Rear diff model: 1 -> internal, 0 -> external [I]
OPT_LOCKED_DIFF(2)  0 ! Is the rear diff locked? 0 -> no, 1 -> yes [I]
LOCKED_DIFF_DAMP(2) 0.8 ; N-m-s/deg ! Torsional damping for locked rear diff [I]
LOCKED_DIFF_K(2)   80 ; N-m/deg ! Torsional spring rate for locked rear diff [I]
R_EFF_F_DIFF(2)  0.99 ; - ! Forward efficiency of rear diff [I]
R_EFF_R_DIFF(2)  0.99 ; - ! Reverse efficiency of rear diff [I]
R_GEAR_DIFF(2)    4.1 ; - ! Gear ratio of rear diff [I]
IDS(2)          0.013 ; kg-m2 ! Spin inertia of rear diff input shaft [I]
IHS_L(2)        0.009 ; kg-m2 ! Spin inertia of left half shaft, rear diff [I]
IHS_R(2)        0.009 ; kg-m2 ! Spin inertia of right half shaft, rear diff [I]
OPT_CLUTCH_DIFF(2)  0 ! [D] Clutch control for rear diff: 0 -> table lookup or
                      ! external, 1 -> Torsen parameters, 2 -> yaw control [I]
OPT_TWIN_CLUTCH(2)  0 ! [D] Twin clutches on rear diff? 0 -> no, 1 -> yes [I]

OPT_DIFF_INTERNAL(3) 1 ! Transfer case model: 1 -> internal, 0 -> external [I]
OPT_LOCKED_DIFF(3)  0 ! Is the transfer case locked? 0 -> no, 1 -> yes [I]
R_REAR_BIAS(3)    0.5 ; - ! Fraction: transfer case torque on the transfer case [I]
LOCKED_DIFF_DAMP(3) 0.8 ; N-m-s/deg ! Torsional damping for locked transfer case [I]
LOCKED_DIFF_K(3)   80 ; N-m/deg ! Torsional spring rate for locked transfer case [I]
R_EFF_F_DIFF(3)  0.99 ; - ! Forward efficiency of transfer case [I]
R_EFF_R_DIFF(3)  0.99 ; - ! Reverse efficiency of transfer case [I]
R_GEAR_DIFF(3)      1 ; - ! Gear ratio of transfer case [I]
IDS(3)              0 ; kg-m2 ! [D] Spin inertia of transfer case input shaft [I]
OPT_CLUTCH_DIFF(3)  0 ! [D] Clutch control for transfer case: 0 -> table lookup or
                      ! external, 1 -> Torsen parameters, 2 -> yaw control [I]

!------------------------------------------------------------------------------------
! ENGINE
!------------------------------------------------------------------------------------
INSTALL_ENGINE        ! VS Command to install an engine

OPT_ENGINE_INTERNAL 1 ! Engine model: 1 -> internal, 0 -> external [I]
OPT_ENGINE_RUNNING  1 ! [D] Is engine running? 1 -> yes, 0 -> no
OPT_THROTTLE_DELAY  0 ! Use throttle time constants: 0 -> no, 1 -> yes
AV_ENG_IDLE       725 ; rpm ! Engine idle speed [I]
ENGINE_ESC_PG       5 ; 1/s ! [D] P gain of ESC engine torque control
ENGINE_ESC_IG     0.5 ; 1/s2 ! [D] I gain of ESC engine torque control
ENGINE_STALL_DAMP 0.2 ; N-m-s/deg ! [D] Damping rate of the stalled engine
IENG              0.3 ; kg-m2 ! Spin inertia of engine crankshaft [I]
ITC_INPUT_SHAFT 0.015 ; kg-m2 ! Spin inertia of input shaft of torque converter

!------------------------------------------------------------------------------------
! TORQUE TRANSFER DEVICE
!------------------------------------------------------------------------------------
! Transfer of power from the engine to the transmission is specified with the
! following parameters along with the functions CLUTCH_TORQUE, INV_CAP_TC, and
! RM_TC. Open-loop clutch control can be specified with the function
! CLUTCH_CONTROL.

INSTALL_TORQUE_TRANSFER_DEVICE  ! VS Command to install a clutch or torque converter

OPT_CLUTCH          0 ! [D] Torque transfer to transmission: 0 -> hydraulic torque
                      ! converter, 1 -> mechanical clutch, 2 -> torque converter
                      ! with lock-up clutch, 3 -> centrifugal clutch [I]
OPT_PWR_CPL_INTERNAL 1 ! Internal power coupling model (torque converter and
                       ! clutch): 1 -> internal, 0 -> external

!------------------------------------------------------------------------------------
! TRANSMISSION
!------------------------------------------------------------------------------------
! The transmission is specified with the following parameters and the functions
! DOWNSHIFT_TRANS, UPSHIFT_TRANS, LOCK_AT, UNLOCK_AT, R_GEAR_CVT, R_EFF_CVT_F, and
! R_EFF_CVT_R. Transmission controller mode can be specified with the open-loop
! function MODE_TRANS and transmission gear can be specified with the open-loop
! function GEAR_TRANS.

INSTALL_TRANSMISSION  ! VS Command to install a transmission

OPT_TRANS_INTERNAL  1 ! Transmission model: 1 -> internal, 0 -> external [I]
OPT_TR_GEAR_INTERNAL 1 ! Transmission gear ratio and inertia: 1 -> up to 18 gears, 2
                       ! -> continuously variable (CVT), 0 -> external model [I]
NGEARS              6 ! Number of gears in transmission [I]
OPT_SHIFT_INTERNAL  1 ! Gear shift command model: 1 -> internal, 0 -> external [I]
ITC_OUTPUT_SHAFT 0.015 ; kg-m2 ! Spin inertia of torque converter output shaft [I]
ITR_NEUTRAL     0.034 ; kg-m2 ! Neutral-gear spin inertia of transmission
ITR_REVERSE     0.034 ; kg-m2 ! Reverse-gear spin inertia of transmission
R_EFF_TR_F_REVERSE 0.9 ; - ! Reverse-gear forward efficiency of transmission
R_EFF_TR_R_REVERSE 0.9 ; - ! Reverse-gear reverse efficiency of transmission
R_GEAR_TR_REVERSE -3.168 ; - ! Reverse-gear ratio of trans. (should be negative)
T_SHIFT          0.25 ; s ! Shift duration in closed-loop transmission control

ITR(1)          0.037 ; kg-m2 ! 1st-gear transmission spin inertia at output shaft
                      ! (Transmission spin inertias do not include the torque
                      ! converter)
R_EFF_TR_F(1)    0.92 ; - ! 1st-gear forward efficiency of transmission
R_EFF_TR_R(1)    0.92 ; - ! 1st-gear reverse efficiency of transmission
R_GEAR_TR(1)    3.538 ; - ! 1st-gear ratio of transmission
T_SHIFT_UP(1)      -1 ; - ! [D] Duration of up-shift from 1st-gear [I]
T_SHIFT_DOWN(1)    -1 ; - ! [D] Duration of down-shift to 1st-gear [I]

ITR(2)          0.034 ; kg-m2 ! 2nd-gear trans output shaft spin inertia
R_EFF_TR_F(2)    0.92 ; - ! 2nd-gear forward efficiency of transmission
R_EFF_TR_R(2)    0.92 ; - ! 2nd-gear reverse efficiency of transmission
R_GEAR_TR(2)     2.06 ; - ! 2nd-gear ratio of transmission
T_SHIFT_UP(2)      -1 ; - ! [D] Duration of up-shift from 2nd-gear
T_SHIFT_DOWN(2)    -1 ; - ! [D] Duration of down-shift to 2nd-gear

ITR(3)          0.042 ; kg-m2 ! 3rd-gear trans output shaft spin inertia
R_EFF_TR_F(3)    0.95 ; - ! 3rd-gear forward efficiency of transmission
R_EFF_TR_R(3)    0.95 ; - ! 3rd-gear reverse efficiency of transmission
R_GEAR_TR(3)    1.404 ; - ! 3rd-gear ratio of transmission
T_SHIFT_UP(3)      -1 ; - ! [D] Duration of up-shift from 3rd-gear
T_SHIFT_DOWN(3)    -1 ; - ! [D] Duration of down-shift to 3rd-gear

ITR(4)           0.04 ; kg-m2 ! 4th-gear trans output shaft spin inertia
R_EFF_TR_F(4)    0.95 ; - ! 4th-gear forward efficiency of transmission
R_EFF_TR_R(4)    0.95 ; - ! 4th-gear reverse efficiency of transmission
R_GEAR_TR(4)        1 ; - ! 4th-gear ratio of transmission
T_SHIFT_UP(4)      -1 ; - ! [D] Duration of up-shift from 4th-gear
T_SHIFT_DOWN(4)    -1 ; - ! [D] Duration of down-shift to 4th-gear

ITR(5)           0.04 ; kg-m2 ! 5th-gear trans output shaft spin inertia
R_EFF_TR_F(5)    0.98 ; - ! 5th-gear forward efficiency of transmission
R_EFF_TR_R(5)    0.98 ; - ! 5th-gear reverse efficiency of transmission
R_GEAR_TR(5)    0.713 ; - ! 5th-gear ratio of transmission
T_SHIFT_UP(5)      -1 ; - ! [D] Duration of up-shift from 5th-gear
T_SHIFT_DOWN(5)    -1 ; - ! [D] Duration of down-shift to 5th-gear

ITR(6)           0.04 ; kg-m2 ! 6th-gear trans output shaft spin inertia
R_EFF_TR_F(6)    0.99 ; - ! 6th-gear forward efficiency of transmission
R_EFF_TR_R(6)    0.99 ; - ! 6th-gear reverse efficiency of transmission
R_GEAR_TR(6)    0.582 ; - ! 6th-gear ratio of transmission

DRIVELINE_FREQ      9 ; Hz ! Natural frequency of entire driveline, including
                      ! transmission, differentials, and wheels, not including
                      ! engine. [I]
DRIVELINE_ZETA    0.9 ; - ! Damping ratio of entire driveline, including
                      ! transmission, differentials, and wheels, not including
                      ! engine. [I]

!------------------------------------------------------------------------------------
! REFERENCE PATHS
!------------------------------------------------------------------------------------
! Up to 500 reference paths may be installed to provide station-based coordinate
! systems used to define 3D road surfaces, targets for the driver model, and
! positions of moving objects. In addition to the parameters shown in this section,
! the paths may include spline X-Y tables (keyword = SEGMENT_XY_TABLE).

! NPATH            17 ! Number of installed paths available for roads, driver model,
                      ! and moving objects (read only)
DEFINE_PATHS       17 ! VS Command to install reference paths

PATH_ID(1)       1000 ; Split mu 210 m at 3% grade
OPT_PATH_START(1)   0 ! Set initial heading and X-Y coordinates of the path? 0 -> no
                      ! (legacy, using table data), 1 -> yes
OPT_PATH_LOOP(1)    0 ! Is this path looped? 0 -> no, 1 -> yes
SPATH_START(1)      0 ; m ! Station at the start of this path
! HEADING_START(1) 180 ; deg ! Heading at the start of this path
! X_PATH_START(1) 733.16124 ; m ! Global X coordinate at the start of this path
! Y_PATH_START(1) 135.417202 ; m ! Global Y coordinate at the start of this path

NSEGMENTS(1)        1 ! Number of segments in this path
SEGMENT_TYPE(1,1)   1 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
XY_SEGMENT_ID(1,1)  1 ! XY_TABLE_ID number of spline table [I]
! S_SEGMENT_END(1,1) 237.3564226 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(1,1) 496.01954 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(1,1) 137.290602 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(1,1) 159.8716606 ; deg ! CALC -- Heading at end of segment
DEFINE_XY_TABLES   17 ! No. of XY spline tables (see the SPLINE TABLES section)

PATH_ID(2)       1001 ; Split mu 168 m at 6% grade
OPT_PATH_START(2)   0 ! Set initial heading and X-Y coords? 0 -> no, 1 -> yes
OPT_PATH_LOOP(2)    0 ! Is this path looped? 0 -> no, 1 -> yes
SPATH_START(2)      0 ; m ! Station at the start of this path
! HEADING_START(2) 180 ; deg ! Heading at the start of this path
! X_PATH_START(2) 733.17244 ; m ! Global X coordinate at the start of this path
! Y_PATH_START(2) 158.668902 ; m ! Global Y coordinate at the start of this path

NSEGMENTS(2)        1 ! Number of segments in this path
SEGMENT_TYPE(2,1)   1 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
XY_SEGMENT_ID(2,1)  2 ! XY_TABLE_ID number of spline table [I]
! S_SEGMENT_END(2,1) 235.1490952 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(2,1) 498.36564 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(2,1) 160.957902 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(2,1) 156.1333872 ; deg ! CALC -- Heading at end of segment

PATH_ID(3)       1002 ; Split mu 146 m at 9% grade
OPT_PATH_START(3)   0 ! Set initial heading and X-Y coords? 0 -> no, 1 -> yes
OPT_PATH_LOOP(3)    0 ! Is this path looped? 0 -> no, 1 -> yes
SPATH_START(3)      0 ; m ! Station at the start of this path
! HEADING_START(3) 180 ; deg ! Heading at the start of this path
! X_PATH_START(3) 733.15004 ; m ! Global X coordinate at the start of this path
! Y_PATH_START(3) 182.104402 ; m ! Global Y coordinate at the start of this path

NSEGMENTS(3)        1 ! Number of segments in this path
SEGMENT_TYPE(3,1)   1 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
XY_SEGMENT_ID(3,1)  3 ! XY_TABLE_ID number of spline table [I]
! S_SEGMENT_END(3,1) 230.3888464 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(3,1) 503.01094 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(3,1) 183.999002 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(3,1) 158.6448425 ; deg ! CALC -- Heading at end of segment

PATH_ID(4)       1003 ; Split mu 30 m at 15% grade
OPT_PATH_START(4)   0 ! Set initial heading and X-Y coords? 0 -> no, 1 -> yes
OPT_PATH_LOOP(4)    0 ! Is this path looped? 0 -> no, 1 -> yes
SPATH_START(4)      0 ; m ! Station at the start of this path
! HEADING_START(4) -179.8941456 ; deg ! Heading at the start of this path
! X_PATH_START(4) 733.16114 ; m ! Global X coordinate at the start of this path
! Y_PATH_START(4) 220.915402 ; m ! Global Y coordinate at the start of this path

NSEGMENTS(4)        1 ! Number of segments in this path
SEGMENT_TYPE(4,1)   1 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
XY_SEGMENT_ID(4,1)  4 ! XY_TABLE_ID number of spline table [I]
! S_SEGMENT_END(4,1) 228.9024627 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(4,1) 504.71324 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(4,1) 223.716702 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(4,1) 153.6199952 ; deg ! CALC -- Heading at end of segment

PATH_ID(5)       1004 ; Hill 50 m at 6% grade
OPT_PATH_START(5)   0 ! Set initial heading and X-Y coords? 0 -> no, 1 -> yes
OPT_PATH_LOOP(5)    0 ! Is this path looped? 0 -> no, 1 -> yes
SPATH_START(5)      0 ; m ! Station at the start of this path
! HEADING_START(5) 180 ; deg ! Heading at the start of this path
! X_PATH_START(5) 980.41534 ; m ! Global X coordinate at the start of this path
! Y_PATH_START(5) 151.353702 ; m ! Global Y coordinate at the start of this path

NSEGMENTS(5)        1 ! Number of segments in this path
SEGMENT_TYPE(5,1)   1 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
XY_SEGMENT_ID(5,1)  5 ! XY_TABLE_ID number of spline table [I]
! S_SEGMENT_END(5,1) 89.49906449 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(5,1) 891.16604 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(5,1) 153.248302 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(5,1) 158.639902 ; deg ! CALC -- Heading at end of segment

PATH_ID(6)       1005 ; Hill 40 m at 9% grade
OPT_PATH_START(6)   0 ! Set initial heading and X-Y coords? 0 -> no, 1 -> yes
OPT_PATH_LOOP(6)    0 ! Is this path looped? 0 -> no, 1 -> yes
SPATH_START(6)      0 ; m ! Station at the start of this path
! HEADING_START(6) 180 ; deg ! Heading at the start of this path
! X_PATH_START(6) 980.39304 ; m ! Global X coordinate at the start of this path
! Y_PATH_START(6) 167.474002 ; m ! Global Y coordinate at the start of this path

NSEGMENTS(6)        1 ! Number of segments in this path
SEGMENT_TYPE(6,1)   1 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
XY_SEGMENT_ID(6,1)  6 ! XY_TABLE_ID number of spline table [I]
! S_SEGMENT_END(6,1) 85.81923324 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(6,1) 894.82354 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(6,1) 169.368502 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(6,1) 158.6467741 ; deg ! CALC -- Heading at end of segment

PATH_ID(7)       1006 ; Hill 30 m at 15% grade
OPT_PATH_START(7)   0 ! Set initial heading and X-Y coords? 0 -> no, 1 -> yes
OPT_PATH_LOOP(7)    0 ! Is this path looped? 0 -> no, 1 -> yes
SPATH_START(7)      0 ; m ! Station at the start of this path
! HEADING_START(7) 180 ; deg ! Heading at the start of this path
! X_PATH_START(7) 980.41534 ; m ! Global X coordinate at the start of this path
! Y_PATH_START(7) 183.594302 ; m ! Global Y coordinate at the start of this path

NSEGMENTS(7)        1 ! Number of segments in this path
SEGMENT_TYPE(7,1)   1 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
XY_SEGMENT_ID(7,1)  7 ! XY_TABLE_ID number of spline table [I]
! S_SEGMENT_END(7,1) 82.18393321 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(7,1) 898.48114 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(7,1) 185.488802 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(7,1) 158.6467741 ; deg ! CALC -- Heading at end of segment

PATH_ID(8)       1007 ; 5 mile circle - 10 deg bank
OPT_PATH_START(8)   0 ! Set initial heading and X-Y coords? 0 -> no, 1 -> yes
OPT_PATH_LOOP(8)    1 ! Is this path looped? 0 -> no, 1 -> yes
SPATH_START(8)      0 ; m ! Station at the start of this path
! SPATH_LAP(8) 8025.036093 ; m ! CALC -- Lap distance for this path
! HEADING_START(8) 99.48313559 ; deg ! Heading at the start of this path
! X_PATH_START(8) 1258.98504 ; m ! Global X coordinate at the start of this path
! Y_PATH_START(8) 214.415002 ; m ! Global Y coordinate at the start of this path

NSEGMENTS(8)        1 ! Number of segments in this path
SEGMENT_TYPE(8,1)   1 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
XY_SEGMENT_ID(8,1)  8 ! XY_TABLE_ID number of spline table [I]
! S_SEGMENT_END(8,1) 8025.036093 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(8,1) 1258.98504 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(8,1) 214.415002 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(8,1) 99.48313559 ; deg ! CALC -- Heading at end of segment

PATH_ID(9)       1008 ; Hill 80 m at 3% grade
OPT_PATH_START(9)   0 ! Set initial heading and X-Y coords? 0 -> no, 1 -> yes
OPT_PATH_LOOP(9)    0 ! Is this path looped? 0 -> no, 1 -> yes
SPATH_START(9)      0 ; m ! Station at the start of this path
! HEADING_START(9) 180 ; deg ! Heading at the start of this path
! X_PATH_START(9) 980.415346 ; m ! Global X coordinate at the start of this path
! Y_PATH_START(9) 135.41721 ; m ! Global Y coordinate at the start of this path

NSEGMENTS(9)        1 ! Number of segments in this path
SEGMENT_TYPE(9,1)   1 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
XY_SEGMENT_ID(9,1)  9 ! XY_TABLE_ID number of spline table [I]
! S_SEGMENT_END(9,1) 92.82860331 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(9,1) 887.830346 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(9,1) 137.29061 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(9,1) 158.9254523 ; deg ! CALC -- Heading at end of segment

PATH_ID(10)      1009 ; Split mu - asphalt/wet
OPT_PATH_START(10)  0 ! Set initial heading and X-Y coords? 0 -> no, 1 -> yes
OPT_PATH_LOOP(10)   0 ! Is this path looped? 0 -> no, 1 -> yes
SPATH_START(10)     0 ; m ! Station at the start of this path
! HEADING_START(10) 7.161969752e-06 ; deg ! Heading at the start of this path
! X_PATH_START(10) 133.609646 ; m ! Global X coordinate at the start of this path
! Y_PATH_START(10) 492.46361 ; m ! Global Y coordinate at the start of this path

NSEGMENTS(10)       1 ! Number of segments in this path
SEGMENT_TYPE(10,1)  1 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
XY_SEGMENT_ID(10,1) 10 ! XY_TABLE_ID number of spline table [I]
! S_SEGMENT_END(10,1) 800.0003 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(10,1) 933.609946 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(10,1) 492.46371 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(10,1) 7.161969752e-06 ; deg ! CALC -- Heading at end of segment

PATH_ID(11)      1010 ; Staggered bumps (8 km/h)
OPT_PATH_START(11)  0 ! Set initial heading and X-Y coords? 0 -> no, 1 -> yes
OPT_PATH_LOOP(11)   0 ! Is this path looped? 0 -> no, 1 -> yes
SPATH_START(11)     0 ; m ! Station at the start of this path
! HEADING_START(11) 0.7932526778 ; deg ! Heading at the start of this path
! X_PATH_START(11) 87.467546 ; m ! Global X coordinate at the start of this path
! Y_PATH_START(11) 711.38861 ; m ! Global Y coordinate at the start of this path

NSEGMENTS(11)       1 ! Number of segments in this path
SEGMENT_TYPE(11,1)  1 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
XY_SEGMENT_ID(11,1) 11 ! XY_TABLE_ID number of spline table [I]
! S_SEGMENT_END(11,1) 723.2264594 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(11,1) 788.094846 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(11,1) 719.53691 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(11,1) -84.40366127 ; deg ! CALC -- Heading at end of segment

PATH_ID(12)      1011 ; Sine bumps out of phase (20 km/h)
OPT_PATH_START(12)  0 ! Set initial heading and X-Y coords? 0 -> no, 1 -> yes
OPT_PATH_LOOP(12)   0 ! Is this path looped? 0 -> no, 1 -> yes
SPATH_START(12)     0 ; m ! Station at the start of this path
! HEADING_START(12) -0.6165748075 ; deg ! Heading at the start of this path
! X_PATH_START(12) 87.467546 ; m ! Global X coordinate at the start of this path
! Y_PATH_START(12) 711.37971 ; m ! Global Y coordinate at the start of this path

NSEGMENTS(12)       1 ! Number of segments in this path
SEGMENT_TYPE(12,1)  1 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
XY_SEGMENT_ID(12,1) 12 ! XY_TABLE_ID number of spline table [I]
! S_SEGMENT_END(12,1) 726.7066291 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(12,1) 788.122346 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(12,1) 710.32601 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(12,1) 85.05874202 ; deg ! CALC -- Heading at end of segment

PATH_ID(13)      1012 ; Sine bumps in phase (20 km/h)
OPT_PATH_START(13)  0 ! Set initial heading and X-Y coords? 0 -> no, 1 -> yes
OPT_PATH_LOOP(13)   0 ! Is this path looped? 0 -> no, 1 -> yes
SPATH_START(13)     0 ; m ! Station at the start of this path
! HEADING_START(13) -0.5880223734 ; deg ! Heading at the start of this path
! X_PATH_START(13) 87.467546 ; m ! Global X coordinate at the start of this path
! Y_PATH_START(13) 711.37971 ; m ! Global Y coordinate at the start of this path

NSEGMENTS(13)       1 ! Number of segments in this path
SEGMENT_TYPE(13,1)  1 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
XY_SEGMENT_ID(13,1) 13 ! XY_TABLE_ID number of spline table [I]
! S_SEGMENT_END(13,1) 724.6670836 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(13,1) 788.122346 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(13,1) 710.32601 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(13,1) 87.42649014 ; deg ! CALC -- Heading at end of segment

PATH_ID(14)      1013 ; Urban tour
OPT_PATH_START(14)  0 ! Set initial heading and X-Y coords? 0 -> no, 1 -> yes
OPT_PATH_LOOP(14)   0 ! Is this path looped? 0 -> no, 1 -> yes
SPATH_START(14)     0 ; m ! Station at the start of this path
! HEADING_START(14) -179.9970187 ; deg ! Heading at the start of this path
! X_PATH_START(14) 680.815746 ; m ! Global X coordinate at the start of this path
! Y_PATH_START(14) -740.89389 ; m ! Global Y coordinate at the start of this path

NSEGMENTS(14)       1 ! Number of segments in this path
SEGMENT_TYPE(14,1)  1 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
XY_SEGMENT_ID(14,1) 14 ! XY_TABLE_ID number of spline table [I]
! S_SEGMENT_END(14,1) 3654.848623 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(14,1) 580.880246 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(14,1) -733.49909 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(14,1) -179.9970187 ; deg ! CALC -- Heading at end of segment

PATH_ID(15)      1014 ; Handling course
OPT_PATH_START(15)  0 ! Set initial heading and X-Y coords? 0 -> no, 1 -> yes
OPT_PATH_LOOP(15)   1 ! Is this path looped? 0 -> no, 1 -> yes
SPATH_START(15)     0 ; m ! Station at the start of this path
! SPATH_LAP(15) 2273.847908 ; m ! CALC -- Lap distance for this path
! HEADING_START(15) -0.5139182004 ; deg ! Heading at the start of this path
! X_PATH_START(15) 909.761846 ; m ! Global X coordinate at the start of this path
! Y_PATH_START(15) -210.27069 ; m ! Global Y coordinate at the start of this path

NSEGMENTS(15)       1 ! Number of segments in this path
SEGMENT_TYPE(15,1)  1 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
XY_SEGMENT_ID(15,1) 15 ! XY_TABLE_ID number of spline table [I]
! S_SEGMENT_END(15,1) 2273.847908 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(15,1) 909.761846 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(15,1) -210.27069 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(15,1) -0.5139182004 ; deg ! CALC -- Heading at end of segment

PATH_ID(16)      1015 ; Skidpad circle - 111 m radius
OPT_PATH_START(16)  0 ! Set initial heading and X-Y coords? 0 -> no, 1 -> yes
OPT_PATH_LOOP(16)   1 ! Is this path looped? 0 -> no, 1 -> yes
SPATH_START(16)     0 ; m ! Station at the start of this path
! SPATH_LAP(16) 697.4574278 ; m ! CALC -- Lap distance for this path
! HEADING_START(16) -89.9987608 ; deg ! Heading at the start of this path
! X_PATH_START(16) 110.174846 ; m ! Global X coordinate at the start of this path
! Y_PATH_START(16) 3.99281 ; m ! Global Y coordinate at the start of this path

NSEGMENTS(16)       1 ! Number of segments in this path
SEGMENT_TYPE(16,1)  1 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
XY_SEGMENT_ID(16,1) 16 ! XY_TABLE_ID number of spline table [I]
! S_SEGMENT_END(16,1) 697.4574278 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(16,1) 110.174846 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(16,1) 3.99281 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(16,1) -89.9987608 ; deg ! CALC -- Heading at end of segment

PATH_ID(17)      1016 ; North/south straight
OPT_PATH_START(17)  0 ! Set initial heading and X-Y coords? 0 -> no, 1 -> yes
OPT_PATH_LOOP(17)   1 ! Is this path looped? 0 -> no, 1 -> yes
SPATH_START(17)     0 ; m ! Station at the start of this path
! SPATH_LAP(17) 4083.003142 ; m ! CALC -- Lap distance for this path
! HEADING_START(17) 90.00313518 ; deg ! Heading at the start of this path
! X_PATH_START(17) -426.509454 ; m ! Global X coordinate at the start of this path
! Y_PATH_START(17) -496.01119 ; m ! Global Y coordinate at the start of this path

NSEGMENTS(17)       1 ! Number of segments in this path
SEGMENT_TYPE(17,1)  1 ! 0 -> straight, 1 -> table, 2 -> rho, 3 -> radius, 4 -> cloth
XY_SEGMENT_ID(17,1) 17 ! XY_TABLE_ID number of spline table [I]
! S_SEGMENT_END(17,1) 4083.003142 ; m ! CALC -- Station at end of this segment
! X_SEGMENT_END(17,1) -426.509454 ; m ! CALC -- X coordinate at end of segment
! Y_SEGMENT_END(17,1) -496.01119 ; m ! CALC -- Y coordinate at end of segment
! HEADING_END(17,1) 90.00313518 ; deg ! CALC -- Heading at end of segment

!------------------------------------------------------------------------------------
! ROAD SURFACES
!------------------------------------------------------------------------------------
! A VS Terrain surface defines elevation Z, friction MU, and rolling resistance
! RR_SURF as functions of global X and Y coordinates. The terrain data is contained
! in a single vsterrain file loaded with the command VS_TERRAIN_FILE.

! CURRENT_ROAD_ID   1 ! ROAD_ID during initialization [I]

!------------------------------------------------------------------------------------
! DRIVER MODEL: STEERING CONTROLLER AND VEHICLE REFERENCE PATH
!------------------------------------------------------------------------------------
! The built-in steering controller is a closed-loop path follower that calculates
! steering wheel angle in order to follow a specified lateral offset (LTARG_ID =
! LTARG_ID_DM) relative to a specified reference path (PATH_ID = PATH_ID_DM).
! Preview time is calculated with the Configurable Function TPREV.

N_LTARG             1 ! Number of LTARG datasets that are used in this run

PATH_ID_DM       1009 ! PATH_ID of the vehicle and DM reference path [I]
LTARG_ID_DM         1 ! LTARG_ID of LTARG dataset for DM (0 -> LTARG = 0)
OPT_INIT_PATH       0 ! Set Xo, Yo, and Yaw to match path PATH_ID_DM and LTARG_ID_DM
                      ! at station SSTART? 1 -> yes, 0 -> no [I]
OPT_DIRECTION       1 ! Travel direction along path PATH_ID_DM: 0 -> set to 1 or -1
                      ! using SSTART and SSTOP values (legacy); 1 -> increasing
                      ! station, -1 -> decreasing station [I]

OPT_DM              3 ! Driver model option: 0 -> no driver model; 1 -> use linear
                      ! dynamic model and 10 preview points; 2 -> same as 1, but
                      ! with no rear steer effect (legacy); 3 -> use geometry and a
                      ! single preview point [I]
OPT_DRIVER_ACTION   1 ! [D] Use steer from driver model (Steer_DM) when OPT_DM > 0?
                      ! 1 -> use Steer_DM, 0 -> ignore Steer_DM [I]
OPT_STR_BY_TRQ      0 ! Control by steering wheel torque? 0 -> no, 1 -> yes [I]
A_SW_MAX_DM       720 ; deg ! Limit steering wheel angle for DM
AV_SW_MAX_DM     1200 ; deg/s ! Limit steering wheel rate for DM
VLOW_DM            10 ; km/h ! Minimum speed for preview dist = V*TPREV
! XREF_DM           0 ; mm ! CALC -- Local X coordinate of DM reference point
XREF_DM_F           0 ; mm ! [D] X distance of DM ref. point in front of axle 1
XREF_DM_R           0 ; mm ! [D] X distance of DM ref. point in front of rear axle
YREF_DM             0 ; mm ! [D] Local Y coordinate of DM ref. point
! NPREVIEW          0 ! No. of installed preview sensors for external DM (read only)

!------------------------------------------------------------------------------------
! DRIVER MODEL: SPEED CONTROLLER
!------------------------------------------------------------------------------------
N_SPEED_TARGET      1 ! Number of SPEED_TARGET datasets for driver model, moving
                      ! objects, and VS Commands that are written below: 0 - 200

INSTALL_SPEED_CONTROLLER  ! VS Command to install the built-in speed controller
! The speed controller uses throttle and braking controls to follow target speed
! specified as a function of time and/or station along reference path PATH_ID_DM.
! The target speed is specified with Configurable Function SPEED_TARGET. If the
! speed is based on the path, then acceleration limits are specified using
! functions SPEED_AX_BRAKE, SPEED_AX_THROTTLE, SPEED_AY_LEFT, and SPEED_AY_RIGHT.

OPT_SC              3 ! Speed controller: 0 -> Off (open-loop), 1 - 3, target speed
                      ! is function of time and station, 4 -> target speed is
                      ! determined using path preview, 5 -> use acceleration
                      ! command Ax_SCcmd [I]
OPT_AUTO_RESET_IC   1 ! [D] Reset integral of speed error Vx_Err when Vx_Err changes
                      ! sign AND |Vx_IErr| > VX_IERR_DEAD_SC: 1 -> yes, 0 -> no
OPT_BK_SC           0 ! [D] Braking and SC: 0 -> turn controller off while brakes
                      ! are applied, 1 -> controller can use the brakes
OPT_SC_ENGINE_BRAKING 0 ! Use engine braking to control speed? 0 -> no, 1 -> yes
SPEED_ID_SC         1 ! SPEED_TARGET_ID for speed controller [I]
SPEED_KP         0.14 ; s/m ! [D] Speed controller: proportional control gain
SPEED_KP3           0 ; s3/m3 ! [D] Speed controller: cubic (verr^3) control gain
SPEED_KI         0.16 ; 1/m ! [D] Speed controller: integral control gain
VX_IERR_DEAD_SC     1 ; m ! [D] Integral control deadband for auto reset

!------------------------------------------------------------------------------------
! MOTION SENSORS
!------------------------------------------------------------------------------------
GPS_REF_ALT       250 ; m ! [D] GPS altitude when Z = 0
GPS_REF_LAT    42.231 ; deg ! [D] GPS latitude when Y = GPS_REF_Y [I]
GPS_REF_LONG  -83.727 ; deg ! [D] GPS longitude at GPS_REF_X and GPS_REF_Y
GPS_RANGE_Y      5000 ; m ! [D] Range in Y allowed before a GPS reset
GPS_REF_X           0 ; m ! [D] X coordinate at GPS_REF_LAT and GPS_REF_LONG
GPS_REF_Y           0 ; m ! [D] Y coordinate at GPS_REF_LAT

! NSENSOR_M         0 ! Number of installed custom motion sensors (read only)

!------------------------------------------------------------------------------------
! REFERENCE POINTS AND IMPORTED FORCES
!------------------------------------------------------------------------------------
! NREF_PT           0 ! Number of installed reference points and forces (read only)

!------------------------------------------------------------------------------------
! ABS CONTROLLER
!------------------------------------------------------------------------------------
INSTALL_ABS_CONTROLLER  ! VS Command to install the built-in ABS controller

OPT_ABS_CTRL(1)     2 ! ABS control option, axle 1: 0 -> No ABS, 1-> Single control
                      ! channel for axle, 2 -> Independent control channels for
                      ! each wheel
ABS_SLIP_ON(1)   0.12 ; - ! ABS: allow braking for slip below this limit
ABS_SLIP_OFF(1)  0.17 ; - ! ABS: release brake for slip above this limit
ABS_VMIN(1)         6 ; km/h ! Disable ABS for speed below this limit

OPT_ABS_CTRL(2)     2 ! ABS control option, axle 2
ABS_SLIP_ON(2)    0.1 ; - ! ABS: allow braking for slip below this limit
ABS_SLIP_OFF(2)  0.15 ; - ! ABS: release brake for slip above this limit
ABS_VMIN(2)         6 ; km/h ! Disable ABS for speed below this limit

!------------------------------------------------------------------------------------
! ELECTRONIC STABILITY CONTROLLER (ESC)
!------------------------------------------------------------------------------------
INSTALL_ESC           ! VS Command: install the built-in ESC

OPT_ESC_ON          1 ! [D] On/off status of built-in ESC: 0 -> off, 1- > on
AVZ_DEAD_ESC        4 ; deg/s ! Yaw-rate deadband for ESC
AY_LIMIT_ESC        1 ; g ! Lat. accel. limit when ESC always engages
AY_ROLL_LIMIT_ESC 0.4 ; g ! Lat. accel. limit before ESC will check roll
KP_AVZ_ESC          2 ; MPa-s/deg ! ESC gain for yaw-rate error
PBK_MAX_ESC        12 ; MPa ! Maximum brake pressure used by ESC
PBK_ACTIVE_ESC      3 ; MPa ! Brake pressure when ESC is declared "Active"
ROLL_LIMIT_ESC      7 ; deg ! Roll angle limit when Ay limit is reduced
R_BRAKE_ESC       0.8 ; - ! Brake pressure ratio (rear/front) used by ESC
! STEER_RATIO_ESC 18.56638007 ; - ! CALC -- Steering ratio (steering wheel)/(ave
                              ! front wheels) used by ESC
USG_ESC          3.19 ; deg/g ! Vehicle understeer gradient used by ESC
VLOW_ESC           15 ; km/h ! Lowest speed where ESC is enabled
! WB_ESC         2950 ; mm ! CALC -- Wheelbase used by ESC

!------------------------------------------------------------------------------------
! CONFIGURABLE FUNCTIONS
!------------------------------------------------------------------------------------

! CAMBER: Suspension camber (measured at zero steer). Camber can be a nonlinear
! CARPET function of jounce (other side) and jounce or a function of jounce
! (CONSTANT, COEFFICIENT, or TABLE) combined with a function
! SUSP_CAMBER_JNC_OTHER_SIDE of jounce (other side) (CONSTANT, COEFFICIENT, or
! TABLE). Camber from the calculation can be adjusted with CAMBER_GAIN and
! CAMBER_OFFSET. Jounce used in the calculation can be adjusted with JNC_SCALE_CAMBER
! and JNC_START_CAMBER. Jounce (other side) used in the calculation can be adjusted
! with JNC2_SCALE_CAMBER and JNC2_START_CAMBER. The derivative of this function is
! used internally. This configurable function supports 4 datasets; if indices shown
! below are not used, e.g., (1,2), the current values of the indices IAXLE and ISIDE
! are used to identify the dataset when reading data.

! 1D table: col 1 = jounce (mm), col 2 = camber (deg)
CAMBER_TABLE(1,1) SPLINE ! axle 1, left side
 -70, 1.08171
 -60, 0.996827
 -50, 0.88789
 -40, 0.755642
 -30, 0.600569
 -20, 0.422934
 -10, 0.222791
 0, 0
 10, -0.245764
 20, -0.515012
 30, -0.808436
 40, -1.12692
 50, -1.47156
 60, -1.84365
 70, -2.24474
ENDTABLE
CAMBER_GAIN(1,1)    1 ! Gain multiplied with calculated value to get camber
CAMBER_OFFSET(1,1)  0 ; deg ! Offset added (after gain) to get camber
JNC_START_CAMBER(1,1) 0 ; mm ! Offset subtracted from jounce
JNC_SCALE_CAMBER(1,1) 1 ! Scale factor divided into (jounce - JNC_START_CAMBER)
CAMBER_COMBINE(1,1) ADD ! How to combine the two components
SET_UNITS SUSP_CAMBER_JNC_OTHER_SIDE_TABLE(1,1) deg ;
SUSP_CAMBER_JNC_OTHER_SIDE_CONSTANT(1,1) 0 ; deg ! Constant camber component due to
                                           ! jounce (other side), axle 1, left side

! 1D table: col 1 = jounce (mm), col 2 = camber (deg)
CAMBER_TABLE(1,2) SPLINE ! axle 1, right side
 -70, 1.08171
 -60, 0.996827
 -50, 0.88789
 -40, 0.755642
 -30, 0.600569
 -20, 0.422934
 -10, 0.222791
 0, 0
 10, -0.245764
 20, -0.515012
 30, -0.808436
 40, -1.12692
 50, -1.47156
 60, -1.84365
 70, -2.24474
ENDTABLE
CAMBER_GAIN(1,2)    1 ! Gain multiplied with calculated value to get camber
CAMBER_OFFSET(1,2)  0 ; deg ! Offset added (after gain) to get camber
JNC_START_CAMBER(1,2) 0 ; mm ! Offset subtracted from jounce
JNC_SCALE_CAMBER(1,2) 1 ! Scale factor divided into (jounce - JNC_START_CAMBER)
CAMBER_COMBINE(1,2) ADD ! How to combine the two components
SET_UNITS SUSP_CAMBER_JNC_OTHER_SIDE_TABLE(1,2) deg ;
SUSP_CAMBER_JNC_OTHER_SIDE_CONSTANT(1,2) 0 ; deg ! Constant camber component due to
                                           ! jounce (other side), axle 1, right
                                           ! side

! CC_FX: Compliance: wheel camber due to in- and out-phase Fx. Camber displacement
! can be a nonlinear CARPET function of force (other side) and force or a function of
! force (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation can be
! defined at runtime. Camber displacement from the calculation can be adjusted with
! CC_FX_GAIN and CC_FX_OFFSET. Force used in the calculation can be adjusted with
! F_SCALE_CC_FX and F_START_CC_FX. Force (other side) used in the calculation can be
! adjusted with F2_SCALE_CC_FX and F2_START_CC_FX. This configurable function
! supports 4 datasets; if indices shown below are not used, e.g., (1,2), the current
! values of the indices IAXLE and ISIDE are used to identify the dataset when reading
! data.

CC_FX_COEFFICIENT(1,1) 0 ! Coefficient: camber displacement per unit force (deg/N),
                         ! axle 1, left side
CC_FX_OFFSET(1,1)   0 ; deg ! Offset added (after gain) to get camber displacement
F_START_CC_FX(1,1)  0 ; N ! Offset subtracted from force
F_SCALE_CC_FX(1,1)  1 ! Scale factor divided into (force - F_START_CC_FX)

CC_FX_COEFFICIENT(1,2) 0 ! Coefficient: camber displacement per unit force (deg/N),
                         ! axle 1, right side
CC_FX_OFFSET(1,2)   0 ; deg ! Offset added (after gain) to get camber displacement
F_START_CC_FX(1,2)  0 ; N ! Offset subtracted from force
F_SCALE_CC_FX(1,2)  1 ! Scale factor divided into (force - F_START_CC_FX)

CC_FX_COEFFICIENT(2,1) 0 ! Coefficient: camber displacement per unit force (deg/N),
                         ! axle 2, left side
CC_FX_OFFSET(2,1)   0 ; deg ! Offset added (after gain) to get camber displacement
F_START_CC_FX(2,1)  0 ; N ! Offset subtracted from force
F_SCALE_CC_FX(2,1)  1 ! Scale factor divided into (force - F_START_CC_FX)

CC_FX_COEFFICIENT(2,2) 0 ! Coefficient: camber displacement per unit force (deg/N),
                         ! axle 2, right side
CC_FX_OFFSET(2,2)   0 ; deg ! Offset added (after gain) to get camber displacement
F_START_CC_FX(2,2)  0 ; N ! Offset subtracted from force
F_SCALE_CC_FX(2,2)  1 ! Scale factor divided into (force - F_START_CC_FX)

! CD_MY: Compliance: suspension dive due to in- and out-phase My. Dive displacement
! can be a nonlinear CARPET function of moment (other side) and moment or a function
! of moment (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation can
! be defined at runtime. Dive displacement from the calculation can be adjusted with
! CD_MY_GAIN and CD_MY_OFFSET. Moment used in the calculation can be adjusted with
! M_SCALE_CD_MY and M_START_CD_MY. Moment (other side) used in the calculation can be
! adjusted with M2_SCALE_CD_MY and M2_START_CD_MY. This configurable function
! supports 4 datasets; if indices shown below are not used, e.g., (1,2), the current
! values of the indices IAXLE and ISIDE are used to identify the dataset when reading
! data.

CD_MY_COEFFICIENT(1,1) 0 ! Coefficient: dive displacement per unit moment (deg/N-m),
                         ! axle 1, left side
CD_MY_OFFSET(1,1)   0 ; deg ! Offset added (after gain) to get dive displacement
M_START_CD_MY(1,1)  0 ; N-m ! Offset subtracted from moment
M_SCALE_CD_MY(1,1)  1 ! Scale factor divided into (moment - M_START_CD_MY)

CD_MY_COEFFICIENT(1,2) 0 ! Coefficient: dive displacement per unit moment (deg/N-m),
                         ! axle 1, right side
CD_MY_OFFSET(1,2)   0 ; deg ! Offset added (after gain) to get dive displacement
M_START_CD_MY(1,2)  0 ; N-m ! Offset subtracted from moment
M_SCALE_CD_MY(1,2)  1 ! Scale factor divided into (moment - M_START_CD_MY)

! CI_FY: Compliance: inclination of wheel due in- and out-phase Fy. Inclination
! displacement can be a nonlinear CARPET function of force (other side) and force or
! a function of force (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom
! equation can be defined at runtime. Inclination displacement from the calculation
! can be adjusted with CI_FY_GAIN and CI_FY_OFFSET. Force used in the calculation can
! be adjusted with F_SCALE_CI_FY and F_START_CI_FY. Force (other side) used in the
! calculation can be adjusted with F2_SCALE_CI_FY and F2_START_CI_FY. This
! configurable function supports 4 datasets; if indices shown below are not used,
! e.g., (1,2), the current values of the indices IAXLE and ISIDE are used to identify
! the dataset when reading data.

CI_FY_COEFFICIENT(1,1) 5e-05 ! Coefficient: inclination displacement per unit force
                             ! (deg/N), axle 1, left side
CI_FY_GAIN(1,1)     1 ! Gain multiplied with calculated value to get inclination
                      ! displacement
CI_FY_OFFSET(1,1)   0 ; deg ! Offset added (after gain) to get inclination
                      ! displacement
F_START_CI_FY(1,1)  0 ; N ! Offset subtracted from force
F_SCALE_CI_FY(1,1)  1 ! Scale factor divided into (force - F_START_CI_FY)

CI_FY_COEFFICIENT(1,2) 5e-05 ! Coefficient: inclination displacement per unit force
                             ! (deg/N), axle 1, right side
CI_FY_GAIN(1,2)     1 ! Gain multiplied with calculated value to get inclination
                      ! displacement
CI_FY_OFFSET(1,2)   0 ; deg ! Offset added (after gain) to get inclination
                      ! displacement
F_START_CI_FY(1,2)  0 ; N ! Offset subtracted from force
F_SCALE_CI_FY(1,2)  1 ! Scale factor divided into (force - F_START_CI_FY)

CI_FY_COEFFICIENT(2,1) 0 ! Coefficient: inclination displacement per unit force
                         ! (deg/N), axle 2, left side
CI_FY_OFFSET(2,1)   0 ; deg ! Offset added (after gain) to get inclination
                      ! displacement
F_START_CI_FY(2,1)  0 ; N ! Offset subtracted from force
F_SCALE_CI_FY(2,1)  1 ! Scale factor divided into (force - F_START_CI_FY)

CI_FY_COEFFICIENT(2,2) 0 ! Coefficient: inclination displacement per unit force
                         ! (deg/N), axle 2, right side
CI_FY_OFFSET(2,2)   0 ; deg ! Offset added (after gain) to get inclination
                      ! displacement
F_START_CI_FY(2,2)  0 ; N ! Offset subtracted from force
F_SCALE_CI_FY(2,2)  1 ! Scale factor divided into (force - F_START_CI_FY)

! CI_MZ: Compliance: inclination of wheel due to in- and out-phase Mz. Inclination
! displacement can be a nonlinear CARPET function of moment (other side) and moment
! or a function of moment (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom
! equation can be defined at runtime. Inclination displacement from the calculation
! can be adjusted with CI_MZ_GAIN and CI_MZ_OFFSET. Moment used in the calculation
! can be adjusted with M_SCALE_CI_MZ and M_START_CI_MZ. Moment (other side) used in
! the calculation can be adjusted with M2_SCALE_CI_MZ and M2_START_CI_MZ. This
! configurable function supports 4 datasets; if indices shown below are not used,
! e.g., (1,2), the current values of the indices IAXLE and ISIDE are used to identify
! the dataset when reading data.

CI_MZ_COEFFICIENT(1,1) -5.3e-05 ! Coefficient: inclination displacement per unit
                                ! moment (deg/N-m), axle 1, left side
CI_MZ_GAIN(1,1)     1 ! Gain multiplied with calculated value to get inclination
                      ! displacement
CI_MZ_OFFSET(1,1)   0 ; deg ! Offset added (after gain) to get inclination
                      ! displacement
M_START_CI_MZ(1,1)  0 ; N-m ! Offset subtracted from moment
M_SCALE_CI_MZ(1,1)  1 ! Scale factor divided into (moment - M_START_CI_MZ)

CI_MZ_COEFFICIENT(1,2) -5.3e-05 ! Coefficient: inclination displacement per unit
                                ! moment (deg/N-m), axle 1, right side
CI_MZ_GAIN(1,2)     1 ! Gain multiplied with calculated value to get inclination
                      ! displacement
CI_MZ_OFFSET(1,2)   0 ; deg ! Offset added (after gain) to get inclination
                      ! displacement
M_START_CI_MZ(1,2)  0 ; N-m ! Offset subtracted from moment
M_SCALE_CI_MZ(1,2)  1 ! Scale factor divided into (moment - M_START_CI_MZ)

CI_MZ_COEFFICIENT(2,1) 0 ! Coefficient: inclination displacement per unit moment
                         ! (deg/N-m), axle 2, left side
CI_MZ_OFFSET(2,1)   0 ; deg ! Offset added (after gain) to get inclination
                      ! displacement
M_START_CI_MZ(2,1)  0 ; N-m ! Offset subtracted from moment
M_SCALE_CI_MZ(2,1)  1 ! Scale factor divided into (moment - M_START_CI_MZ)

CI_MZ_COEFFICIENT(2,2) 0 ! Coefficient: inclination displacement per unit moment
                         ! (deg/N-m), axle 2, right side
CI_MZ_OFFSET(2,2)   0 ; deg ! Offset added (after gain) to get inclination
                      ! displacement
M_START_CI_MZ(2,2)  0 ; N-m ! Offset subtracted from moment
M_SCALE_CI_MZ(2,2)  1 ! Scale factor divided into (moment - M_START_CI_MZ)

! CLUTCH_CONTROL_DIFF: Differential clutch control input based on total torque
! applied to both output shafts. Normalized clutch input is a function of torque
! (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation can be defined
! at runtime. Normalized clutch input from the calculation can be adjusted with
! CLUTCH_CONTROL_DIFF_GAIN and CLUTCH_CONTROL_DIFF_OFFSET. Torque used in the
! calculation can be adjusted with M_SCALE_CL_CON_DIFF and M_START_CL_CON_DIFF. This
! configurable function supports 3 datasets; if indices shown below are not used,
! e.g., (2), the current value of the index IDIFF is used to identify the dataset
! when reading data.

CLUTCH_CONTROL_DIFF_CONSTANT(1) 1 ; - ! [D] Constant normalized clutch input, front
                                  ! diff
CLUTCH_CONTROL_DIFF_GAIN(1) 1 ! Gain multiplied with calculated value to get
                              ! normalized clutch input
CLUTCH_CONTROL_DIFF_OFFSET(1) 0 ; - ! Offset added (after gain) to get normalized
                                ! clutch input

CLUTCH_CONTROL_DIFF_CONSTANT(2) 1 ; - ! [D] Constant normalized clutch input, rear
                                  ! diff
CLUTCH_CONTROL_DIFF_GAIN(2) 1 ! Gain multiplied with calculated value to get
                              ! normalized clutch input
CLUTCH_CONTROL_DIFF_OFFSET(2) 0 ; - ! Offset added (after gain) to get normalized
                                ! clutch input

CLUTCH_CONTROL_DIFF_CONSTANT(3) 1 ; - ! [D] Constant normalized clutch input,
                                  ! transfer case
CLUTCH_CONTROL_DIFF_GAIN(3) 1 ! Gain multiplied with calculated value to get
                              ! normalized clutch input
CLUTCH_CONTROL_DIFF_OFFSET(3) 0 ; - ! Offset added (after gain) to get normalized
                                ! clutch input

! CLUTCH_TORQUE_DIFF: Available torque for differential clutch. Available torque is
! a function of normalized clutch input (CONSTANT, COEFFICIENT, or TABLE).
! Alternatively, a custom equation can be defined at runtime. Available torque from
! the calculation can be adjusted with CLUTCH_TORQUE_DIFF_GAIN and
! CLUTCH_TORQUE_DIFF_OFFSET. Normalized clutch input used in the calculation can be
! adjusted with CON_SCALE_CL_TORQ_DIFF and CON_START_CL_TORQ_DIFF. This configurable
! function supports 3 datasets; if indices shown below are not used, e.g., (2), the
! current value of the index IDIFF is used to identify the dataset when reading data.

CLUTCH_TORQUE_DIFF_CONSTANT(1) 0 ; N-m ! [D] Constant available torque, front diff
CLUTCH_TORQUE_DIFF_OFFSET(1) 0 ; N-m ! Offset added (after gain) to get available
                               ! torque

CLUTCH_TORQUE_DIFF_CONSTANT(2) 0 ; N-m ! [D] Constant available torque, rear diff
CLUTCH_TORQUE_DIFF_OFFSET(2) 0 ; N-m ! Offset added (after gain) to get available
                               ! torque

CLUTCH_TORQUE_DIFF_CONSTANT(3) 0 ; N-m ! [D] Constant available torque, transfer
                                 ! case
CLUTCH_TORQUE_DIFF_OFFSET(3) 0 ; N-m ! Offset added (after gain) to get available
                               ! torque

! CMP_DAMP: Damper compression. Damper compression is a function of jounce at wheel
! (CONSTANT, COEFFICIENT, or TABLE). Damper compression from the calculation can be
! adjusted with CMP_DAMP_GAIN and CMP_DAMP_OFFSET. Jounce at wheel used in the
! calculation can be adjusted with JNC_SCALE_CMP_DAMP and JNC_START_CMP_DAMP. The
! derivative of this function is used internally. This configurable function supports
! 4 datasets; if indices shown below are not used, e.g., (1,2), the current values of
! the indices IAXLE and ISIDE are used to identify the dataset when reading data.

CMP_DAMP_COEFFICIENT(1,1) 0.614 ! Coefficient: damper compression per unit jounce at
                                ! wheel (mm/mm), axle 1, left side
CMP_DAMP_GAIN(1,1)  1 ! Gain multiplied with calculated value to get damper
                      ! compression
CMP_DAMP_OFFSET(1,1) 0 ; mm ! Offset added (after gain) to get damper compression
JNC_START_CMP_DAMP(1,1) 0 ; mm ! Offset subtracted from jounce at wheel
JNC_SCALE_CMP_DAMP(1,1) 1 ! Scale factor divided into (jounce at wheel -
                          ! JNC_START_CMP_DAMP)

CMP_DAMP_COEFFICIENT(1,2) 0.614 ! Coefficient: damper compression per unit jounce at
                                ! wheel (mm/mm), axle 1, right side
CMP_DAMP_GAIN(1,2)  1 ! Gain multiplied with calculated value to get damper
                      ! compression
CMP_DAMP_OFFSET(1,2) 0 ; mm ! Offset added (after gain) to get damper compression
JNC_START_CMP_DAMP(1,2) 0 ; mm ! Offset subtracted from jounce at wheel
JNC_SCALE_CMP_DAMP(1,2) 1 ! Scale factor divided into (jounce at wheel -
                          ! JNC_START_CMP_DAMP)

CMP_DAMP_COEFFICIENT(2,1) 1 ! Coefficient: damper compression per unit jounce at
                            ! wheel (mm/mm), axle 2, left side
CMP_DAMP_GAIN(2,1)  1 ! Gain multiplied with calculated value to get damper
                      ! compression
CMP_DAMP_OFFSET(2,1) 0 ; mm ! Offset added (after gain) to get damper compression
JNC_START_CMP_DAMP(2,1) 0 ; mm ! Offset subtracted from jounce at wheel
JNC_SCALE_CMP_DAMP(2,1) 1 ! Scale factor divided into (jounce at wheel -
                          ! JNC_START_CMP_DAMP)

CMP_DAMP_COEFFICIENT(2,2) 1 ! Coefficient: damper compression per unit jounce at
                            ! wheel (mm/mm), axle 2, right side
CMP_DAMP_GAIN(2,2)  1 ! Gain multiplied with calculated value to get damper
                      ! compression
CMP_DAMP_OFFSET(2,2) 0 ; mm ! Offset added (after gain) to get damper compression
JNC_START_CMP_DAMP(2,2) 0 ; mm ! Offset subtracted from jounce at wheel
JNC_SCALE_CMP_DAMP(2,2) 1 ! Scale factor divided into (jounce at wheel -
                          ! JNC_START_CMP_DAMP)

! CMP_JSTOP: Jounce bumper deflection. Jounce stop deflection is a function of
! jounce at wheel (CONSTANT, COEFFICIENT, or TABLE). Jounce stop deflection from the
! calculation can be adjusted with CMP_JSTOP_GAIN and CMP_JSTOP_OFFSET. Jounce at
! wheel used in the calculation can be adjusted with JNC_SCALE_CMP_JSTOP and
! JNC_START_CMP_JSTOP. The derivative of this function is used internally. This
! configurable function supports 4 datasets; if indices shown below are not used,
! e.g., (1,2), the current values of the indices IAXLE and ISIDE are used to identify
! the dataset when reading data.

CMP_JSTOP_COEFFICIENT(1,1) 0.614 ! Coefficient: jounce stop deflection per unit
                                 ! jounce at wheel (mm/mm), axle 1, left side
CMP_JSTOP_GAIN(1,1) 1 ! Gain multiplied with calculated value to get jounce stop
                      ! deflection
CMP_JSTOP_OFFSET(1,1) 0 ; mm ! Offset added (after gain) to get jounce stop
                        ! deflection
JNC_START_CMP_JSTOP(1,1) 0 ; mm ! Offset subtracted from jounce at wheel
JNC_SCALE_CMP_JSTOP(1,1) 1 ! Scale factor divided into (jounce at wheel -
                           ! JNC_START_CMP_JSTOP)

CMP_JSTOP_COEFFICIENT(1,2) 0.614 ! Coefficient: jounce stop deflection per unit
                                 ! jounce at wheel (mm/mm), axle 1, right side
CMP_JSTOP_GAIN(1,2) 1 ! Gain multiplied with calculated value to get jounce stop
                      ! deflection
CMP_JSTOP_OFFSET(1,2) 0 ; mm ! Offset added (after gain) to get jounce stop
                        ! deflection
JNC_START_CMP_JSTOP(1,2) 0 ; mm ! Offset subtracted from jounce at wheel
JNC_SCALE_CMP_JSTOP(1,2) 1 ! Scale factor divided into (jounce at wheel -
                           ! JNC_START_CMP_JSTOP)

CMP_JSTOP_COEFFICIENT(2,1) 1 ! Coefficient: jounce stop deflection per unit jounce
                             ! at wheel (mm/mm), axle 2, left side
CMP_JSTOP_GAIN(2,1) 1 ! Gain multiplied with calculated value to get jounce stop
                      ! deflection
CMP_JSTOP_OFFSET(2,1) 0 ; mm ! Offset added (after gain) to get jounce stop
                        ! deflection
JNC_START_CMP_JSTOP(2,1) 0 ; mm ! Offset subtracted from jounce at wheel
JNC_SCALE_CMP_JSTOP(2,1) 1 ! Scale factor divided into (jounce at wheel -
                           ! JNC_START_CMP_JSTOP)

CMP_JSTOP_COEFFICIENT(2,2) 1 ! Coefficient: jounce stop deflection per unit jounce
                             ! at wheel (mm/mm), axle 2, right side
CMP_JSTOP_GAIN(2,2) 1 ! Gain multiplied with calculated value to get jounce stop
                      ! deflection
CMP_JSTOP_OFFSET(2,2) 0 ; mm ! Offset added (after gain) to get jounce stop
                        ! deflection
JNC_START_CMP_JSTOP(2,2) 0 ; mm ! Offset subtracted from jounce at wheel
JNC_SCALE_CMP_JSTOP(2,2) 1 ! Scale factor divided into (jounce at wheel -
                           ! JNC_START_CMP_JSTOP)

! CMP_RSTOP: Rebound stop deflection. Rebound stop deflection is a function of
! jounce at wheel (CONSTANT, COEFFICIENT, or TABLE). Rebound stop deflection from the
! calculation can be adjusted with CMP_RSTOP_GAIN and CMP_RSTOP_OFFSET. Jounce at
! wheel used in the calculation can be adjusted with JNC_SCALE_CMP_RSTOP and
! JNC_START_CMP_RSTOP. The derivative of this function is used internally. This
! configurable function supports 4 datasets; if indices shown below are not used,
! e.g., (1,2), the current values of the indices IAXLE and ISIDE are used to identify
! the dataset when reading data.

CMP_RSTOP_COEFFICIENT(1,1) 0.614 ! Coefficient: rebound stop deflection per unit
                                 ! jounce at wheel (mm/mm), axle 1, left side
CMP_RSTOP_GAIN(1,1) 1 ! Gain multiplied with calculated value to get rebound stop
                      ! deflection
CMP_RSTOP_OFFSET(1,1) 0 ; mm ! Offset added (after gain) to get rebound stop
                        ! deflection
JNC_START_CMP_RSTOP(1,1) 0 ; mm ! Offset subtracted from jounce at wheel
JNC_SCALE_CMP_RSTOP(1,1) 1 ! Scale factor divided into (jounce at wheel -
                           ! JNC_START_CMP_RSTOP)

CMP_RSTOP_COEFFICIENT(1,2) 0.614 ! Coefficient: rebound stop deflection per unit
                                 ! jounce at wheel (mm/mm), axle 1, right side
CMP_RSTOP_GAIN(1,2) 1 ! Gain multiplied with calculated value to get rebound stop
                      ! deflection
CMP_RSTOP_OFFSET(1,2) 0 ; mm ! Offset added (after gain) to get rebound stop
                        ! deflection
JNC_START_CMP_RSTOP(1,2) 0 ; mm ! Offset subtracted from jounce at wheel
JNC_SCALE_CMP_RSTOP(1,2) 1 ! Scale factor divided into (jounce at wheel -
                           ! JNC_START_CMP_RSTOP)

CMP_RSTOP_COEFFICIENT(2,1) 1 ! Coefficient: rebound stop deflection per unit jounce
                             ! at wheel (mm/mm), axle 2, left side
CMP_RSTOP_GAIN(2,1) 1 ! Gain multiplied with calculated value to get rebound stop
                      ! deflection
CMP_RSTOP_OFFSET(2,1) 0 ; mm ! Offset added (after gain) to get rebound stop
                        ! deflection
JNC_START_CMP_RSTOP(2,1) 0 ; mm ! Offset subtracted from jounce at wheel
JNC_SCALE_CMP_RSTOP(2,1) 1 ! Scale factor divided into (jounce at wheel -
                           ! JNC_START_CMP_RSTOP)

CMP_RSTOP_COEFFICIENT(2,2) 1 ! Coefficient: rebound stop deflection per unit jounce
                             ! at wheel (mm/mm), axle 2, right side
CMP_RSTOP_GAIN(2,2) 1 ! Gain multiplied with calculated value to get rebound stop
                      ! deflection
CMP_RSTOP_OFFSET(2,2) 0 ; mm ! Offset added (after gain) to get rebound stop
                        ! deflection
JNC_START_CMP_RSTOP(2,2) 0 ; mm ! Offset subtracted from jounce at wheel
JNC_SCALE_CMP_RSTOP(2,2) 1 ! Scale factor divided into (jounce at wheel -
                           ! JNC_START_CMP_RSTOP)

! CMP_SPR_SEAT: Lower spring seat movement. Lower spring seat movement is a function
! of jounce at wheel (COEFFICIENT or TABLE). Lower spring seat movement from the
! calculation can be adjusted with CMP_SPR_SEAT_GAIN and CMP_SPR_SEAT_OFFSET. Jounce
! at wheel used in the calculation can be adjusted with JNC_SCALE_CMP_SPR_SEAT and
! JNC_START_CMP_SPR_SEAT. An inverse version of this function is used internally. The
! derivative of this function is used internally. This configurable function supports
! 4 datasets; if indices shown below are not used, e.g., (1,2), the current values of
! the indices IAXLE and ISIDE are used to identify the dataset when reading data.

CMP_SPR_SEAT_COEFFICIENT(1,1) 0.6111 ! Coefficient: lower spring seat movement per
                                     ! unit jounce at wheel (mm/mm), axle 1, left
                                     ! side
CMP_SPR_SEAT_GAIN(1,1) 1 ! Gain multiplied with calculated value to get lower spring
                         ! seat movement
CMP_SPR_SEAT_OFFSET(1,1) 0 ; mm ! Offset added (after gain) to get lower spring seat
                           ! movement
JNC_START_CMP_SPR_SEAT(1,1) 0 ; mm ! Offset subtracted from jounce at wheel
JNC_SCALE_CMP_SPR_SEAT(1,1) 1 ! Scale factor divided into (jounce at wheel -
                              ! JNC_START_CMP_SPR_SEAT)

CMP_SPR_SEAT_COEFFICIENT(1,2) 0.6111 ! Coefficient: lower spring seat movement per
                                     ! unit jounce at wheel (mm/mm), axle 1, right
                                     ! side
CMP_SPR_SEAT_GAIN(1,2) 1 ! Gain multiplied with calculated value to get lower spring
                         ! seat movement
CMP_SPR_SEAT_OFFSET(1,2) 0 ; mm ! Offset added (after gain) to get lower spring seat
                           ! movement
JNC_START_CMP_SPR_SEAT(1,2) 0 ; mm ! Offset subtracted from jounce at wheel
JNC_SCALE_CMP_SPR_SEAT(1,2) 1 ! Scale factor divided into (jounce at wheel -
                              ! JNC_START_CMP_SPR_SEAT)

CMP_SPR_SEAT_COEFFICIENT(2,1) 1 ! Coefficient: lower spring seat movement per unit
                                ! jounce at wheel (mm/mm), axle 2, left side
CMP_SPR_SEAT_GAIN(2,1) 1 ! Gain multiplied with calculated value to get lower spring
                         ! seat movement
CMP_SPR_SEAT_OFFSET(2,1) 0 ; mm ! Offset added (after gain) to get lower spring seat
                           ! movement
JNC_START_CMP_SPR_SEAT(2,1) 0 ; mm ! Offset subtracted from jounce at wheel
JNC_SCALE_CMP_SPR_SEAT(2,1) 1 ! Scale factor divided into (jounce at wheel -
                              ! JNC_START_CMP_SPR_SEAT)

CMP_SPR_SEAT_COEFFICIENT(2,2) 1 ! Coefficient: lower spring seat movement per unit
                                ! jounce at wheel (mm/mm), axle 2, right side
CMP_SPR_SEAT_GAIN(2,2) 1 ! Gain multiplied with calculated value to get lower spring
                         ! seat movement
CMP_SPR_SEAT_OFFSET(2,2) 0 ; mm ! Offset added (after gain) to get lower spring seat
                           ! movement
JNC_START_CMP_SPR_SEAT(2,2) 0 ; mm ! Offset subtracted from jounce at wheel
JNC_SCALE_CMP_SPR_SEAT(2,2) 1 ! Scale factor divided into (jounce at wheel -
                              ! JNC_START_CMP_SPR_SEAT)

! CS_FY: Compliance: steer due to in- and out-phase Fy. Steer displacement can be a
! nonlinear CARPET function of force (other side) and force or a function of force
! (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation can be defined
! at runtime. Steer displacement from the calculation can be adjusted with CS_FY_GAIN
! and CS_FY_OFFSET. Force used in the calculation can be adjusted with F_SCALE_CS_FY
! and F_START_CS_FY. Force (other side) used in the calculation can be adjusted with
! F2_SCALE_CS_FY and F2_START_CS_FY. This configurable function supports 4 datasets;
! if indices shown below are not used, e.g., (1,2), the current values of the indices
! IAXLE and ISIDE are used to identify the dataset when reading data.

CS_FY_COEFFICIENT(1,1) -3.2e-06 ! Coefficient: Steer displacement per unit force
                                ! (deg/N), axle 1, left side
CS_FY_GAIN(1,1)     1 ! Gain multiplied with calculated value to get Steer
                      ! displacement
CS_FY_OFFSET(1,1)   0 ; deg ! Offset added (after gain) to get Steer displacement
F_START_CS_FY(1,1)  0 ; N ! Offset subtracted from force
F_SCALE_CS_FY(1,1)  1 ! Scale factor divided into (force - F_START_CS_FY)

CS_FY_COEFFICIENT(1,2) -3.2e-06 ! Coefficient: Steer displacement per unit force
                                ! (deg/N), axle 1, right side
CS_FY_GAIN(1,2)     1 ! Gain multiplied with calculated value to get Steer
                      ! displacement
CS_FY_OFFSET(1,2)   0 ; deg ! Offset added (after gain) to get Steer displacement
F_START_CS_FY(1,2)  0 ; N ! Offset subtracted from force
F_SCALE_CS_FY(1,2)  1 ! Scale factor divided into (force - F_START_CS_FY)

CS_FY_COEFFICIENT(2,1) 5.6e-05 ! Coefficient: Steer displacement per unit force
                               ! (deg/N), axle 2, left side
CS_FY_GAIN(2,1)     1 ! Gain multiplied with calculated value to get Steer
                      ! displacement
CS_FY_OFFSET(2,1)   0 ; deg ! Offset added (after gain) to get Steer displacement
F_START_CS_FY(2,1)  0 ; N ! Offset subtracted from force
F_SCALE_CS_FY(2,1)  1 ! Scale factor divided into (force - F_START_CS_FY)

CS_FY_COEFFICIENT(2,2) 5.6e-05 ! Coefficient: Steer displacement per unit force
                               ! (deg/N), axle 2, right side
CS_FY_GAIN(2,2)     1 ! Gain multiplied with calculated value to get Steer
                      ! displacement
CS_FY_OFFSET(2,2)   0 ; deg ! Offset added (after gain) to get Steer displacement
F_START_CS_FY(2,2)  0 ; N ! Offset subtracted from force
F_SCALE_CS_FY(2,2)  1 ! Scale factor divided into (force - F_START_CS_FY)

! CS_MZ: Compliance: steer due to in- and out-phase Mz. Steer displacement can be a
! nonlinear CARPET function of moment and moment or a function of moment (CONSTANT,
! COEFFICIENT, or TABLE). Alternatively, a custom equation can be defined at runtime.
! Steer displacement from the calculation can be adjusted with CS_MZ_GAIN and
! CS_MZ_OFFSET. Moment used in the calculation can be adjusted with M_SCALE_CS_MZ and
! M_START_CS_MZ. Moment used in the calculation can be adjusted with M2_SCALE_CS_MZ
! and M2_START_CS_MZ. This configurable function supports 4 datasets; if indices
! shown below are not used, e.g., (1,2), the current values of the indices IAXLE and
! ISIDE are used to identify the dataset when reading data.

CS_MZ_COEFFICIENT(1,1) 0.00014 ! Coefficient: steer displacement per unit moment
                               ! (deg/N-m), axle 1, left side
CS_MZ_GAIN(1,1)     1 ! Gain multiplied with calculated value to get steer
                      ! displacement
CS_MZ_OFFSET(1,1)   0 ; deg ! Offset added (after gain) to get steer displacement
M_START_CS_MZ(1,1)  0 ; N-m ! Offset subtracted from moment
M_SCALE_CS_MZ(1,1)  1 ! Scale factor divided into (moment - M_START_CS_MZ)

CS_MZ_COEFFICIENT(1,2) 0.00014 ! Coefficient: steer displacement per unit moment
                               ! (deg/N-m), axle 1, right side
CS_MZ_GAIN(1,2)     1 ! Gain multiplied with calculated value to get steer
                      ! displacement
CS_MZ_OFFSET(1,2)   0 ; deg ! Offset added (after gain) to get steer displacement
M_START_CS_MZ(1,2)  0 ; N-m ! Offset subtracted from moment
M_SCALE_CS_MZ(1,2)  1 ! Scale factor divided into (moment - M_START_CS_MZ)

CS_MZ_COEFFICIENT(2,1) -0.00095 ! Coefficient: steer displacement per unit moment
                                ! (deg/N-m), axle 2, left side
CS_MZ_GAIN(2,1)     1 ! Gain multiplied with calculated value to get steer
                      ! displacement
CS_MZ_OFFSET(2,1)   0 ; deg ! Offset added (after gain) to get steer displacement
M_START_CS_MZ(2,1)  0 ; N-m ! Offset subtracted from moment
M_SCALE_CS_MZ(2,1)  1 ! Scale factor divided into (moment - M_START_CS_MZ)

CS_MZ_COEFFICIENT(2,2) -0.00095 ! Coefficient: steer displacement per unit moment
                                ! (deg/N-m), axle 2, right side
CS_MZ_GAIN(2,2)     1 ! Gain multiplied with calculated value to get steer
                      ! displacement
CS_MZ_OFFSET(2,2)   0 ; deg ! Offset added (after gain) to get steer displacement
M_START_CS_MZ(2,2)  0 ; N-m ! Offset subtracted from moment
M_SCALE_CS_MZ(2,2)  1 ! Scale factor divided into (moment - M_START_CS_MZ)

! CT_FX: Compliance: wheel toe due to in- and out-phase Fx. Toe displacement can be
! a nonlinear CARPET function of force (other side) and force or a function of force
! (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation can be defined
! at runtime. Toe displacement from the calculation can be adjusted with CT_FX_GAIN
! and CT_FX_OFFSET. Force used in the calculation can be adjusted with F_SCALE_CT_FX
! and F_START_CT_FX. Force (other side) used in the calculation can be adjusted with
! F2_SCALE_CT_FX and F2_START_CT_FX. This configurable function supports 4 datasets;
! if indices shown below are not used, e.g., (1,2), the current values of the indices
! IAXLE and ISIDE are used to identify the dataset when reading data.

CT_FX_COEFFICIENT(1,1) -1.9e-06 ! Coefficient: toe displacement per unit force
                                ! (deg/N), axle 1, left side
CT_FX_GAIN(1,1)     1 ! Gain multiplied with calculated value to get toe
                      ! displacement
CT_FX_OFFSET(1,1)   0 ; deg ! Offset added (after gain) to get toe displacement
F_START_CT_FX(1,1)  0 ; N ! Offset subtracted from force
F_SCALE_CT_FX(1,1)  1 ! Scale factor divided into (force - F_START_CT_FX)

CT_FX_COEFFICIENT(1,2) -1.9e-06 ! Coefficient: toe displacement per unit force
                                ! (deg/N), axle 1, right side
CT_FX_GAIN(1,2)     1 ! Gain multiplied with calculated value to get toe
                      ! displacement
CT_FX_OFFSET(1,2)   0 ; deg ! Offset added (after gain) to get toe displacement
F_START_CT_FX(1,2)  0 ; N ! Offset subtracted from force
F_SCALE_CT_FX(1,2)  1 ! Scale factor divided into (force - F_START_CT_FX)

CT_FX_COEFFICIENT(2,1) 0 ! Coefficient: toe displacement per unit force (deg/N),
                         ! axle 2, left side
CT_FX_OFFSET(2,1)   0 ; deg ! Offset added (after gain) to get toe displacement
F_START_CT_FX(2,1)  0 ; N ! Offset subtracted from force
F_SCALE_CT_FX(2,1)  1 ! Scale factor divided into (force - F_START_CT_FX)

CT_FX_COEFFICIENT(2,2) 0 ! Coefficient: toe displacement per unit force (deg/N),
                         ! axle 2, right side
CT_FX_OFFSET(2,2)   0 ; deg ! Offset added (after gain) to get toe displacement
F_START_CT_FX(2,2)  0 ; N ! Offset subtracted from force
F_SCALE_CT_FX(2,2)  1 ! Scale factor divided into (force - F_START_CT_FX)

! C_LAT: Compliance: lateral displacement of wheel due to in- and out-phase Fy .
! Lateral displacement can be a nonlinear CARPET function of force (other side) and
! force or a function of force (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a
! custom equation can be defined at runtime. Lateral displacement from the
! calculation can be adjusted with C_LAT_GAIN and C_LAT_OFFSET. Force used in the
! calculation can be adjusted with F_SCALE_C_LAT and F_START_C_LAT. Force (other
! side) used in the calculation can be adjusted with F2_SCALE_C_LAT and
! F2_START_C_LAT. This configurable function supports 4 datasets; if indices shown
! below are not used, e.g., (1,2), the current values of the indices IAXLE and ISIDE
! are used to identify the dataset when reading data.

C_LAT_COEFFICIENT(1,1) 2.1e-05 ! Coefficient: lateral displacement per unit force
                               ! (mm/N), axle 1, left side
C_LAT_GAIN(1,1)     1 ! Gain multiplied with calculated value to get lateral
                      ! displacement
C_LAT_OFFSET(1,1)   0 ; mm ! Offset added (after gain) to get lateral displacement
F_START_C_LAT(1,1)  0 ; N ! Offset subtracted from force
F_SCALE_C_LAT(1,1)  1 ! Scale factor divided into (force - F_START_C_LAT)

C_LAT_COEFFICIENT(1,2) 2.1e-05 ! Coefficient: lateral displacement per unit force
                               ! (mm/N), axle 1, right side
C_LAT_GAIN(1,2)     1 ! Gain multiplied with calculated value to get lateral
                      ! displacement
C_LAT_OFFSET(1,2)   0 ; mm ! Offset added (after gain) to get lateral displacement
F_START_C_LAT(1,2)  0 ; N ! Offset subtracted from force
F_SCALE_C_LAT(1,2)  1 ! Scale factor divided into (force - F_START_C_LAT)

! C_LAT_AXLE: Compliance: axle lateral leftward deflection due to total Fy.
! C_LAT_AXLE displacement is a function of force (CONSTANT, COEFFICIENT, or TABLE).
! Alternatively, a custom equation can be defined at runtime. C_LAT_AXLE displacement
! from the calculation can be adjusted with C_LAT_AXLE_GAIN and C_LAT_AXLE_OFFSET.
! Force used in the calculation can be adjusted with F_SCALE_C_LAT_AXLE and
! F_START_C_LAT_AXLE. This configurable function supports 2 datasets; if indices
! shown below are not used, e.g., (2), the current value of the index IAXLE is used
! to identify the dataset when reading data.

C_LAT_AXLE_COEFFICIENT(2) 3.8e-05 ! Coefficient: C_LAT_AXLE displacement per unit
                                  ! force (mm/N), axle 2
C_LAT_AXLE_GAIN(2)  1 ! Gain multiplied with calculated value to get C_LAT_AXLE
                      ! displacement
C_LAT_AXLE_OFFSET(2) 0 ; mm ! Offset added (after gain) to get C_LAT_AXLE
                       ! displacement
F_START_C_LAT_AXLE(2) 0 ; N ! Offset subtracted from force
F_SCALE_C_LAT_AXLE(2) 1 ! Scale factor divided into (force - F_START_C_LAT_AXLE)

! C_LONG: Compliance: wheel longitudinal displacement due to in- and out-phase Fx. X
! displacement can be a nonlinear CARPET function of force (other side) and force or
! a function of force (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom
! equation can be defined at runtime. X displacement from the calculation can be
! adjusted with C_LONG_GAIN and C_LONG_OFFSET. Force used in the calculation can be
! adjusted with F_SCALE_C_LONG and F_START_C_LONG. Force (other side) used in the
! calculation can be adjusted with F2_SCALE_C_LONG and F2_START_C_LONG. This
! configurable function supports 4 datasets; if indices shown below are not used,
! e.g., (1,2), the current values of the indices IAXLE and ISIDE are used to identify
! the dataset when reading data.

C_LONG_COEFFICIENT(1,1) 2e-05 ! Coefficient: X displacement per unit force (mm/N),
                              ! axle 1, left side
C_LONG_GAIN(1,1)    1 ! Gain multiplied with calculated value to get X displacement
C_LONG_OFFSET(1,1)  0 ; mm ! Offset added (after gain) to get X displacement
F_START_C_LONG(1,1) 0 ; N ! Offset subtracted from force
F_SCALE_C_LONG(1,1) 1 ! Scale factor divided into (force - F_START_C_LONG)

C_LONG_COEFFICIENT(1,2) 2e-05 ! Coefficient: X displacement per unit force (mm/N),
                              ! axle 1, right side
C_LONG_GAIN(1,2)    1 ! Gain multiplied with calculated value to get X displacement
C_LONG_OFFSET(1,2)  0 ; mm ! Offset added (after gain) to get X displacement
F_START_C_LONG(1,2) 0 ; N ! Offset subtracted from force
F_SCALE_C_LONG(1,2) 1 ! Scale factor divided into (force - F_START_C_LONG)

! C_LONG_AXLE: Compliance: axle longitudinal deflection due to total Fx. C_LONG_AXLE
! displacement is a function of force (CONSTANT, COEFFICIENT, or TABLE).
! Alternatively, a custom equation can be defined at runtime. C_LONG_AXLE
! displacement from the calculation can be adjusted with C_LONG_AXLE_GAIN and
! C_LONG_AXLE_OFFSET. Force used in the calculation can be adjusted with
! F_SCALE_C_LONG_AXLE and F_START_C_LONG_AXLE. This configurable function supports 2
! datasets; if indices shown below are not used, e.g., (2), the current value of the
! index IAXLE is used to identify the dataset when reading data.

C_LONG_AXLE_COEFFICIENT(2) 7e-05 ! Coefficient: C_LONG_AXLE displacement per unit
                                 ! force (mm/N), axle 2
C_LONG_AXLE_GAIN(2) 1 ! Gain multiplied with calculated value to get C_LONG_AXLE
                      ! displacement
C_LONG_AXLE_OFFSET(2) 0 ; mm ! Offset added (after gain) to get C_LONG_AXLE
                        ! displacement
F_START_C_LONG_AXLE(2) 0 ; N ! Offset subtracted from force
F_SCALE_C_LONG_AXLE(2) 1 ! Scale factor divided into (force - F_START_C_LONG_AXLE)

! DOWNSHIFT_TRANS: Transmission speed when downshift occurs. IGEAR specifies the
! lower gear for each table (e.g., IGEAR 2 means downshift from 3 to 2). Transmission
! speed is a function of throttle position (CONSTANT, COEFFICIENT, or TABLE).
! Alternatively, a custom equation can be defined at runtime. Transmission speed from
! the calculation can be adjusted with DOWNSHIFT_TRANS_GAIN and
! DOWNSHIFT_TRANS_OFFSET. Throttle position used in the calculation can be adjusted
! with THROTTLE_SCALE_DOWNSHIFT and THROTTLE_START_DOWNSHIFT. This configurable
! function supports 17 datasets; if indices shown below are not used, e.g., (2), the
! current value of the index IGEAR is used to identify the dataset when reading data.

! 1D table: col 1 = throttle position (-), col 2 = transmission speed (rpm)
DOWNSHIFT_TRANS_TABLE(1) LINEAR_FLAT ! shifting between gears 1 and 2
 0, 699
 0.4, 699
 0.8, 1240
 1, 1240
ENDTABLE
DOWNSHIFT_TRANS_GAIN(1) 1 ! Gain multiplied with calculated value to get
                          ! transmission speed
DOWNSHIFT_TRANS_OFFSET(1) 0 ; rpm ! Offset added (after gain) to get transmission
                            ! speed
THROTTLE_START_DOWNSHIFT(1) 0 ; - ! Offset subtracted from throttle position
THROTTLE_SCALE_DOWNSHIFT(1) 1 ! Scale factor divided into (throttle position -
                              ! THROTTLE_START_DOWNSHIFT)

! 1D table: col 1 = throttle position (-), col 2 = transmission speed (rpm)
DOWNSHIFT_TRANS_TABLE(2) LINEAR_FLAT ! shifting between gears 2 and 3
 0, 1026
 0.4, 1026
 0.8, 2130
 1, 2130
ENDTABLE
DOWNSHIFT_TRANS_GAIN(2) 1 ! Gain multiplied with calculated value to get
                          ! transmission speed
DOWNSHIFT_TRANS_OFFSET(2) 0 ; rpm ! Offset added (after gain) to get transmission
                            ! speed
THROTTLE_START_DOWNSHIFT(2) 0 ; - ! Offset subtracted from throttle position
THROTTLE_SCALE_DOWNSHIFT(2) 1 ! Scale factor divided into (throttle position -
                              ! THROTTLE_START_DOWNSHIFT)

! 1D table: col 1 = throttle position (-), col 2 = transmission speed (rpm)
DOWNSHIFT_TRANS_TABLE(3) LINEAR_FLAT ! shifting between gears 3 and 4
 0, 1440
 0.4, 1440
 0.8, 3125
 1, 3125
ENDTABLE
DOWNSHIFT_TRANS_GAIN(3) 1 ! Gain multiplied with calculated value to get
                          ! transmission speed
DOWNSHIFT_TRANS_OFFSET(3) 0 ; rpm ! Offset added (after gain) to get transmission
                            ! speed
THROTTLE_START_DOWNSHIFT(3) 0 ; - ! Offset subtracted from throttle position
THROTTLE_SCALE_DOWNSHIFT(3) 1 ! Scale factor divided into (throttle position -
                              ! THROTTLE_START_DOWNSHIFT)

! 1D table: col 1 = throttle position (-), col 2 = transmission speed (rpm)
DOWNSHIFT_TRANS_TABLE(4) LINEAR_FLAT ! shifting between gears 4 and 5
 0, 2020
 0.4, 2020
 0.8, 4388
 1, 4388
ENDTABLE
DOWNSHIFT_TRANS_GAIN(4) 1 ! Gain multiplied with calculated value to get
                          ! transmission speed
DOWNSHIFT_TRANS_OFFSET(4) 0 ; rpm ! Offset added (after gain) to get transmission
                            ! speed
THROTTLE_START_DOWNSHIFT(4) 0 ; - ! Offset subtracted from throttle position
THROTTLE_SCALE_DOWNSHIFT(4) 1 ! Scale factor divided into (throttle position -
                              ! THROTTLE_START_DOWNSHIFT)

! 1D table: col 1 = throttle position (-), col 2 = transmission speed (rpm)
DOWNSHIFT_TRANS_TABLE(5) LINEAR_FLAT ! shifting between gears 5 and 6
 0, 2474
 0.4, 2474
 0.8, 6154
 1, 6154
ENDTABLE
DOWNSHIFT_TRANS_GAIN(5) 1 ! Gain multiplied with calculated value to get
                          ! transmission speed
DOWNSHIFT_TRANS_OFFSET(5) 0 ; rpm ! Offset added (after gain) to get transmission
                            ! speed
THROTTLE_START_DOWNSHIFT(5) 0 ; - ! Offset subtracted from throttle position
THROTTLE_SCALE_DOWNSHIFT(5) 1 ! Scale factor divided into (throttle position -
                              ! THROTTLE_START_DOWNSHIFT)

! FD: Suspension damper force (1 side). Damper force is a function of compression
! speed (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation can be
! defined at runtime. Damper force from the calculation can be adjusted with FD_GAIN
! and FD_OFFSET. Compression speed used in the calculation can be adjusted with
! CMP_R_SCALE_FD and CMP_R_START_FD. This configurable function supports 4 datasets;
! if indices shown below are not used, e.g., (1,2), the current values of the indices
! IAXLE and ISIDE are used to identify the dataset when reading data.

! 1D table: col 1 = compression speed (mm/s), col 2 = damper force (N)
FD_TABLE(1,1) SPLINE ! axle 1, left side
 -1410, -7316
 -720, -5019
 -390, -3395
 -210, -2618
 -90, -1472
 -20, -333
 0, 0
 20, 333
 90, 870
 200, 1145
 390, 1607
 760, 2623
 1160, 3740
ENDTABLE
FD_GAIN(1,1)        1 ! Gain multiplied with calculated value to get damper force
FD_OFFSET(1,1)      0 ; N ! Offset added (after gain) to get damper force
CMP_R_START_FD(1,1) 0 ; mm/s ! Offset subtracted from compression speed
CMP_R_SCALE_FD(1,1) 1 ! Scale factor divided into (compression speed -
                      ! CMP_R_START_FD)

! 1D table: col 1 = compression speed (mm/s), col 2 = damper force (N)
FD_TABLE(1,2) SPLINE ! axle 1, right side
 -1410, -7316
 -720, -5019
 -390, -3395
 -210, -2618
 -90, -1472
 -20, -333
 0, 0
 20, 333
 90, 870
 200, 1145
 390, 1607
 760, 2623
 1160, 3740
ENDTABLE
FD_GAIN(1,2)        1 ! Gain multiplied with calculated value to get damper force
FD_OFFSET(1,2)      0 ; N ! Offset added (after gain) to get damper force
CMP_R_START_FD(1,2) 0 ; mm/s ! Offset subtracted from compression speed
CMP_R_SCALE_FD(1,2) 1 ! Scale factor divided into (compression speed -
                      ! CMP_R_START_FD)

! 1D table: col 1 = compression speed (mm/s), col 2 = damper force (N)
FD_TABLE(2,1) SPLINE ! axle 2, left side
 -1410, -7316
 -720, -5019
 -390, -3395
 -210, -2618
 -90, -1472
 -20, -333
 0, 0
 20, 333
 90, 870
 200, 1145
 390, 1607
 760, 2623
 1160, 3740
ENDTABLE
FD_GAIN(2,1)        1 ! Gain multiplied with calculated value to get damper force
FD_OFFSET(2,1)      0 ; N ! Offset added (after gain) to get damper force
CMP_R_START_FD(2,1) 0 ; mm/s ! Offset subtracted from compression speed
CMP_R_SCALE_FD(2,1) 1 ! Scale factor divided into (compression speed -
                      ! CMP_R_START_FD)

! 1D table: col 1 = compression speed (mm/s), col 2 = damper force (N)
FD_TABLE(2,2) SPLINE ! axle 2, right side
 -1410, -7316
 -720, -5019
 -390, -3395
 -210, -2618
 -90, -1472
 -20, -333
 0, 0
 20, 333
 90, 870
 200, 1145
 390, 1607
 760, 2623
 1160, 3740
ENDTABLE
FD_GAIN(2,2)        1 ! Gain multiplied with calculated value to get damper force
FD_OFFSET(2,2)      0 ; N ! Offset added (after gain) to get damper force
CMP_R_START_FD(2,2) 0 ; mm/s ! Offset subtracted from compression speed
CMP_R_SCALE_FD(2,2) 1 ! Scale factor divided into (compression speed -
                      ! CMP_R_START_FD)

! FS_COMP: Compression (upper) envelope of suspension spring force (1 side). Spring
! force can be a nonlinear CARPET function of static spring force and spring
! compression or a function of spring compression (CONSTANT, COEFFICIENT, or TABLE)
! combined with a function FS_COMP_FSTATIC of static spring force (CONSTANT,
! COEFFICIENT, or TABLE). Spring force from the calculation can be adjusted with
! FS_COMP_GAIN and FS_COMP_OFFSET. Spring compression used in the calculation can be
! adjusted with CMP_SCALE_FS_COMP and CMP_START_FS_COMP. Static spring force used in
! the calculation can be adjusted with FSTATIC_SCALE_FS_COMP and
! FSTATIC_START_FS_COMP. An inverse version of this function is used internally. This
! configurable function supports 4 datasets; if indices shown below are not used,
! e.g., (1,2), the current values of the indices IAXLE and ISIDE are used to identify
! the dataset when reading data.

FS_COMP_COEFFICIENT(1,1) 146 ! Coefficient: spring force per unit spring compression
                             ! (N/mm), axle 1, left side
FS_COMP_GAIN(1,1)   1 ! Gain multiplied with calculated value to get spring force
FS_COMP_OFFSET(1,1) 20 ; N ! Offset added (after gain) to get spring force
CMP_START_FS_COMP(1,1) 0 ; mm ! Offset subtracted from spring compression
CMP_SCALE_FS_COMP(1,1) 1 ! Scale factor divided into (spring compression -
                         ! CMP_START_FS_COMP)
FS_COMP_COMBINE(1,1) MULTIPLY ! How to combine the two components
FS_COMP_FSTATIC_CONSTANT(1,1) 1 ; - ! [D] Constant spring force component due to
                                ! static spring force, axle 1, left side

FS_COMP_COEFFICIENT(1,2) 146 ! Coefficient: spring force per unit spring compression
                             ! (N/mm), axle 1, right side
FS_COMP_GAIN(1,2)   1 ! Gain multiplied with calculated value to get spring force
FS_COMP_OFFSET(1,2) 20 ; N ! Offset added (after gain) to get spring force
CMP_START_FS_COMP(1,2) 0 ; mm ! Offset subtracted from spring compression
CMP_SCALE_FS_COMP(1,2) 1 ! Scale factor divided into (spring compression -
                         ! CMP_START_FS_COMP)
FS_COMP_COMBINE(1,2) MULTIPLY ! How to combine the two components
FS_COMP_FSTATIC_CONSTANT(1,2) 1 ; - ! [D] Constant spring force component due to
                                ! static spring force, axle 1, right side

FS_COMP_COEFFICIENT(2,1) 46 ! Coefficient: spring force per unit spring compression
                            ! (N/mm), axle 2, left side
FS_COMP_GAIN(2,1)   1 ! Gain multiplied with calculated value to get spring force
FS_COMP_OFFSET(2,1) 20 ; N ! Offset added (after gain) to get spring force
CMP_START_FS_COMP(2,1) 0 ; mm ! Offset subtracted from spring compression
CMP_SCALE_FS_COMP(2,1) 1 ! Scale factor divided into (spring compression -
                         ! CMP_START_FS_COMP)
FS_COMP_COMBINE(2,1) MULTIPLY ! How to combine the two components
FS_COMP_FSTATIC_CONSTANT(2,1) 1 ; - ! [D] Constant spring force component due to
                                ! static spring force, axle 2, left side

FS_COMP_COEFFICIENT(2,2) 46 ! Coefficient: spring force per unit spring compression
                            ! (N/mm), axle 2, right side
FS_COMP_GAIN(2,2)   1 ! Gain multiplied with calculated value to get spring force
FS_COMP_OFFSET(2,2) 20 ; N ! Offset added (after gain) to get spring force
CMP_START_FS_COMP(2,2) 0 ; mm ! Offset subtracted from spring compression
CMP_SCALE_FS_COMP(2,2) 1 ! Scale factor divided into (spring compression -
                         ! CMP_START_FS_COMP)
FS_COMP_COMBINE(2,2) MULTIPLY ! How to combine the two components
FS_COMP_FSTATIC_CONSTANT(2,2) 1 ; - ! [D] Constant spring force component due to
                                ! static spring force, axle 2, right side

! FS_EXT: Extension (lower) envelope of suspension spring force (1 side). Spring
! force can be a nonlinear CARPET function of static spring force and spring
! compression or a function of spring compression (CONSTANT, COEFFICIENT, or TABLE)
! combined with a function FS_EXT_FSTATIC of static spring force (CONSTANT,
! COEFFICIENT, or TABLE). Spring force from the calculation can be adjusted with
! FS_EXT_GAIN and FS_EXT_OFFSET. Spring compression used in the calculation can be
! adjusted with CMP_SCALE_FS_EXT and CMP_START_FS_EXT. Static spring force used in
! the calculation can be adjusted with FSTATIC_SCALE_FS_EXT and FSTATIC_START_FS_EXT.
! An inverse version of this function is used internally. This configurable function
! supports 4 datasets; if indices shown below are not used, e.g., (1,2), the current
! values of the indices IAXLE and ISIDE are used to identify the dataset when reading
! data.

FS_EXT_COEFFICIENT(1,1) 146 ! Coefficient: spring force per unit spring compression
                            ! (N/mm), axle 1, left side
FS_EXT_GAIN(1,1)    1 ! Gain multiplied with calculated value to get spring force
FS_EXT_OFFSET(1,1) -20 ; N ! Offset added (after gain) to get spring force
CMP_START_FS_EXT(1,1) 0 ; mm ! Offset subtracted from spring compression
CMP_SCALE_FS_EXT(1,1) 1 ! Scale factor divided into (spring compression -
                        ! CMP_START_FS_EXT)
FS_EXT_COMBINE(1,1) MULTIPLY ! How to combine the two components
FS_EXT_FSTATIC_CONSTANT(1,1) 1 ; - ! [D] Constant spring force component due to
                               ! static spring force, axle 1, left side

FS_EXT_COEFFICIENT(1,2) 146 ! Coefficient: spring force per unit spring compression
                            ! (N/mm), axle 1, right side
FS_EXT_GAIN(1,2)    1 ! Gain multiplied with calculated value to get spring force
FS_EXT_OFFSET(1,2) -20 ; N ! Offset added (after gain) to get spring force
CMP_START_FS_EXT(1,2) 0 ; mm ! Offset subtracted from spring compression
CMP_SCALE_FS_EXT(1,2) 1 ! Scale factor divided into (spring compression -
                        ! CMP_START_FS_EXT)
FS_EXT_COMBINE(1,2) MULTIPLY ! How to combine the two components
FS_EXT_FSTATIC_CONSTANT(1,2) 1 ; - ! [D] Constant spring force component due to
                               ! static spring force, axle 1, right side

FS_EXT_COEFFICIENT(2,1) 46 ! Coefficient: spring force per unit spring compression
                           ! (N/mm), axle 2, left side
FS_EXT_GAIN(2,1)    1 ! Gain multiplied with calculated value to get spring force
FS_EXT_OFFSET(2,1) -20 ; N ! Offset added (after gain) to get spring force
CMP_START_FS_EXT(2,1) 0 ; mm ! Offset subtracted from spring compression
CMP_SCALE_FS_EXT(2,1) 1 ! Scale factor divided into (spring compression -
                        ! CMP_START_FS_EXT)
FS_EXT_COMBINE(2,1) MULTIPLY ! How to combine the two components
FS_EXT_FSTATIC_CONSTANT(2,1) 1 ; - ! [D] Constant spring force component due to
                               ! static spring force, axle 2, left side

FS_EXT_COEFFICIENT(2,2) 46 ! Coefficient: spring force per unit spring compression
                           ! (N/mm), axle 2, right side
FS_EXT_GAIN(2,2)    1 ! Gain multiplied with calculated value to get spring force
FS_EXT_OFFSET(2,2) -20 ; N ! Offset added (after gain) to get spring force
CMP_START_FS_EXT(2,2) 0 ; mm ! Offset subtracted from spring compression
CMP_SCALE_FS_EXT(2,2) 1 ! Scale factor divided into (spring compression -
                        ! CMP_START_FS_EXT)
FS_EXT_COMBINE(2,2) MULTIPLY ! How to combine the two components
FS_EXT_FSTATIC_CONSTANT(2,2) 1 ; - ! [D] Constant spring force component due to
                               ! static spring force, axle 2, right side

! FUEL_RATE: Fuel consumption rate. Fuel rate can be a nonlinear CARPET function of
! throttle position and engine speed or a function of engine speed (CONSTANT or
! TABLE) multiplied by a function FUEL_RATE_THROTTLE of throttle position (CONSTANT,
! COEFFICIENT, or TABLE). Alternatively, a custom equation can be defined at runtime.
! Fuel rate from the calculation can be adjusted with FUEL_RATE_GAIN and
! FUEL_RATE_OFFSET. Engine speed used in the calculation can be adjusted with
! SPIN_SCALE_FUEL_RATE and SPIN_START_FUEL_RATE. Throttle position used in the
! calculation can be adjusted with THROTTLE_SCALE_FUEL_RATE and
! THROTTLE_START_FUEL_RATE.

FUEL_RATE_CONSTANT  0 ; kg/s ! [D] Constant fuel rate component due to engine speed
FUEL_RATE_GAIN      1 ! Gain multiplied with calculated value to get fuel rate
FUEL_RATE_OFFSET    0 ; kg/s ! Offset added (after gain) to get fuel rate
FUEL_RATE_THROTTLE_CONSTANT 1 ; - ! [D] Constant fuel rate scaling due to throttle
                              ! position

! FX_AERO_SHAPING: Coefficient CFX for for X component of aerodynamic force. CFX is
! a function of aerodynamic slip angle (CONSTANT, COEFFICIENT, or TABLE).
! Alternatively, a custom equation can be defined at runtime. CFX from the
! calculation can be adjusted with FX_AERO_SHAPING_GAIN and FX_AERO_SHAPING_OFFSET.
! Aerodynamic slip angle used in the calculation can be adjusted with
! SLIP_SCALE_FX_AERO and SLIP_START_FX_AERO.

! 1D table: col 1 = aerodynamic slip angle (deg), col 2 = CFX (-)
FX_AERO_SHAPING_TABLE SPLINE_FLAT ! spline interpolation, flat-line extrapolation
 -180, -0.3
 -160, -0.45
 -90, 0
 -20, 0.325
 0, 0.3
 20, 0.325
 90, 0
 160, -0.45
 180, -0.3
ENDTABLE
FX_AERO_SHAPING_GAIN 1 ! Gain multiplied with calculated value to get CFX
FX_AERO_SHAPING_OFFSET 0 ; - ! Offset added (after gain) to get CFX
SLIP_START_FX_AERO  0 ; deg ! Offset subtracted from aerodynamic slip angle
SLIP_SCALE_FX_AERO  1 ! Scale factor divided into (aerodynamic slip angle -
                      ! SLIP_START_FX_AERO)

! FX_AERO_SHAPING_2: Coefficient CFX2 for X component of aerodynamic force. CFX2 can
! be a nonlinear CARPET function of ride height and pitch or a function of pitch
! (CONSTANT, COEFFICIENT, or TABLE) combined with a function FX_AERO_SHAPING_Z of
! ride height (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation can
! be defined at runtime. CFX2 from the calculation can be adjusted with
! FX_AERO_SHAPING_2_GAIN and FX_AERO_SHAPING_2_OFFSET. Pitch used in the calculation
! can be adjusted with PITCH_SCALE_FX_AERO and PITCH_START_FX_AERO. Ride height used
! in the calculation can be adjusted with Z_SCALE_FX_AERO and Z_START_FX_AERO.

FX_AERO_SHAPING_2_CONSTANT 1 ; - ! [D] Constant CFX2 component due to pitch
FX_AERO_SHAPING_2_GAIN 1 ! Gain multiplied with calculated value to get CFX2
FX_AERO_SHAPING_2_OFFSET 0 ; - ! Offset added (after gain) to get CFX2
FX_AERO_SHAPING_2_COMBINE MULTIPLY ! How to combine the two components
FX_AERO_SHAPING_Z_CONSTANT 1 ; - ! [D] Constant CFX2 component due to ride height

! FX_TIRE: Tire longitudinal force (Fx) as a function of vertical load (Fz) and
! longitudinal slip (Kappa). Fx can be a nonlinear CARPET function of Fz and Kappa or
! a function of Kappa multiplied by a function FX_TIRE_FZ of Fz (CONSTANT,
! COEFFICIENT, or TABLE). Fx from the calculation can be adjusted with FX_TIRE_GAIN
! and FX_TIRE_OFFSET. Kappa used in the calculation can be adjusted with
! KAPPA_SCALE_FX_TIRE and KAPPA_START_FX_TIRE. Fz used in the calculation can be
! adjusted with FZ_SCALE_FX_TIRE and FZ_START_FX_TIRE. This configurable function
! supports 4 datasets; if indices shown below are not used, e.g., (1,2), the current
! values of the indices IAXLE and ISIDE are used to identify the dataset when reading
! data.

! 2D table: row 1 has "0" (place holder) followed by 8 values of Fz (N). Other rows
! have Kappa (-) followed by 8 values of Fx (N). With type = 2D_FROM _ZERO, the table
! includes a hidden row 2 of zeros along with a hidden column 1 of zeros.
FX_TIRE_CARPET(1,1) 2D_FROM_ZERO ! axle 1, left side
 0, 2819.41, 5638.82, 8458.24, 11277.65, 14097.06, 16916.47, 19735.88, 22555.3
 0.02, 659.98, 1310.49, 1949.71, 2576.32, 3189.21, 3787.34, 4369.71, 4935.36
 0.04, 1213.62, 2408.05, 3579.67, 4725.96, 5844.79, 6934.2, 7992.38, 9017.56
 0.06, 1619.31, 3210.25, 4767.62, 6287.9, 7768.15, 9205.77, 10598.36, 11943.63
 0.08, 1893.6, 3751.15, 5566.2, 7334.49, 9052.54, 10717.34, 12326.12, 13876.34
 0.1, 2072.48, 4103, 6084.23, 8011.39, 9880.67, 11688.8, 13432.84, 15110.11
 0.12, 2187.92, 4329.57, 6416.99, 8445.04, 10409.72, 12307.6, 14135.69, 15891.24
 0.14, 2262.4, 4475.42, 6630.65, 8722.77, 10747.62, 12701.71, 14582, 16385.75
 0.16, 2310.35, 4569.09, 6767.52, 8900.16, 10962.77, 12951.84, 14864.31, 16697.45
 0.18, 2340.84, 4628.48, 6854, 9011.81, 11097.64, 13107.96, 15039.71, 16890.18
 0.2, 2359.6, 4664.84, 6906.65, 9079.39, 11178.75, 13201.2, 15143.7, 17003.56
 0.22, 2370.27, 4685.35, 6936.06, 9116.71, 11222.99, 13251.38, 15198.83, 17062.69
 0.24, 2375.27, 4694.74, 6949.15, 9132.81, 11241.4, 13271.38, 15219.76, 17083.89
 0.26, 2376.19, 4696.14, 6950.56, 9133.73, 11241.33, 13269.85, 15216.3, 17078.07
 0.28, 2374.15, 4691.75, 6943.48, 9123.62, 11227.86, 13252.7, 15195.17, 17052.68
 0.3, 2369.92, 4683.08, 6930.15, 9105.4, 11204.54, 13224.08, 15161.08, 17012.97
 0.32, 2364.06, 4671.23, 6912.16, 9081.15, 11173.91, 13186.98, 15117.42, 16962.69
 0.34, 2356.98, 4657, 6890.71, 9052.42, 11137.85, 13143.57, 15066.65, 16904.58
 0.36, 2348.99, 4640.99, 6866.67, 9020.34, 11097.75, 13095.47, 15010.61, 16840.68
 0.38, 2340.31, 4623.65, 6840.69, 8985.77, 11054.65, 13043.91, 14950.7, 16772.53
 0.4, 2331.13, 4605.33, 6813.3, 8949.37, 11009.35, 12989.83, 14887.97, 16701.31
 0.42, 2321.58, 4586.3, 6784.87, 8911.66, 10962.48, 12933.96, 14823.25, 16627.94
 0.44, 2311.76, 4566.76, 6755.72, 8873.04, 10914.53, 12876.85, 14757.19, 16553.12
 0.46, 2301.77, 4546.88, 6726.1, 8833.81, 10865.88, 12818.96, 14690.27, 16477.41
 0.48, 2291.67, 4526.8, 6696.18, 8794.24, 10816.83, 12760.65, 14622.92, 16401.26
 0.5, 2281.52, 4506.62, 6666.14, 8754.51, 10767.63, 12702.19, 14555.44, 16325.02
 0.52, 2271.35, 4486.43, 6636.09, 8714.8, 10718.46, 12643.81, 14488.09, 16248.97
 0.54, 2261.2, 4466.28, 6606.13, 8675.22, 10669.5, 12585.69, 14421.08, 16173.33
 0.56, 2251.1, 4446.25, 6576.34, 8635.89, 10620.85, 12527.97, 14354.56, 16098.29
 0.58, 2241.08, 4426.36, 6546.78, 8596.88, 10572.62, 12470.78, 14288.66, 16023.99
 0.6, 2231.15, 4406.66, 6517.51, 8558.26, 10524.89, 12414.2, 14223.5, 15950.53
 0.62, 2221.32, 4387.18, 6488.57, 8520.09, 10477.73, 12358.3, 14159.15, 15878.01
 0.64, 2211.61, 4367.93, 6459.99, 8482.4, 10431.17, 12303.14, 14095.67, 15806.5
 0.66, 2202.03, 4348.93, 6431.79, 8445.23, 10385.27, 12248.77, 14033.11, 15736.04
 0.68, 2192.58, 4330.21, 6404, 8408.59, 10340.05, 12195.23, 13971.51, 15666.69
 0.7, 2183.26, 4311.76, 6376.62, 8372.52, 10295.53, 12142.52, 13910.9, 15598.46
 0.72, 2174.1, 4293.6, 6349.68, 8337.03, 10251.73, 12090.68, 13851.29, 15531.38
 0.74, 2165.07, 4275.73, 6323.17, 8302.11, 10208.65, 12039.71, 13792.7, 15465.45
 0.76, 2156.2, 4258.16, 6297.11, 8267.79, 10166.31, 11989.61, 13735.13, 15400.69
 0.78, 2147.47, 4240.88, 6271.49, 8234.05, 10124.71, 11940.4, 13678.58, 15337.09
 0.8, 2138.89, 4223.89, 6246.31, 8200.9, 10083.84, 11892.07, 13623.05, 15274.65
 0.82, 2130.46, 4207.21, 6221.57, 8168.35, 10043.71, 11844.61, 13568.54, 15213.36
 0.84, 2122.18, 4190.82, 6197.28, 8136.38, 10004.3, 11798.02, 13515.03, 15153.22
 0.86, 2114.04, 4174.72, 6173.43, 8104.99, 9965.61, 11752.28, 13462.52, 15094.2
 0.88, 2106.05, 4158.91, 6150, 8074.17, 9927.63, 11707.4, 13410.99, 15036.29
 0.9, 2098.2, 4143.39, 6127.01, 8043.92, 9890.36, 11663.35, 13360.43, 14979.48
 0.92, 2090.5, 4128.15, 6104.43, 8014.23, 9853.78, 11620.13, 13310.82, 14923.75
 0.94, 2082.94, 4113.19, 6082.27, 7985.08, 9817.89, 11577.72, 13262.15, 14869.08
 0.96, 2075.51, 4098.51, 6060.52, 7956.48, 9782.66, 11536.11, 13214.39, 14815.45
 0.98, 2068.22, 4084.09, 6039.17, 7928.41, 9748.09, 11495.28, 13167.55, 14762.84
 1, 2061.06, 4069.94, 6018.22, 7900.86, 9714.16, 11455.21, 13121.59, 14711.23
 1.02, 2061.06, 4069.94, 6018.22, 7900.86, 9714.16, 11455.21, 13121.59, 14711.23
ENDTABLE
FX_TIRE_GAIN(1,1)   1 ! Gain multiplied with calculated value to get Fx
FX_TIRE_OFFSET(1,1) 0 ; N ! Offset added (after gain) to get Fx
KAPPA_START_FX_TIRE(1,1) 0 ; - ! Offset subtracted from Kappa
KAPPA_SCALE_FX_TIRE(1,1) 1 ! Scale factor divided into (Kappa - KAPPA_START_FX_TIRE)
FZ_START_FX_TIRE(1,1) 0 ; N ! Offset subtracted from Fz
FZ_SCALE_FX_TIRE(1,1) 1 ! Scale factor divided into (Fz - FZ_START_FX_TIRE)

! 2D table: row 1 has "0" (place holder) followed by 8 values of Fz (N). Other rows
! have Kappa (-) followed by 8 values of Fx (N). With type = 2D_FROM _ZERO, the table
! includes a hidden row 2 of zeros along with a hidden column 1 of zeros.
FX_TIRE_CARPET(1,2) 2D_FROM_ZERO ! axle 1, right side
 0, 2819.41, 5638.82, 8458.24, 11277.65, 14097.06, 16916.47, 19735.88, 22555.3
 0.02, 659.98, 1310.49, 1949.71, 2576.32, 3189.21, 3787.34, 4369.71, 4935.36
 0.04, 1213.62, 2408.05, 3579.67, 4725.96, 5844.79, 6934.2, 7992.38, 9017.56
 0.06, 1619.31, 3210.25, 4767.62, 6287.9, 7768.15, 9205.77, 10598.36, 11943.63
 0.08, 1893.6, 3751.15, 5566.2, 7334.49, 9052.54, 10717.34, 12326.12, 13876.34
 0.1, 2072.48, 4103, 6084.23, 8011.39, 9880.67, 11688.8, 13432.84, 15110.11
 0.12, 2187.92, 4329.57, 6416.99, 8445.04, 10409.72, 12307.6, 14135.69, 15891.24
 0.14, 2262.4, 4475.42, 6630.65, 8722.77, 10747.62, 12701.71, 14582, 16385.75
 0.16, 2310.35, 4569.09, 6767.52, 8900.16, 10962.77, 12951.84, 14864.31, 16697.45
 0.18, 2340.84, 4628.48, 6854, 9011.81, 11097.64, 13107.96, 15039.71, 16890.18
 0.2, 2359.6, 4664.84, 6906.65, 9079.39, 11178.75, 13201.2, 15143.7, 17003.56
 0.22, 2370.27, 4685.35, 6936.06, 9116.71, 11222.99, 13251.38, 15198.83, 17062.69
 0.24, 2375.27, 4694.74, 6949.15, 9132.81, 11241.4, 13271.38, 15219.76, 17083.89
 0.26, 2376.19, 4696.14, 6950.56, 9133.73, 11241.33, 13269.85, 15216.3, 17078.07
 0.28, 2374.15, 4691.75, 6943.48, 9123.62, 11227.86, 13252.7, 15195.17, 17052.68
 0.3, 2369.92, 4683.08, 6930.15, 9105.4, 11204.54, 13224.08, 15161.08, 17012.97
 0.32, 2364.06, 4671.23, 6912.16, 9081.15, 11173.91, 13186.98, 15117.42, 16962.69
 0.34, 2356.98, 4657, 6890.71, 9052.42, 11137.85, 13143.57, 15066.65, 16904.58
 0.36, 2348.99, 4640.99, 6866.67, 9020.34, 11097.75, 13095.47, 15010.61, 16840.68
 0.38, 2340.31, 4623.65, 6840.69, 8985.77, 11054.65, 13043.91, 14950.7, 16772.53
 0.4, 2331.13, 4605.33, 6813.3, 8949.37, 11009.35, 12989.83, 14887.97, 16701.31
 0.42, 2321.58, 4586.3, 6784.87, 8911.66, 10962.48, 12933.96, 14823.25, 16627.94
 0.44, 2311.76, 4566.76, 6755.72, 8873.04, 10914.53, 12876.85, 14757.19, 16553.12
 0.46, 2301.77, 4546.88, 6726.1, 8833.81, 10865.88, 12818.96, 14690.27, 16477.41
 0.48, 2291.67, 4526.8, 6696.18, 8794.24, 10816.83, 12760.65, 14622.92, 16401.26
 0.5, 2281.52, 4506.62, 6666.14, 8754.51, 10767.63, 12702.19, 14555.44, 16325.02
 0.52, 2271.35, 4486.43, 6636.09, 8714.8, 10718.46, 12643.81, 14488.09, 16248.97
 0.54, 2261.2, 4466.28, 6606.13, 8675.22, 10669.5, 12585.69, 14421.08, 16173.33
 0.56, 2251.1, 4446.25, 6576.34, 8635.89, 10620.85, 12527.97, 14354.56, 16098.29
 0.58, 2241.08, 4426.36, 6546.78, 8596.88, 10572.62, 12470.78, 14288.66, 16023.99
 0.6, 2231.15, 4406.66, 6517.51, 8558.26, 10524.89, 12414.2, 14223.5, 15950.53
 0.62, 2221.32, 4387.18, 6488.57, 8520.09, 10477.73, 12358.3, 14159.15, 15878.01
 0.64, 2211.61, 4367.93, 6459.99, 8482.4, 10431.17, 12303.14, 14095.67, 15806.5
 0.66, 2202.03, 4348.93, 6431.79, 8445.23, 10385.27, 12248.77, 14033.11, 15736.04
 0.68, 2192.58, 4330.21, 6404, 8408.59, 10340.05, 12195.23, 13971.51, 15666.69
 0.7, 2183.26, 4311.76, 6376.62, 8372.52, 10295.53, 12142.52, 13910.9, 15598.46
 0.72, 2174.1, 4293.6, 6349.68, 8337.03, 10251.73, 12090.68, 13851.29, 15531.38
 0.74, 2165.07, 4275.73, 6323.17, 8302.11, 10208.65, 12039.71, 13792.7, 15465.45
 0.76, 2156.2, 4258.16, 6297.11, 8267.79, 10166.31, 11989.61, 13735.13, 15400.69
 0.78, 2147.47, 4240.88, 6271.49, 8234.05, 10124.71, 11940.4, 13678.58, 15337.09
 0.8, 2138.89, 4223.89, 6246.31, 8200.9, 10083.84, 11892.07, 13623.05, 15274.65
 0.82, 2130.46, 4207.21, 6221.57, 8168.35, 10043.71, 11844.61, 13568.54, 15213.36
 0.84, 2122.18, 4190.82, 6197.28, 8136.38, 10004.3, 11798.02, 13515.03, 15153.22
 0.86, 2114.04, 4174.72, 6173.43, 8104.99, 9965.61, 11752.28, 13462.52, 15094.2
 0.88, 2106.05, 4158.91, 6150, 8074.17, 9927.63, 11707.4, 13410.99, 15036.29
 0.9, 2098.2, 4143.39, 6127.01, 8043.92, 9890.36, 11663.35, 13360.43, 14979.48
 0.92, 2090.5, 4128.15, 6104.43, 8014.23, 9853.78, 11620.13, 13310.82, 14923.75
 0.94, 2082.94, 4113.19, 6082.27, 7985.08, 9817.89, 11577.72, 13262.15, 14869.08
 0.96, 2075.51, 4098.51, 6060.52, 7956.48, 9782.66, 11536.11, 13214.39, 14815.45
 0.98, 2068.22, 4084.09, 6039.17, 7928.41, 9748.09, 11495.28, 13167.55, 14762.84
 1, 2061.06, 4069.94, 6018.22, 7900.86, 9714.16, 11455.21, 13121.59, 14711.23
 1.02, 2061.06, 4069.94, 6018.22, 7900.86, 9714.16, 11455.21, 13121.59, 14711.23
ENDTABLE
FX_TIRE_GAIN(1,2)   1 ! Gain multiplied with calculated value to get Fx
FX_TIRE_OFFSET(1,2) 0 ; N ! Offset added (after gain) to get Fx
KAPPA_START_FX_TIRE(1,2) 0 ; - ! Offset subtracted from Kappa
KAPPA_SCALE_FX_TIRE(1,2) 1 ! Scale factor divided into (Kappa - KAPPA_START_FX_TIRE)
FZ_START_FX_TIRE(1,2) 0 ; N ! Offset subtracted from Fz
FZ_SCALE_FX_TIRE(1,2) 1 ! Scale factor divided into (Fz - FZ_START_FX_TIRE)

! 2D table: row 1 has "0" (place holder) followed by 8 values of Fz (N). Other rows
! have Kappa (-) followed by 8 values of Fx (N). With type = 2D_FROM _ZERO, the table
! includes a hidden row 2 of zeros along with a hidden column 1 of zeros.
FX_TIRE_CARPET(2,1) 2D_FROM_ZERO ! axle 2, left side
 0, 2819.41, 5638.82, 8458.24, 11277.65, 14097.06, 16916.47, 19735.88, 22555.3
 0.02, 659.98, 1310.49, 1949.71, 2576.32, 3189.21, 3787.34, 4369.71, 4935.36
 0.04, 1213.62, 2408.05, 3579.67, 4725.96, 5844.79, 6934.2, 7992.38, 9017.56
 0.06, 1619.31, 3210.25, 4767.62, 6287.9, 7768.15, 9205.77, 10598.36, 11943.63
 0.08, 1893.6, 3751.15, 5566.2, 7334.49, 9052.54, 10717.34, 12326.12, 13876.34
 0.1, 2072.48, 4103, 6084.23, 8011.39, 9880.67, 11688.8, 13432.84, 15110.11
 0.12, 2187.92, 4329.57, 6416.99, 8445.04, 10409.72, 12307.6, 14135.69, 15891.24
 0.14, 2262.4, 4475.42, 6630.65, 8722.77, 10747.62, 12701.71, 14582, 16385.75
 0.16, 2310.35, 4569.09, 6767.52, 8900.16, 10962.77, 12951.84, 14864.31, 16697.45
 0.18, 2340.84, 4628.48, 6854, 9011.81, 11097.64, 13107.96, 15039.71, 16890.18
 0.2, 2359.6, 4664.84, 6906.65, 9079.39, 11178.75, 13201.2, 15143.7, 17003.56
 0.22, 2370.27, 4685.35, 6936.06, 9116.71, 11222.99, 13251.38, 15198.83, 17062.69
 0.24, 2375.27, 4694.74, 6949.15, 9132.81, 11241.4, 13271.38, 15219.76, 17083.89
 0.26, 2376.19, 4696.14, 6950.56, 9133.73, 11241.33, 13269.85, 15216.3, 17078.07
 0.28, 2374.15, 4691.75, 6943.48, 9123.62, 11227.86, 13252.7, 15195.17, 17052.68
 0.3, 2369.92, 4683.08, 6930.15, 9105.4, 11204.54, 13224.08, 15161.08, 17012.97
 0.32, 2364.06, 4671.23, 6912.16, 9081.15, 11173.91, 13186.98, 15117.42, 16962.69
 0.34, 2356.98, 4657, 6890.71, 9052.42, 11137.85, 13143.57, 15066.65, 16904.58
 0.36, 2348.99, 4640.99, 6866.67, 9020.34, 11097.75, 13095.47, 15010.61, 16840.68
 0.38, 2340.31, 4623.65, 6840.69, 8985.77, 11054.65, 13043.91, 14950.7, 16772.53
 0.4, 2331.13, 4605.33, 6813.3, 8949.37, 11009.35, 12989.83, 14887.97, 16701.31
 0.42, 2321.58, 4586.3, 6784.87, 8911.66, 10962.48, 12933.96, 14823.25, 16627.94
 0.44, 2311.76, 4566.76, 6755.72, 8873.04, 10914.53, 12876.85, 14757.19, 16553.12
 0.46, 2301.77, 4546.88, 6726.1, 8833.81, 10865.88, 12818.96, 14690.27, 16477.41
 0.48, 2291.67, 4526.8, 6696.18, 8794.24, 10816.83, 12760.65, 14622.92, 16401.26
 0.5, 2281.52, 4506.62, 6666.14, 8754.51, 10767.63, 12702.19, 14555.44, 16325.02
 0.52, 2271.35, 4486.43, 6636.09, 8714.8, 10718.46, 12643.81, 14488.09, 16248.97
 0.54, 2261.2, 4466.28, 6606.13, 8675.22, 10669.5, 12585.69, 14421.08, 16173.33
 0.56, 2251.1, 4446.25, 6576.34, 8635.89, 10620.85, 12527.97, 14354.56, 16098.29
 0.58, 2241.08, 4426.36, 6546.78, 8596.88, 10572.62, 12470.78, 14288.66, 16023.99
 0.6, 2231.15, 4406.66, 6517.51, 8558.26, 10524.89, 12414.2, 14223.5, 15950.53
 0.62, 2221.32, 4387.18, 6488.57, 8520.09, 10477.73, 12358.3, 14159.15, 15878.01
 0.64, 2211.61, 4367.93, 6459.99, 8482.4, 10431.17, 12303.14, 14095.67, 15806.5
 0.66, 2202.03, 4348.93, 6431.79, 8445.23, 10385.27, 12248.77, 14033.11, 15736.04
 0.68, 2192.58, 4330.21, 6404, 8408.59, 10340.05, 12195.23, 13971.51, 15666.69
 0.7, 2183.26, 4311.76, 6376.62, 8372.52, 10295.53, 12142.52, 13910.9, 15598.46
 0.72, 2174.1, 4293.6, 6349.68, 8337.03, 10251.73, 12090.68, 13851.29, 15531.38
 0.74, 2165.07, 4275.73, 6323.17, 8302.11, 10208.65, 12039.71, 13792.7, 15465.45
 0.76, 2156.2, 4258.16, 6297.11, 8267.79, 10166.31, 11989.61, 13735.13, 15400.69
 0.78, 2147.47, 4240.88, 6271.49, 8234.05, 10124.71, 11940.4, 13678.58, 15337.09
 0.8, 2138.89, 4223.89, 6246.31, 8200.9, 10083.84, 11892.07, 13623.05, 15274.65
 0.82, 2130.46, 4207.21, 6221.57, 8168.35, 10043.71, 11844.61, 13568.54, 15213.36
 0.84, 2122.18, 4190.82, 6197.28, 8136.38, 10004.3, 11798.02, 13515.03, 15153.22
 0.86, 2114.04, 4174.72, 6173.43, 8104.99, 9965.61, 11752.28, 13462.52, 15094.2
 0.88, 2106.05, 4158.91, 6150, 8074.17, 9927.63, 11707.4, 13410.99, 15036.29
 0.9, 2098.2, 4143.39, 6127.01, 8043.92, 9890.36, 11663.35, 13360.43, 14979.48
 0.92, 2090.5, 4128.15, 6104.43, 8014.23, 9853.78, 11620.13, 13310.82, 14923.75
 0.94, 2082.94, 4113.19, 6082.27, 7985.08, 9817.89, 11577.72, 13262.15, 14869.08
 0.96, 2075.51, 4098.51, 6060.52, 7956.48, 9782.66, 11536.11, 13214.39, 14815.45
 0.98, 2068.22, 4084.09, 6039.17, 7928.41, 9748.09, 11495.28, 13167.55, 14762.84
 1, 2061.06, 4069.94, 6018.22, 7900.86, 9714.16, 11455.21, 13121.59, 14711.23
 1.02, 2061.06, 4069.94, 6018.22, 7900.86, 9714.16, 11455.21, 13121.59, 14711.23
ENDTABLE
FX_TIRE_GAIN(2,1)   1 ! Gain multiplied with calculated value to get Fx
FX_TIRE_OFFSET(2,1) 0 ; N ! Offset added (after gain) to get Fx
KAPPA_START_FX_TIRE(2,1) 0 ; - ! Offset subtracted from Kappa
KAPPA_SCALE_FX_TIRE(2,1) 1 ! Scale factor divided into (Kappa - KAPPA_START_FX_TIRE)
FZ_START_FX_TIRE(2,1) 0 ; N ! Offset subtracted from Fz
FZ_SCALE_FX_TIRE(2,1) 1 ! Scale factor divided into (Fz - FZ_START_FX_TIRE)

! 2D table: row 1 has "0" (place holder) followed by 8 values of Fz (N). Other rows
! have Kappa (-) followed by 8 values of Fx (N). With type = 2D_FROM _ZERO, the table
! includes a hidden row 2 of zeros along with a hidden column 1 of zeros.
FX_TIRE_CARPET(2,2) 2D_FROM_ZERO ! axle 2, right side
 0, 2819.41, 5638.82, 8458.24, 11277.65, 14097.06, 16916.47, 19735.88, 22555.3
 0.02, 659.98, 1310.49, 1949.71, 2576.32, 3189.21, 3787.34, 4369.71, 4935.36
 0.04, 1213.62, 2408.05, 3579.67, 4725.96, 5844.79, 6934.2, 7992.38, 9017.56
 0.06, 1619.31, 3210.25, 4767.62, 6287.9, 7768.15, 9205.77, 10598.36, 11943.63
 0.08, 1893.6, 3751.15, 5566.2, 7334.49, 9052.54, 10717.34, 12326.12, 13876.34
 0.1, 2072.48, 4103, 6084.23, 8011.39, 9880.67, 11688.8, 13432.84, 15110.11
 0.12, 2187.92, 4329.57, 6416.99, 8445.04, 10409.72, 12307.6, 14135.69, 15891.24
 0.14, 2262.4, 4475.42, 6630.65, 8722.77, 10747.62, 12701.71, 14582, 16385.75
 0.16, 2310.35, 4569.09, 6767.52, 8900.16, 10962.77, 12951.84, 14864.31, 16697.45
 0.18, 2340.84, 4628.48, 6854, 9011.81, 11097.64, 13107.96, 15039.71, 16890.18
 0.2, 2359.6, 4664.84, 6906.65, 9079.39, 11178.75, 13201.2, 15143.7, 17003.56
 0.22, 2370.27, 4685.35, 6936.06, 9116.71, 11222.99, 13251.38, 15198.83, 17062.69
 0.24, 2375.27, 4694.74, 6949.15, 9132.81, 11241.4, 13271.38, 15219.76, 17083.89
 0.26, 2376.19, 4696.14, 6950.56, 9133.73, 11241.33, 13269.85, 15216.3, 17078.07
 0.28, 2374.15, 4691.75, 6943.48, 9123.62, 11227.86, 13252.7, 15195.17, 17052.68
 0.3, 2369.92, 4683.08, 6930.15, 9105.4, 11204.54, 13224.08, 15161.08, 17012.97
 0.32, 2364.06, 4671.23, 6912.16, 9081.15, 11173.91, 13186.98, 15117.42, 16962.69
 0.34, 2356.98, 4657, 6890.71, 9052.42, 11137.85, 13143.57, 15066.65, 16904.58
 0.36, 2348.99, 4640.99, 6866.67, 9020.34, 11097.75, 13095.47, 15010.61, 16840.68
 0.38, 2340.31, 4623.65, 6840.69, 8985.77, 11054.65, 13043.91, 14950.7, 16772.53
 0.4, 2331.13, 4605.33, 6813.3, 8949.37, 11009.35, 12989.83, 14887.97, 16701.31
 0.42, 2321.58, 4586.3, 6784.87, 8911.66, 10962.48, 12933.96, 14823.25, 16627.94
 0.44, 2311.76, 4566.76, 6755.72, 8873.04, 10914.53, 12876.85, 14757.19, 16553.12
 0.46, 2301.77, 4546.88, 6726.1, 8833.81, 10865.88, 12818.96, 14690.27, 16477.41
 0.48, 2291.67, 4526.8, 6696.18, 8794.24, 10816.83, 12760.65, 14622.92, 16401.26
 0.5, 2281.52, 4506.62, 6666.14, 8754.51, 10767.63, 12702.19, 14555.44, 16325.02
 0.52, 2271.35, 4486.43, 6636.09, 8714.8, 10718.46, 12643.81, 14488.09, 16248.97
 0.54, 2261.2, 4466.28, 6606.13, 8675.22, 10669.5, 12585.69, 14421.08, 16173.33
 0.56, 2251.1, 4446.25, 6576.34, 8635.89, 10620.85, 12527.97, 14354.56, 16098.29
 0.58, 2241.08, 4426.36, 6546.78, 8596.88, 10572.62, 12470.78, 14288.66, 16023.99
 0.6, 2231.15, 4406.66, 6517.51, 8558.26, 10524.89, 12414.2, 14223.5, 15950.53
 0.62, 2221.32, 4387.18, 6488.57, 8520.09, 10477.73, 12358.3, 14159.15, 15878.01
 0.64, 2211.61, 4367.93, 6459.99, 8482.4, 10431.17, 12303.14, 14095.67, 15806.5
 0.66, 2202.03, 4348.93, 6431.79, 8445.23, 10385.27, 12248.77, 14033.11, 15736.04
 0.68, 2192.58, 4330.21, 6404, 8408.59, 10340.05, 12195.23, 13971.51, 15666.69
 0.7, 2183.26, 4311.76, 6376.62, 8372.52, 10295.53, 12142.52, 13910.9, 15598.46
 0.72, 2174.1, 4293.6, 6349.68, 8337.03, 10251.73, 12090.68, 13851.29, 15531.38
 0.74, 2165.07, 4275.73, 6323.17, 8302.11, 10208.65, 12039.71, 13792.7, 15465.45
 0.76, 2156.2, 4258.16, 6297.11, 8267.79, 10166.31, 11989.61, 13735.13, 15400.69
 0.78, 2147.47, 4240.88, 6271.49, 8234.05, 10124.71, 11940.4, 13678.58, 15337.09
 0.8, 2138.89, 4223.89, 6246.31, 8200.9, 10083.84, 11892.07, 13623.05, 15274.65
 0.82, 2130.46, 4207.21, 6221.57, 8168.35, 10043.71, 11844.61, 13568.54, 15213.36
 0.84, 2122.18, 4190.82, 6197.28, 8136.38, 10004.3, 11798.02, 13515.03, 15153.22
 0.86, 2114.04, 4174.72, 6173.43, 8104.99, 9965.61, 11752.28, 13462.52, 15094.2
 0.88, 2106.05, 4158.91, 6150, 8074.17, 9927.63, 11707.4, 13410.99, 15036.29
 0.9, 2098.2, 4143.39, 6127.01, 8043.92, 9890.36, 11663.35, 13360.43, 14979.48
 0.92, 2090.5, 4128.15, 6104.43, 8014.23, 9853.78, 11620.13, 13310.82, 14923.75
 0.94, 2082.94, 4113.19, 6082.27, 7985.08, 9817.89, 11577.72, 13262.15, 14869.08
 0.96, 2075.51, 4098.51, 6060.52, 7956.48, 9782.66, 11536.11, 13214.39, 14815.45
 0.98, 2068.22, 4084.09, 6039.17, 7928.41, 9748.09, 11495.28, 13167.55, 14762.84
 1, 2061.06, 4069.94, 6018.22, 7900.86, 9714.16, 11455.21, 13121.59, 14711.23
 1.02, 2061.06, 4069.94, 6018.22, 7900.86, 9714.16, 11455.21, 13121.59, 14711.23
ENDTABLE
FX_TIRE_GAIN(2,2)   1 ! Gain multiplied with calculated value to get Fx
FX_TIRE_OFFSET(2,2) 0 ; N ! Offset added (after gain) to get Fx
KAPPA_START_FX_TIRE(2,2) 0 ; - ! Offset subtracted from Kappa
KAPPA_SCALE_FX_TIRE(2,2) 1 ! Scale factor divided into (Kappa - KAPPA_START_FX_TIRE)
FZ_START_FX_TIRE(2,2) 0 ; N ! Offset subtracted from Fz
FZ_SCALE_FX_TIRE(2,2) 1 ! Scale factor divided into (Fz - FZ_START_FX_TIRE)

! FY_AERO_SHAPING: Coefficient CFY for for Y component of aerodynamic force. CFY is
! a function of aerodynamic slip angle (CONSTANT, COEFFICIENT, or TABLE).
! Alternatively, a custom equation can be defined at runtime. CFY from the
! calculation can be adjusted with FY_AERO_SHAPING_GAIN and FY_AERO_SHAPING_OFFSET.
! Aerodynamic slip angle used in the calculation can be adjusted with
! SLIP_SCALE_FY_AERO and SLIP_START_FY_AERO.

! 1D table: col 1 = aerodynamic slip angle (deg), col 2 = CFY (-)
FY_AERO_SHAPING_TABLE SPLINE_FLAT ! spline interpolation, flat-line extrapolation
 -180, 0
 -90, -2
 0, 0
 90, 2
 180, 0
ENDTABLE
FY_AERO_SHAPING_GAIN 1 ! Gain multiplied with calculated value to get CFY
FY_AERO_SHAPING_OFFSET 0 ; - ! Offset added (after gain) to get CFY
SLIP_START_FY_AERO  0 ; deg ! Offset subtracted from aerodynamic slip angle
SLIP_SCALE_FY_AERO  1 ! Scale factor divided into (aerodynamic slip angle -
                      ! SLIP_START_FY_AERO)

! FY_AERO_SHAPING_2: Coefficient CFY2 for Y component of aerodynamic force. CFY2 can
! be a nonlinear CARPET function of ride height and pitch or a function of pitch
! (CONSTANT, COEFFICIENT, or TABLE) combined with a function FY_AERO_SHAPING_Z of
! ride height (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation can
! be defined at runtime. CFY2 from the calculation can be adjusted with
! FY_AERO_SHAPING_2_GAIN and FY_AERO_SHAPING_2_OFFSET. Pitch used in the calculation
! can be adjusted with PITCH_SCALE_FY_AERO and PITCH_START_FY_AERO. Ride height used
! in the calculation can be adjusted with Z_SCALE_FY_AERO and Z_START_FY_AERO.

FY_AERO_SHAPING_2_CONSTANT 1 ; - ! [D] Constant CFY2 component due to pitch
FY_AERO_SHAPING_2_GAIN 1 ! Gain multiplied with calculated value to get CFY2
FY_AERO_SHAPING_2_OFFSET 0 ; - ! Offset added (after gain) to get CFY2
FY_AERO_SHAPING_2_COMBINE MULTIPLY ! How to combine the two components
FY_AERO_SHAPING_Z_CONSTANT 1 ; - ! [D] Constant CFY2 component due to ride height

! FY_TIRE: Tire lateral force (Fy) as a function of vertical load (Fz) and lateral
! slip (Alpha). Fy can be a nonlinear CARPET function of Fz and Alpha or a function
! of Alpha multiplied by a function FY_TIRE_FZ of Fz (CONSTANT, COEFFICIENT, or
! TABLE). Fy from the calculation can be adjusted with FY_TIRE_GAIN and
! FY_TIRE_OFFSET. Alpha used in the calculation can be adjusted with
! ALPHA_SCALE_FY_TIRE and ALPHA_START_FY_TIRE. Fz used in the calculation can be
! adjusted with FZ_SCALE_FY_TIRE and FZ_START_FY_TIRE. This configurable function
! supports 4 datasets; if indices shown below are not used, e.g., (1,2), the current
! values of the indices IAXLE and ISIDE are used to identify the dataset when reading
! data.

! 2D table: row 1 has "0" (place holder) followed by 8 values of Fz (N). Other rows
! have Alpha (deg) followed by 8 values of Fy (N). With type = 2D_FROM _ZERO, the
! table includes a hidden row 2 of zeros along with a hidden column 1 of zeros.
FY_TIRE_CARPET(1,1) 2D_FROM_ZERO ! axle 1, left side
 0, 2819.41, 5638.82, 8458.24, 11277.65, 14097.06, 16916.47, 19735.88, 22555.3
 0.5, 329.58, 633.8, 909.33, 1154.7, 1369.28, 1552.96, 1705.99, 1828.89
 1, 648.04, 1246.9, 1790, 2274.43, 2698.83, 3062.86, 3366.88, 3611.83
 1.5, 945.81, 1821.35, 2617.08, 3328.56, 3953.62, 4491.51, 4942.48, 5307.63
 2, 1215.89, 2343.97, 3371.97, 4293.99, 5106.92, 5809.37, 6401.27, 6883.54
 2.5, 1454.34, 2807.04, 4043.54, 5156.52, 6141.82, 6997.3, 7722.26, 8317.22
 3, 1659.96, 3208.03, 4627.74, 5910.47, 7051.03, 8046.37, 8895.04, 9596.91
 3.5, 1833.72, 3548.45, 5126.18, 6557.19, 7835.24, 8956.38, 9918.31, 10720.1
 4, 1978.06, 3832.57, 5544.42, 7102.92, 8500.93, 9733.58, 10797.72, 11691.54
 4.5, 2096.12, 4066.18, 5890.26, 7556.89, 9058.15, 10388.36, 11543.5, 12520.93
 5, 2191.36, 4255.65, 6172.44, 7929.66, 9518.74, 10933.28, 12168.49, 13220.91
 5.5, 2267.11, 4407.27, 6399.73, 8231.98, 9894.93, 11381.59, 12686.5, 13805.43
 6, 2326.48, 4526.89, 6580.35, 8474.05, 10198.51, 11746.24, 13111.19, 14288.52
 6.5, 2372.2, 4619.73, 6721.71, 8665.16, 10440.3, 12039.24, 13455.47, 14683.59
 7, 2406.62, 4690.32, 6830.31, 8813.51, 10629.93, 12271.41, 13731.04, 15002.96
 7.5, 2431.75, 4742.52, 6911.69, 8926.16, 10775.81, 12452.25, 13948.28, 15257.68
 8, 2449.26, 4779.59, 6970.57, 9009.16, 10885.14, 12589.98, 14116.27, 15457.46
 8.5, 2460.54, 4804.23, 7010.91, 9067.59, 10964.04, 12691.63, 14242.79, 15610.74
 9, 2466.74, 4818.71, 7036, 9105.72, 11017.68, 12763.18, 14334.52, 15724.78
 9.5, 2468.82, 4824.88, 7048.58, 9127.13, 11050.39, 12809.64, 14397.12, 15805.77
 10, 2467.54, 4824.29, 7050.91, 9134.78, 11065.79, 12835.26, 14435.38, 15859
 10.5, 2463.55, 4818.2, 7044.88, 9131.13, 11066.91, 12843.59, 14453.33, 15888.94
 11, 2457.38, 4807.65, 7032.05, 9118.23, 11056.28, 12837.6, 14454.37, 15899.37
 11.5, 2449.45, 4793.52, 7013.68, 9097.78, 11036, 12819.78, 14441.37, 15893.5
 12, 2440.13, 4776.5, 6990.86, 9071.2, 11007.82, 12792.23, 14416.71, 15874.03
 12.5, 2429.71, 4757.19, 6964.46, 9039.66, 10973.21, 12756.69, 14382.43, 15843.24
 13, 2418.42, 4736.06, 6935.2, 9004.14, 10933.38, 12714.62, 14340.23, 15803.06
 13.5, 2406.46, 4713.53, 6903.71, 8965.44, 10889.36, 12667.24, 14291.54, 15755.13
 14, 2394, 4689.91, 6870.46, 8924.25, 10842, 12615.6, 14237.56, 15700.82
 14.5, 2381.18, 4665.49, 6835.89, 8881.12, 10792.02, 12560.55, 14179.31, 15641.29
 15, 2368.09, 4640.49, 6800.34, 8836.52, 10739.99, 12502.81, 14117.64, 15577.54
 15.5, 2354.84, 4615.09, 6764.08, 8790.84, 10686.43, 12442.99, 14053.28, 15510.4
 16, 2341.5, 4589.44, 6727.37, 8744.41, 10631.75, 12381.61, 13986.82, 15440.58
 16.5, 2328.13, 4563.69, 6690.39, 8697.5, 10576.3, 12319.09, 13918.79, 15368.66
 17, 2314.78, 4537.92, 6653.31, 8650.33, 10520.36, 12255.79, 13849.62, 15295.17
 17.5, 2301.5, 4512.23, 6616.26, 8603.08, 10464.17, 12192.01, 13779.66, 15220.53
 18, 2288.3, 4486.68, 6579.35, 8555.92, 10407.94, 12128, 13709.23, 15145.11
 18.5, 2275.23, 4461.33, 6542.67, 8508.96, 10351.84, 12063.98, 13638.59, 15069.2
 19, 2262.31, 4436.23, 6506.29, 8462.3, 10296, 12000.11, 13567.94, 14993.07
 19.5, 2249.54, 4411.41, 6470.28, 8416.05, 10240.54, 11936.55, 13497.46, 14916.94
 20, 2236.94, 4386.91, 6434.68, 8370.25, 10185.54, 11873.42, 13427.32, 14840.99
 20.5, 2224.53, 4362.74, 6399.52, 8324.97, 10131.08, 11810.8, 13357.63, 14765.37
 21, 2212.32, 4338.92, 6364.84, 8280.26, 10077.23, 11748.79, 13288.49, 14690.22
 21.5, 2200.29, 4315.46, 6330.66, 8236.14, 10024.04, 11687.45, 13220, 14615.63
 22, 2188.47, 4292.38, 6296.99, 8192.64, 9971.53, 11626.82, 13152.21, 14541.7
 22.5, 2176.85, 4269.68, 6263.85, 8149.78, 9919.75, 11566.97, 13085.19, 14468.5
 23, 2165.43, 4247.36, 6231.25, 8107.58, 9868.7, 11507.9, 13018.98, 14396.08
 23.5, 2154.22, 4225.42, 6199.18, 8066.04, 9818.42, 11449.65, 12953.62, 14324.5
 24, 2143.21, 4203.87, 6167.65, 8025.17, 9768.9, 11392.24, 12889.12, 14253.78
 24.5, 2132.4, 4182.7, 6136.65, 7984.96, 9720.15, 11335.67, 12825.51, 14183.97
 25, 2121.78, 4161.9, 6106.2, 7945.43, 9672.17, 11279.95, 12762.8, 14115.07
 26, 2121.78, 4161.9, 6106.2, 7945.43, 9672.17, 11279.95, 12762.8, 14115.07
ENDTABLE
FY_TIRE_GAIN(1,1)   1 ! Gain multiplied with calculated value to get Fy
FY_TIRE_OFFSET(1,1) 0 ; N ! Offset added (after gain) to get Fy
ALPHA_START_FY_TIRE(1,1) 0 ; deg ! Offset subtracted from Alpha
ALPHA_SCALE_FY_TIRE(1,1) 1 ! Scale factor divided into (Alpha - ALPHA_START_FY_TIRE)
FZ_START_FY_TIRE(1,1) 0 ; N ! Offset subtracted from Fz
FZ_SCALE_FY_TIRE(1,1) 1 ! Scale factor divided into (Fz - FZ_START_FY_TIRE)

! 2D table: row 1 has "0" (place holder) followed by 8 values of Fz (N). Other rows
! have Alpha (deg) followed by 8 values of Fy (N). With type = 2D_FROM _ZERO, the
! table includes a hidden row 2 of zeros along with a hidden column 1 of zeros.
FY_TIRE_CARPET(1,2) 2D_FROM_ZERO ! axle 1, right side
 0, 2819.41, 5638.82, 8458.24, 11277.65, 14097.06, 16916.47, 19735.88, 22555.3
 0.5, 329.58, 633.8, 909.33, 1154.7, 1369.28, 1552.96, 1705.99, 1828.89
 1, 648.04, 1246.9, 1790, 2274.43, 2698.83, 3062.86, 3366.88, 3611.83
 1.5, 945.81, 1821.35, 2617.08, 3328.56, 3953.62, 4491.51, 4942.48, 5307.63
 2, 1215.89, 2343.97, 3371.97, 4293.99, 5106.92, 5809.37, 6401.27, 6883.54
 2.5, 1454.34, 2807.04, 4043.54, 5156.52, 6141.82, 6997.3, 7722.26, 8317.22
 3, 1659.96, 3208.03, 4627.74, 5910.47, 7051.03, 8046.37, 8895.04, 9596.91
 3.5, 1833.72, 3548.45, 5126.18, 6557.19, 7835.24, 8956.38, 9918.31, 10720.1
 4, 1978.06, 3832.57, 5544.42, 7102.92, 8500.93, 9733.58, 10797.72, 11691.54
 4.5, 2096.12, 4066.18, 5890.26, 7556.89, 9058.15, 10388.36, 11543.5, 12520.93
 5, 2191.36, 4255.65, 6172.44, 7929.66, 9518.74, 10933.28, 12168.49, 13220.91
 5.5, 2267.11, 4407.27, 6399.73, 8231.98, 9894.93, 11381.59, 12686.5, 13805.43
 6, 2326.48, 4526.89, 6580.35, 8474.05, 10198.51, 11746.24, 13111.19, 14288.52
 6.5, 2372.2, 4619.73, 6721.71, 8665.16, 10440.3, 12039.24, 13455.47, 14683.59
 7, 2406.62, 4690.32, 6830.31, 8813.51, 10629.93, 12271.41, 13731.04, 15002.96
 7.5, 2431.75, 4742.52, 6911.69, 8926.16, 10775.81, 12452.25, 13948.28, 15257.68
 8, 2449.26, 4779.59, 6970.57, 9009.16, 10885.14, 12589.98, 14116.27, 15457.46
 8.5, 2460.54, 4804.23, 7010.91, 9067.59, 10964.04, 12691.63, 14242.79, 15610.74
 9, 2466.74, 4818.71, 7036, 9105.72, 11017.68, 12763.18, 14334.52, 15724.78
 9.5, 2468.82, 4824.88, 7048.58, 9127.13, 11050.39, 12809.64, 14397.12, 15805.77
 10, 2467.54, 4824.29, 7050.91, 9134.78, 11065.79, 12835.26, 14435.38, 15859
 10.5, 2463.55, 4818.2, 7044.88, 9131.13, 11066.91, 12843.59, 14453.33, 15888.94
 11, 2457.38, 4807.65, 7032.05, 9118.23, 11056.28, 12837.6, 14454.37, 15899.37
 11.5, 2449.45, 4793.52, 7013.68, 9097.78, 11036, 12819.78, 14441.37, 15893.5
 12, 2440.13, 4776.5, 6990.86, 9071.2, 11007.82, 12792.23, 14416.71, 15874.03
 12.5, 2429.71, 4757.19, 6964.46, 9039.66, 10973.21, 12756.69, 14382.43, 15843.24
 13, 2418.42, 4736.06, 6935.2, 9004.14, 10933.38, 12714.62, 14340.23, 15803.06
 13.5, 2406.46, 4713.53, 6903.71, 8965.44, 10889.36, 12667.24, 14291.54, 15755.13
 14, 2394, 4689.91, 6870.46, 8924.25, 10842, 12615.6, 14237.56, 15700.82
 14.5, 2381.18, 4665.49, 6835.89, 8881.12, 10792.02, 12560.55, 14179.31, 15641.29
 15, 2368.09, 4640.49, 6800.34, 8836.52, 10739.99, 12502.81, 14117.64, 15577.54
 15.5, 2354.84, 4615.09, 6764.08, 8790.84, 10686.43, 12442.99, 14053.28, 15510.4
 16, 2341.5, 4589.44, 6727.37, 8744.41, 10631.75, 12381.61, 13986.82, 15440.58
 16.5, 2328.13, 4563.69, 6690.39, 8697.5, 10576.3, 12319.09, 13918.79, 15368.66
 17, 2314.78, 4537.92, 6653.31, 8650.33, 10520.36, 12255.79, 13849.62, 15295.17
 17.5, 2301.5, 4512.23, 6616.26, 8603.08, 10464.17, 12192.01, 13779.66, 15220.53
 18, 2288.3, 4486.68, 6579.35, 8555.92, 10407.94, 12128, 13709.23, 15145.11
 18.5, 2275.23, 4461.33, 6542.67, 8508.96, 10351.84, 12063.98, 13638.59, 15069.2
 19, 2262.31, 4436.23, 6506.29, 8462.3, 10296, 12000.11, 13567.94, 14993.07
 19.5, 2249.54, 4411.41, 6470.28, 8416.05, 10240.54, 11936.55, 13497.46, 14916.94
 20, 2236.94, 4386.91, 6434.68, 8370.25, 10185.54, 11873.42, 13427.32, 14840.99
 20.5, 2224.53, 4362.74, 6399.52, 8324.97, 10131.08, 11810.8, 13357.63, 14765.37
 21, 2212.32, 4338.92, 6364.84, 8280.26, 10077.23, 11748.79, 13288.49, 14690.22
 21.5, 2200.29, 4315.46, 6330.66, 8236.14, 10024.04, 11687.45, 13220, 14615.63
 22, 2188.47, 4292.38, 6296.99, 8192.64, 9971.53, 11626.82, 13152.21, 14541.7
 22.5, 2176.85, 4269.68, 6263.85, 8149.78, 9919.75, 11566.97, 13085.19, 14468.5
 23, 2165.43, 4247.36, 6231.25, 8107.58, 9868.7, 11507.9, 13018.98, 14396.08
 23.5, 2154.22, 4225.42, 6199.18, 8066.04, 9818.42, 11449.65, 12953.62, 14324.5
 24, 2143.21, 4203.87, 6167.65, 8025.17, 9768.9, 11392.24, 12889.12, 14253.78
 24.5, 2132.4, 4182.7, 6136.65, 7984.96, 9720.15, 11335.67, 12825.51, 14183.97
 25, 2121.78, 4161.9, 6106.2, 7945.43, 9672.17, 11279.95, 12762.8, 14115.07
 26, 2121.78, 4161.9, 6106.2, 7945.43, 9672.17, 11279.95, 12762.8, 14115.07
ENDTABLE
FY_TIRE_GAIN(1,2)   1 ! Gain multiplied with calculated value to get Fy
FY_TIRE_OFFSET(1,2) 0 ; N ! Offset added (after gain) to get Fy
ALPHA_START_FY_TIRE(1,2) 0 ; deg ! Offset subtracted from Alpha
ALPHA_SCALE_FY_TIRE(1,2) 1 ! Scale factor divided into (Alpha - ALPHA_START_FY_TIRE)
FZ_START_FY_TIRE(1,2) 0 ; N ! Offset subtracted from Fz
FZ_SCALE_FY_TIRE(1,2) 1 ! Scale factor divided into (Fz - FZ_START_FY_TIRE)

! 2D table: row 1 has "0" (place holder) followed by 8 values of Fz (N). Other rows
! have Alpha (deg) followed by 8 values of Fy (N). With type = 2D_FROM _ZERO, the
! table includes a hidden row 2 of zeros along with a hidden column 1 of zeros.
FY_TIRE_CARPET(2,1) 2D_FROM_ZERO ! axle 2, left side
 0, 2819.41, 5638.82, 8458.24, 11277.65, 14097.06, 16916.47, 19735.88, 22555.3
 0.5, 329.58, 633.8, 909.33, 1154.7, 1369.28, 1552.96, 1705.99, 1828.89
 1, 648.04, 1246.9, 1790, 2274.43, 2698.83, 3062.86, 3366.88, 3611.83
 1.5, 945.81, 1821.35, 2617.08, 3328.56, 3953.62, 4491.51, 4942.48, 5307.63
 2, 1215.89, 2343.97, 3371.97, 4293.99, 5106.92, 5809.37, 6401.27, 6883.54
 2.5, 1454.34, 2807.04, 4043.54, 5156.52, 6141.82, 6997.3, 7722.26, 8317.22
 3, 1659.96, 3208.03, 4627.74, 5910.47, 7051.03, 8046.37, 8895.04, 9596.91
 3.5, 1833.72, 3548.45, 5126.18, 6557.19, 7835.24, 8956.38, 9918.31, 10720.1
 4, 1978.06, 3832.57, 5544.42, 7102.92, 8500.93, 9733.58, 10797.72, 11691.54
 4.5, 2096.12, 4066.18, 5890.26, 7556.89, 9058.15, 10388.36, 11543.5, 12520.93
 5, 2191.36, 4255.65, 6172.44, 7929.66, 9518.74, 10933.28, 12168.49, 13220.91
 5.5, 2267.11, 4407.27, 6399.73, 8231.98, 9894.93, 11381.59, 12686.5, 13805.43
 6, 2326.48, 4526.89, 6580.35, 8474.05, 10198.51, 11746.24, 13111.19, 14288.52
 6.5, 2372.2, 4619.73, 6721.71, 8665.16, 10440.3, 12039.24, 13455.47, 14683.59
 7, 2406.62, 4690.32, 6830.31, 8813.51, 10629.93, 12271.41, 13731.04, 15002.96
 7.5, 2431.75, 4742.52, 6911.69, 8926.16, 10775.81, 12452.25, 13948.28, 15257.68
 8, 2449.26, 4779.59, 6970.57, 9009.16, 10885.14, 12589.98, 14116.27, 15457.46
 8.5, 2460.54, 4804.23, 7010.91, 9067.59, 10964.04, 12691.63, 14242.79, 15610.74
 9, 2466.74, 4818.71, 7036, 9105.72, 11017.68, 12763.18, 14334.52, 15724.78
 9.5, 2468.82, 4824.88, 7048.58, 9127.13, 11050.39, 12809.64, 14397.12, 15805.77
 10, 2467.54, 4824.29, 7050.91, 9134.78, 11065.79, 12835.26, 14435.38, 15859
 10.5, 2463.55, 4818.2, 7044.88, 9131.13, 11066.91, 12843.59, 14453.33, 15888.94
 11, 2457.38, 4807.65, 7032.05, 9118.23, 11056.28, 12837.6, 14454.37, 15899.37
 11.5, 2449.45, 4793.52, 7013.68, 9097.78, 11036, 12819.78, 14441.37, 15893.5
 12, 2440.13, 4776.5, 6990.86, 9071.2, 11007.82, 12792.23, 14416.71, 15874.03
 12.5, 2429.71, 4757.19, 6964.46, 9039.66, 10973.21, 12756.69, 14382.43, 15843.24
 13, 2418.42, 4736.06, 6935.2, 9004.14, 10933.38, 12714.62, 14340.23, 15803.06
 13.5, 2406.46, 4713.53, 6903.71, 8965.44, 10889.36, 12667.24, 14291.54, 15755.13
 14, 2394, 4689.91, 6870.46, 8924.25, 10842, 12615.6, 14237.56, 15700.82
 14.5, 2381.18, 4665.49, 6835.89, 8881.12, 10792.02, 12560.55, 14179.31, 15641.29
 15, 2368.09, 4640.49, 6800.34, 8836.52, 10739.99, 12502.81, 14117.64, 15577.54
 15.5, 2354.84, 4615.09, 6764.08, 8790.84, 10686.43, 12442.99, 14053.28, 15510.4
 16, 2341.5, 4589.44, 6727.37, 8744.41, 10631.75, 12381.61, 13986.82, 15440.58
 16.5, 2328.13, 4563.69, 6690.39, 8697.5, 10576.3, 12319.09, 13918.79, 15368.66
 17, 2314.78, 4537.92, 6653.31, 8650.33, 10520.36, 12255.79, 13849.62, 15295.17
 17.5, 2301.5, 4512.23, 6616.26, 8603.08, 10464.17, 12192.01, 13779.66, 15220.53
 18, 2288.3, 4486.68, 6579.35, 8555.92, 10407.94, 12128, 13709.23, 15145.11
 18.5, 2275.23, 4461.33, 6542.67, 8508.96, 10351.84, 12063.98, 13638.59, 15069.2
 19, 2262.31, 4436.23, 6506.29, 8462.3, 10296, 12000.11, 13567.94, 14993.07
 19.5, 2249.54, 4411.41, 6470.28, 8416.05, 10240.54, 11936.55, 13497.46, 14916.94
 20, 2236.94, 4386.91, 6434.68, 8370.25, 10185.54, 11873.42, 13427.32, 14840.99
 20.5, 2224.53, 4362.74, 6399.52, 8324.97, 10131.08, 11810.8, 13357.63, 14765.37
 21, 2212.32, 4338.92, 6364.84, 8280.26, 10077.23, 11748.79, 13288.49, 14690.22
 21.5, 2200.29, 4315.46, 6330.66, 8236.14, 10024.04, 11687.45, 13220, 14615.63
 22, 2188.47, 4292.38, 6296.99, 8192.64, 9971.53, 11626.82, 13152.21, 14541.7
 22.5, 2176.85, 4269.68, 6263.85, 8149.78, 9919.75, 11566.97, 13085.19, 14468.5
 23, 2165.43, 4247.36, 6231.25, 8107.58, 9868.7, 11507.9, 13018.98, 14396.08
 23.5, 2154.22, 4225.42, 6199.18, 8066.04, 9818.42, 11449.65, 12953.62, 14324.5
 24, 2143.21, 4203.87, 6167.65, 8025.17, 9768.9, 11392.24, 12889.12, 14253.78
 24.5, 2132.4, 4182.7, 6136.65, 7984.96, 9720.15, 11335.67, 12825.51, 14183.97
 25, 2121.78, 4161.9, 6106.2, 7945.43, 9672.17, 11279.95, 12762.8, 14115.07
 26, 2121.78, 4161.9, 6106.2, 7945.43, 9672.17, 11279.95, 12762.8, 14115.07
ENDTABLE
FY_TIRE_GAIN(2,1)   1 ! Gain multiplied with calculated value to get Fy
FY_TIRE_OFFSET(2,1) 0 ; N ! Offset added (after gain) to get Fy
ALPHA_START_FY_TIRE(2,1) 0 ; deg ! Offset subtracted from Alpha
ALPHA_SCALE_FY_TIRE(2,1) 1 ! Scale factor divided into (Alpha - ALPHA_START_FY_TIRE)
FZ_START_FY_TIRE(2,1) 0 ; N ! Offset subtracted from Fz
FZ_SCALE_FY_TIRE(2,1) 1 ! Scale factor divided into (Fz - FZ_START_FY_TIRE)

! 2D table: row 1 has "0" (place holder) followed by 8 values of Fz (N). Other rows
! have Alpha (deg) followed by 8 values of Fy (N). With type = 2D_FROM _ZERO, the
! table includes a hidden row 2 of zeros along with a hidden column 1 of zeros.
FY_TIRE_CARPET(2,2) 2D_FROM_ZERO ! axle 2, right side
 0, 2819.41, 5638.82, 8458.24, 11277.65, 14097.06, 16916.47, 19735.88, 22555.3
 0.5, 329.58, 633.8, 909.33, 1154.7, 1369.28, 1552.96, 1705.99, 1828.89
 1, 648.04, 1246.9, 1790, 2274.43, 2698.83, 3062.86, 3366.88, 3611.83
 1.5, 945.81, 1821.35, 2617.08, 3328.56, 3953.62, 4491.51, 4942.48, 5307.63
 2, 1215.89, 2343.97, 3371.97, 4293.99, 5106.92, 5809.37, 6401.27, 6883.54
 2.5, 1454.34, 2807.04, 4043.54, 5156.52, 6141.82, 6997.3, 7722.26, 8317.22
 3, 1659.96, 3208.03, 4627.74, 5910.47, 7051.03, 8046.37, 8895.04, 9596.91
 3.5, 1833.72, 3548.45, 5126.18, 6557.19, 7835.24, 8956.38, 9918.31, 10720.1
 4, 1978.06, 3832.57, 5544.42, 7102.92, 8500.93, 9733.58, 10797.72, 11691.54
 4.5, 2096.12, 4066.18, 5890.26, 7556.89, 9058.15, 10388.36, 11543.5, 12520.93
 5, 2191.36, 4255.65, 6172.44, 7929.66, 9518.74, 10933.28, 12168.49, 13220.91
 5.5, 2267.11, 4407.27, 6399.73, 8231.98, 9894.93, 11381.59, 12686.5, 13805.43
 6, 2326.48, 4526.89, 6580.35, 8474.05, 10198.51, 11746.24, 13111.19, 14288.52
 6.5, 2372.2, 4619.73, 6721.71, 8665.16, 10440.3, 12039.24, 13455.47, 14683.59
 7, 2406.62, 4690.32, 6830.31, 8813.51, 10629.93, 12271.41, 13731.04, 15002.96
 7.5, 2431.75, 4742.52, 6911.69, 8926.16, 10775.81, 12452.25, 13948.28, 15257.68
 8, 2449.26, 4779.59, 6970.57, 9009.16, 10885.14, 12589.98, 14116.27, 15457.46
 8.5, 2460.54, 4804.23, 7010.91, 9067.59, 10964.04, 12691.63, 14242.79, 15610.74
 9, 2466.74, 4818.71, 7036, 9105.72, 11017.68, 12763.18, 14334.52, 15724.78
 9.5, 2468.82, 4824.88, 7048.58, 9127.13, 11050.39, 12809.64, 14397.12, 15805.77
 10, 2467.54, 4824.29, 7050.91, 9134.78, 11065.79, 12835.26, 14435.38, 15859
 10.5, 2463.55, 4818.2, 7044.88, 9131.13, 11066.91, 12843.59, 14453.33, 15888.94
 11, 2457.38, 4807.65, 7032.05, 9118.23, 11056.28, 12837.6, 14454.37, 15899.37
 11.5, 2449.45, 4793.52, 7013.68, 9097.78, 11036, 12819.78, 14441.37, 15893.5
 12, 2440.13, 4776.5, 6990.86, 9071.2, 11007.82, 12792.23, 14416.71, 15874.03
 12.5, 2429.71, 4757.19, 6964.46, 9039.66, 10973.21, 12756.69, 14382.43, 15843.24
 13, 2418.42, 4736.06, 6935.2, 9004.14, 10933.38, 12714.62, 14340.23, 15803.06
 13.5, 2406.46, 4713.53, 6903.71, 8965.44, 10889.36, 12667.24, 14291.54, 15755.13
 14, 2394, 4689.91, 6870.46, 8924.25, 10842, 12615.6, 14237.56, 15700.82
 14.5, 2381.18, 4665.49, 6835.89, 8881.12, 10792.02, 12560.55, 14179.31, 15641.29
 15, 2368.09, 4640.49, 6800.34, 8836.52, 10739.99, 12502.81, 14117.64, 15577.54
 15.5, 2354.84, 4615.09, 6764.08, 8790.84, 10686.43, 12442.99, 14053.28, 15510.4
 16, 2341.5, 4589.44, 6727.37, 8744.41, 10631.75, 12381.61, 13986.82, 15440.58
 16.5, 2328.13, 4563.69, 6690.39, 8697.5, 10576.3, 12319.09, 13918.79, 15368.66
 17, 2314.78, 4537.92, 6653.31, 8650.33, 10520.36, 12255.79, 13849.62, 15295.17
 17.5, 2301.5, 4512.23, 6616.26, 8603.08, 10464.17, 12192.01, 13779.66, 15220.53
 18, 2288.3, 4486.68, 6579.35, 8555.92, 10407.94, 12128, 13709.23, 15145.11
 18.5, 2275.23, 4461.33, 6542.67, 8508.96, 10351.84, 12063.98, 13638.59, 15069.2
 19, 2262.31, 4436.23, 6506.29, 8462.3, 10296, 12000.11, 13567.94, 14993.07
 19.5, 2249.54, 4411.41, 6470.28, 8416.05, 10240.54, 11936.55, 13497.46, 14916.94
 20, 2236.94, 4386.91, 6434.68, 8370.25, 10185.54, 11873.42, 13427.32, 14840.99
 20.5, 2224.53, 4362.74, 6399.52, 8324.97, 10131.08, 11810.8, 13357.63, 14765.37
 21, 2212.32, 4338.92, 6364.84, 8280.26, 10077.23, 11748.79, 13288.49, 14690.22
 21.5, 2200.29, 4315.46, 6330.66, 8236.14, 10024.04, 11687.45, 13220, 14615.63
 22, 2188.47, 4292.38, 6296.99, 8192.64, 9971.53, 11626.82, 13152.21, 14541.7
 22.5, 2176.85, 4269.68, 6263.85, 8149.78, 9919.75, 11566.97, 13085.19, 14468.5
 23, 2165.43, 4247.36, 6231.25, 8107.58, 9868.7, 11507.9, 13018.98, 14396.08
 23.5, 2154.22, 4225.42, 6199.18, 8066.04, 9818.42, 11449.65, 12953.62, 14324.5
 24, 2143.21, 4203.87, 6167.65, 8025.17, 9768.9, 11392.24, 12889.12, 14253.78
 24.5, 2132.4, 4182.7, 6136.65, 7984.96, 9720.15, 11335.67, 12825.51, 14183.97
 25, 2121.78, 4161.9, 6106.2, 7945.43, 9672.17, 11279.95, 12762.8, 14115.07
 26, 2121.78, 4161.9, 6106.2, 7945.43, 9672.17, 11279.95, 12762.8, 14115.07
ENDTABLE
FY_TIRE_GAIN(2,2)   1 ! Gain multiplied with calculated value to get Fy
FY_TIRE_OFFSET(2,2) 0 ; N ! Offset added (after gain) to get Fy
ALPHA_START_FY_TIRE(2,2) 0 ; deg ! Offset subtracted from Alpha
ALPHA_SCALE_FY_TIRE(2,2) 1 ! Scale factor divided into (Alpha - ALPHA_START_FY_TIRE)
FZ_START_FY_TIRE(2,2) 0 ; N ! Offset subtracted from Fz
FZ_SCALE_FY_TIRE(2,2) 1 ! Scale factor divided into (Fz - FZ_START_FY_TIRE)

! FZ_AERO_SHAPING: Coefficient CFZ for for Z component of aerodynamic force. CFZ is
! a function of aerodynamic slip angle (CONSTANT, COEFFICIENT, or TABLE).
! Alternatively, a custom equation can be defined at runtime. CFZ from the
! calculation can be adjusted with FZ_AERO_SHAPING_GAIN and FZ_AERO_SHAPING_OFFSET.
! Aerodynamic slip angle used in the calculation can be adjusted with
! SLIP_SCALE_FZ_AERO and SLIP_START_FZ_AERO.

! 1D table: col 1 = aerodynamic slip angle (deg), col 2 = CFZ (-)
FZ_AERO_SHAPING_TABLE SPLINE_FLAT ! spline interpolation, flat-line extrapolation
 -180, 0.4
 -135, 0.45
 -90, 0.35
 -20, 0.185
 0, 0.18
 20, 0.185
 90, 0.35
 135, 0.45
 180, 0.4
ENDTABLE
FZ_AERO_SHAPING_GAIN 1 ! Gain multiplied with calculated value to get CFZ
FZ_AERO_SHAPING_OFFSET 0 ; - ! Offset added (after gain) to get CFZ
SLIP_START_FZ_AERO  0 ; deg ! Offset subtracted from aerodynamic slip angle
SLIP_SCALE_FZ_AERO  1 ! Scale factor divided into (aerodynamic slip angle -
                      ! SLIP_START_FZ_AERO)

! FZ_AERO_SHAPING_2: Coefficient CFZ2 for Z component of aerodynamic force. CFZ2 can
! be a nonlinear CARPET function of ride height and pitch or a function of pitch
! (CONSTANT, COEFFICIENT, or TABLE) combined with a function FZ_AERO_SHAPING_Z of
! ride height (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation can
! be defined at runtime. CFZ2 from the calculation can be adjusted with
! FZ_AERO_SHAPING_2_GAIN and FZ_AERO_SHAPING_2_OFFSET. Pitch used in the calculation
! can be adjusted with PITCH_SCALE_FZ_AERO and PITCH_START_FZ_AERO. Ride height used
! in the calculation can be adjusted with Z_SCALE_FZ_AERO and Z_START_FZ_AERO.

FZ_AERO_SHAPING_2_CONSTANT 1 ; - ! [D] Constant CFZ2 component due to pitch
FZ_AERO_SHAPING_2_GAIN 1 ! Gain multiplied with calculated value to get CFZ2
FZ_AERO_SHAPING_2_OFFSET 0 ; - ! Offset added (after gain) to get CFZ2
FZ_AERO_SHAPING_2_COMBINE MULTIPLY ! How to combine the two components
FZ_AERO_SHAPING_Z_CONSTANT 1 ; - ! [D] Constant CFZ2 component due to ride height

! FZ_TIRE: Tire vertical force. Vertical force is a function of tire compression
! (COEFFICIENT or TABLE). Vertical force from the calculation can be adjusted with
! FZ_TIRE_GAIN and FZ_TIRE_OFFSET. Tire compression used in the calculation can be
! adjusted with CMP_SCALE_FZ_TIRE and CMP_START_FZ_TIRE. An inverse version of this
! function is used internally. This configurable function supports 4 datasets; if
! indices shown below are not used, e.g., (1,2), the current values of the indices
! IAXLE and ISIDE are used to identify the dataset when reading data.

FZ_TIRE_COEFFICIENT(1,1) 502 ! Coefficient: vertical force per unit tire compression
                             ! (N/mm), axle 1, left side
FZ_TIRE_GAIN(1,1)   1 ! Gain multiplied with calculated value to get vertical force
FZ_TIRE_OFFSET(1,1) 0 ; N ! Offset added (after gain) to get vertical force
CMP_START_FZ_TIRE(1,1) 0 ; mm ! Offset subtracted from tire compression
CMP_SCALE_FZ_TIRE(1,1) 1 ! Scale factor divided into (tire compression -
                         ! CMP_START_FZ_TIRE)

FZ_TIRE_COEFFICIENT(1,2) 502 ! Coefficient: vertical force per unit tire compression
                             ! (N/mm), axle 1, right side
FZ_TIRE_GAIN(1,2)   1 ! Gain multiplied with calculated value to get vertical force
FZ_TIRE_OFFSET(1,2) 0 ; N ! Offset added (after gain) to get vertical force
CMP_START_FZ_TIRE(1,2) 0 ; mm ! Offset subtracted from tire compression
CMP_SCALE_FZ_TIRE(1,2) 1 ! Scale factor divided into (tire compression -
                         ! CMP_START_FZ_TIRE)

FZ_TIRE_COEFFICIENT(2,1) 502 ! Coefficient: vertical force per unit tire compression
                             ! (N/mm), axle 2, left side
FZ_TIRE_GAIN(2,1)   1 ! Gain multiplied with calculated value to get vertical force
FZ_TIRE_OFFSET(2,1) 0 ; N ! Offset added (after gain) to get vertical force
CMP_START_FZ_TIRE(2,1) 0 ; mm ! Offset subtracted from tire compression
CMP_SCALE_FZ_TIRE(2,1) 1 ! Scale factor divided into (tire compression -
                         ! CMP_START_FZ_TIRE)

FZ_TIRE_COEFFICIENT(2,2) 502 ! Coefficient: vertical force per unit tire compression
                             ! (N/mm), axle 2, right side
FZ_TIRE_GAIN(2,2)   1 ! Gain multiplied with calculated value to get vertical force
FZ_TIRE_OFFSET(2,2) 0 ; N ! Offset added (after gain) to get vertical force
CMP_START_FZ_TIRE(2,2) 0 ; mm ! Offset subtracted from tire compression
CMP_SCALE_FZ_TIRE(2,2) 1 ! Scale factor divided into (tire compression -
                         ! CMP_START_FZ_TIRE)

! F_BOOST_R: Boost force applied to steering rack. Boost force can be a nonlinear
! CARPET function of speed and torsion bar torque or a function of torsion bar torque
! (CONSTANT, COEFFICIENT, or TABLE) combined with a function F_BOOST_R_V of speed
! (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation can be defined
! at runtime. Boost force from the calculation can be adjusted with F_BOOST_R_GAIN
! and F_BOOST_R_OFFSET. Torsion bar torque used in the calculation can be adjusted
! with M_TB_SCALE_F_BOOST and M_TB_START_F_BOOST. Speed used in the calculation can
! be adjusted with VX_TB_SCALE_F_BOOST and VX_TB_START_F_BOOST.

! 1D table: col 1 = torsion bar torque (N-m), col 2 = boost force (N)
F_BOOST_R_TABLE SPLINE ! spline interpolation and extrapolation
 -7.92, -6192.8
 -7.788, -6037.9
 -7.656, -5883.1
 -7.524, -5728.3
 -7.392, -5573.4
 -7.26, -5418.6
 -7.128, -5263.8
 -6.996, -5109
 -6.864, -4954.2
 -6.732, -4799.3
 -6.6, -4644.5
 -6.468, -4489.8
 -6.336, -4334.9
 -6.204, -4180.1
 -6.072, -4025.2
 -5.94, -3870.4
 -5.808, -3715.6
 -5.676, -3560.8
 -5.544, -3406
 -5.016, -2895.1
 -4.884, -2794.4
 -4.752, -2693.8
 -4.62, -2593.2
 -4.488, -2492.6
 -4.356, -2392
 -4.224, -2291.3
 -4.092, -2190.7
 -3.96, -2090
 -3.828, -1989.4
 -3.696, -1888.8
 -3.564, -1788.2
 -3.432, -1687.5
 -3.3, -1586.9
 -3.168, -1486.2
 -3.036, -1385.6
 -2.904, -1285
 -2.772, -1184.4
 -2.64, -1083.7
 -2.508, -983.06
 -2.376, -882.5
 -2.244, -781.86
 -2.112, -681.2
 -1.98, -580.57
 -1.848, -479.93
 -1.716, -379.3
 -1.584, -278.67
 -1.056, -61.927
 -0.924, -54.186
 -0.792, -46.445
 -0.66, -38.704
 -0.528, -30.963
 -0.396, -23.222
 -0.264, -15.481
 -0.132, -7.7408
 0, 0
 0.132, 7.7408
 0.264, 15.481
 0.396, 23.222
 0.528, 30.963
 0.66, 38.704
 0.792, 46.445
 0.924, 54.186
 1.056, 61.927
 1.584, 278.67
 1.716, 379.3
 1.848, 479.93
 1.98, 580.57
 2.112, 681.2
 2.244, 781.86
 2.376, 882.5
 2.508, 983.06
 2.64, 1083.7
 2.772, 1184.4
 2.904, 1285
 3.036, 1385.6
 3.168, 1486.2
 3.3, 1586.9
 3.432, 1687.5
 3.564, 1788.2
 3.696, 1888.8
 3.828, 1989.4
 3.96, 2090
 4.092, 2190.7
 4.224, 2291.3
 4.356, 2392
 4.488, 2492.6
 4.62, 2593.2
 4.752, 2693.8
 4.884, 2794.4
 5.016, 2895.1
 5.544, 3406
 5.676, 3560.8
 5.808, 3715.6
 5.94, 3870.4
 6.072, 4025.2
 6.204, 4180.1
 6.336, 4334.9
 6.468, 4489.8
 6.6, 4644.5
 6.732, 4799.3
 6.864, 4954.2
 6.996, 5109
 7.128, 5263.8
 7.26, 5418.6
 7.392, 5573.4
 7.524, 5728.3
 7.656, 5883.1
 7.788, 6037.9
 7.92, 6192.8
ENDTABLE
F_BOOST_R_GAIN      1 ! Gain multiplied with calculated value to get boost force
F_BOOST_R_OFFSET    0 ; N ! Offset added (after gain) to get boost force
M_TB_START_F_BOOST  0 ; N-m ! Offset subtracted from torsion bar torque
M_TB_SCALE_F_BOOST  1 ! Scale factor divided into (torsion bar torque -
                      ! M_TB_START_F_BOOST)
F_BOOST_R_COMBINE ADD ! How to combine the two components
SET_UNITS F_BOOST_R_V_TABLE N ;
F_BOOST_R_V_CONSTANT 0 ; N ! Constant boost force component due to speed

! F_JNC_STOP: Jounce stop force. Force is a function of suspension travel at jounce
! stop (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation can be
! defined at runtime. Force from the calculation can be adjusted with F_JNC_STOP_GAIN
! and F_JNC_STOP_OFFSET. Suspension travel at jounce stop used in the calculation can
! be adjusted with CMP_SCALE_F_JNC_STOP and CMP_START_F_JNC_STOP. This configurable
! function supports 4 datasets; if indices shown below are not used, e.g., (1,2), the
! current values of the indices IAXLE and ISIDE are used to identify the dataset when
! reading data.

! 1D table: col 1 = suspension travel at jounce stop (mm), col 2 = force (N)
F_JNC_STOP_TABLE(1,1) LINEAR ! axle 1, left side
 68, 0
 69, 0
 70, 10000
ENDTABLE
F_JNC_STOP_GAIN(1,1) 1 ! Gain multiplied with calculated value to get force
F_JNC_STOP_OFFSET(1,1) 0 ; N ! Offset added (after gain) to get force
CMP_START_F_JNC_STOP(1,1) 0 ; mm ! Offset subtracted from suspension travel at
                            ! jounce stop
CMP_SCALE_F_JNC_STOP(1,1) 1 ! Scale factor divided into (suspension travel at jounce
                            ! stop - CMP_START_F_JNC_STOP)

! 1D table: col 1 = suspension travel at jounce stop (mm), col 2 = force (N)
F_JNC_STOP_TABLE(1,2) LINEAR ! axle 1, right side
 68, 0
 69, 0
 70, 10000
ENDTABLE
F_JNC_STOP_GAIN(1,2) 1 ! Gain multiplied with calculated value to get force
F_JNC_STOP_OFFSET(1,2) 0 ; N ! Offset added (after gain) to get force
CMP_START_F_JNC_STOP(1,2) 0 ; mm ! Offset subtracted from suspension travel at
                            ! jounce stop
CMP_SCALE_F_JNC_STOP(1,2) 1 ! Scale factor divided into (suspension travel at jounce
                            ! stop - CMP_START_F_JNC_STOP)

! 1D table: col 1 = suspension travel at jounce stop (mm), col 2 = force (N)
F_JNC_STOP_TABLE(2,1) LINEAR ! axle 2, left side
 118, 0
 119, 0
 120, 10000
ENDTABLE
F_JNC_STOP_GAIN(2,1) 1 ! Gain multiplied with calculated value to get force
F_JNC_STOP_OFFSET(2,1) 0 ; N ! Offset added (after gain) to get force
CMP_START_F_JNC_STOP(2,1) 0 ; mm ! Offset subtracted from suspension travel at
                            ! jounce stop
CMP_SCALE_F_JNC_STOP(2,1) 1 ! Scale factor divided into (suspension travel at jounce
                            ! stop - CMP_START_F_JNC_STOP)

! 1D table: col 1 = suspension travel at jounce stop (mm), col 2 = force (N)
F_JNC_STOP_TABLE(2,2) LINEAR ! axle 2, right side
 118, 0
 119, 0
 120, 10000
ENDTABLE
F_JNC_STOP_GAIN(2,2) 1 ! Gain multiplied with calculated value to get force
F_JNC_STOP_OFFSET(2,2) 0 ; N ! Offset added (after gain) to get force
CMP_START_F_JNC_STOP(2,2) 0 ; mm ! Offset subtracted from suspension travel at
                            ! jounce stop
CMP_SCALE_F_JNC_STOP(2,2) 1 ! Scale factor divided into (suspension travel at jounce
                            ! stop - CMP_START_F_JNC_STOP)

! F_REB_STOP: Rebound stop force. Force is a function of suspension travel at
! rebound stop (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation
! can be defined at runtime. Force from the calculation can be adjusted with
! F_REB_STOP_GAIN and F_REB_STOP_OFFSET. Suspension travel at rebound stop used in
! the calculation can be adjusted with CMP_SCALE_F_REB_STOP and CMP_START_F_REB_STOP.
! This configurable function supports 4 datasets; if indices shown below are not
! used, e.g., (1,2), the current values of the indices IAXLE and ISIDE are used to
! identify the dataset when reading data.

! 1D table: col 1 = suspension travel at rebound stop (mm), col 2 = force (N)
F_REB_STOP_TABLE(1,1) LINEAR ! axle 1, left side
 -50, -10000
 -49, 0
 -48, 0
ENDTABLE
F_REB_STOP_GAIN(1,1) 1 ! Gain multiplied with calculated value to get force
F_REB_STOP_OFFSET(1,1) 0 ; N ! Offset added (after gain) to get force
CMP_START_F_REB_STOP(1,1) 0 ; mm ! Offset subtracted from suspension travel at
                            ! rebound stop
CMP_SCALE_F_REB_STOP(1,1) 1 ! Scale factor divided into (suspension travel at
                            ! rebound stop - CMP_START_F_REB_STOP)

! 1D table: col 1 = suspension travel at rebound stop (mm), col 2 = force (N)
F_REB_STOP_TABLE(1,2) LINEAR ! axle 1, right side
 -50, -10000
 -49, 0
 -48, 0
ENDTABLE
F_REB_STOP_GAIN(1,2) 1 ! Gain multiplied with calculated value to get force
F_REB_STOP_OFFSET(1,2) 0 ; N ! Offset added (after gain) to get force
CMP_START_F_REB_STOP(1,2) 0 ; mm ! Offset subtracted from suspension travel at
                            ! rebound stop
CMP_SCALE_F_REB_STOP(1,2) 1 ! Scale factor divided into (suspension travel at
                            ! rebound stop - CMP_START_F_REB_STOP)

! 1D table: col 1 = suspension travel at rebound stop (mm), col 2 = force (N)
F_REB_STOP_TABLE(2,1) LINEAR ! axle 2, left side
 -60, -10000
 -59, 0
 -58, 0
ENDTABLE
F_REB_STOP_GAIN(2,1) 1 ! Gain multiplied with calculated value to get force
F_REB_STOP_OFFSET(2,1) 0 ; N ! Offset added (after gain) to get force
CMP_START_F_REB_STOP(2,1) 0 ; mm ! Offset subtracted from suspension travel at
                            ! rebound stop
CMP_SCALE_F_REB_STOP(2,1) 1 ! Scale factor divided into (suspension travel at
                            ! rebound stop - CMP_START_F_REB_STOP)

! 1D table: col 1 = suspension travel at rebound stop (mm), col 2 = force (N)
F_REB_STOP_TABLE(2,2) LINEAR ! axle 2, right side
 -60, -10000
 -59, 0
 -58, 0
ENDTABLE
F_REB_STOP_GAIN(2,2) 1 ! Gain multiplied with calculated value to get force
F_REB_STOP_OFFSET(2,2) 0 ; N ! Offset added (after gain) to get force
CMP_START_F_REB_STOP(2,2) 0 ; mm ! Offset subtracted from suspension travel at
                            ! rebound stop
CMP_SCALE_F_REB_STOP(2,2) 1 ! Scale factor divided into (suspension travel at
                            ! rebound stop - CMP_START_F_REB_STOP)

! GEAR_TRANS: Transmission gear in open-loop control (when MODE_TRANS = 1). 1
! through 18 are choices for forward gears, -1 -> reverse, 0 -> neutral. Gear is a
! function of time (CONSTANT or TABLE). Alternatively, a custom equation can be
! defined at runtime. Gear from the calculation can be adjusted with GEAR_TRANS_GAIN
! and GEAR_TRANS_OFFSET. Time used in the calculation can be adjusted with
! TSCALE_GEAR and TSTART_GEAR.

GEAR_TRANS_CONSTANT 1 ; - ! [D] Constant gear
GEAR_TRANS_GAIN     1 ! Gain multiplied with calculated value to get gear
GEAR_TRANS_OFFSET   0 ; - ! Offset added (after gain) to get gear

! INV_CAP_TC: Inverse of torque converter capacity vs. speed ratio of torque
! converter output shaft to engine. 1/K (K = torque converter capacity) is a function
! of speed ratio (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation
! can be defined at runtime. 1/K (K = torque converter capacity) from the calculation
! can be adjusted with INV_CAP_TC_GAIN and INV_CAP_TC_OFFSET. Speed ratio used in the
! calculation can be adjusted with RSPIN_SCALE_INV_CAP_TC and RSPIN_START_INV_CAP_TC.

! 1D table: col 1 = speed ratio (-), col 2 = 1/K (K = torque converter capacity) (Kinv)
INV_CAP_TC_TABLE SPLINE_FLAT ! spline interpolation, flat-line extrapolation
 0, 0.00819756
 0.1, 0.0081164
 0.2, 0.00803682
 0.3, 0.00795875
 0.4, 0.00788144
 0.5, 0.00779958
 0.6, 0.00768679
 0.7, 0.00744486
 0.8, 0.00677533
 0.9, 0.00489839
 0.95, 0.003004
 0.99, 0.000713225
 1, 0
 1.01, -0.000713225
 1.05, -0.003004
 1.1, -0.00489839
 1.2, -0.00677533
 1.3, -0.00744486
 1.4, -0.00768679
 1.5, -0.00779958
 1.6, -0.00788144
 1.7, -0.00795875
 1.8, -0.00803682
 1.9, -0.00819756
 2, -0.00819756
ENDTABLE
INV_CAP_TC_GAIN     1 ! Gain multiplied with calculated value to get 1/K (K = torque
                      ! converter capacity)
INV_CAP_TC_OFFSET   0 ; Kinv ! Offset added (after gain) to get 1/K (K = torque
                      ! converter capacity)
RSPIN_START_INV_CAP_TC 0 ; - ! Offset subtracted from speed ratio
RSPIN_SCALE_INV_CAP_TC 1 ! Scale factor divided into (speed ratio -
                         ! RSPIN_START_INV_CAP_TC)

! ISHAFT_KIN: Intermediate shaft kinematics. Shaft output angle is a function of
! intermediate shaft input angle (CONSTANT, COEFFICIENT, or TABLE). Shaft output
! angle from the calculation can be adjusted with ISHAFT_KIN_GAIN and
! ISHAFT_KIN_OFFSET. An inverse version of this function is used internally. The
! derivative of this function is used internally.

ISHAFT_KIN_COEFFICIENT 1 ! [D] Coefficient: Shaft output angle per unit intermediate
                         ! shaft input angle (deg/deg)
ISHAFT_KIN_GAIN     1 ! Gain multiplied with calculated value to get Shaft output
                      ! angle
ISHAFT_KIN_OFFSET   0 ; deg ! Offset added (after gain) to get Shaft output angle

! KGAMMA: Tire inclination stiffness. DFy/dGamma is a function of dynamic tire load
! (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation can be defined
! at runtime. DFy/dGamma from the calculation can be adjusted with KGAMMA_GAIN and
! KGAMMA_OFFSET. Dynamic tire load used in the calculation can be adjusted with
! FZ_SCALE_KGAMMA. This configurable function supports 4 datasets; if indices shown
! below are not used, e.g., (1,2), the current values of the indices IAXLE and ISIDE
! are used to identify the dataset when reading data.

! 1D table: col 1 = dynamic tire load (N), col 2 = dFy/dGamma (N/deg)
KGAMMA_TABLE(1,1) SPLINE ! axle 1, left side
 0, 0
 784.532, -5.3499
 1569.064, -11.1711
 2353.596, -17.1934
 3138.128, -23.3524
 3922.66, -29.616
 4707.192, -35.965
 5491.724, -42.3862
 6276.256, -48.8703
 7060.788, -55.4101
 7845.32, -62
 8629.852, -68.6354
 9414.384, -75.3126
 10198.916, -82.0284
 10983.448, -88.7802
 11767.98, -95.5655
 12552.512, -102.3825
 13337.044, -109.2292
 14121.576, -116.1042
 14906.108, -123.006
 15690.64, -129.9333
ENDTABLE
KGAMMA_GAIN(1,1)    1 ! Gain multiplied with calculated value to get dFy/dGamma
KGAMMA_OFFSET(1,1)  0 ; N/deg ! Offset added (after gain) to get dFy/dGamma
FZ_SCALE_KGAMMA(1,1) 1 ! Scale factor divided into dynamic tire load

! 1D table: col 1 = dynamic tire load (N), col 2 = dFy/dGamma (N/deg)
KGAMMA_TABLE(1,2) SPLINE ! axle 1, right side
 0, 0
 784.532, -5.3499
 1569.064, -11.1711
 2353.596, -17.1934
 3138.128, -23.3524
 3922.66, -29.616
 4707.192, -35.965
 5491.724, -42.3862
 6276.256, -48.8703
 7060.788, -55.4101
 7845.32, -62
 8629.852, -68.6354
 9414.384, -75.3126
 10198.916, -82.0284
 10983.448, -88.7802
 11767.98, -95.5655
 12552.512, -102.3825
 13337.044, -109.2292
 14121.576, -116.1042
 14906.108, -123.006
 15690.64, -129.9333
ENDTABLE
KGAMMA_GAIN(1,2)    1 ! Gain multiplied with calculated value to get dFy/dGamma
KGAMMA_OFFSET(1,2)  0 ; N/deg ! Offset added (after gain) to get dFy/dGamma
FZ_SCALE_KGAMMA(1,2) 1 ! Scale factor divided into dynamic tire load

! 1D table: col 1 = dynamic tire load (N), col 2 = dFy/dGamma (N/deg)
KGAMMA_TABLE(2,1) SPLINE ! axle 2, left side
 0, 0
 784.532, -5.3499
 1569.064, -11.1711
 2353.596, -17.1934
 3138.128, -23.3524
 3922.66, -29.616
 4707.192, -35.965
 5491.724, -42.3862
 6276.256, -48.8703
 7060.788, -55.4101
 7845.32, -62
 8629.852, -68.6354
 9414.384, -75.3126
 10198.916, -82.0284
 10983.448, -88.7802
 11767.98, -95.5655
 12552.512, -102.3825
 13337.044, -109.2292
 14121.576, -116.1042
 14906.108, -123.006
 15690.64, -129.9333
ENDTABLE
KGAMMA_GAIN(2,1)    1 ! Gain multiplied with calculated value to get dFy/dGamma
KGAMMA_OFFSET(2,1)  0 ; N/deg ! Offset added (after gain) to get dFy/dGamma
FZ_SCALE_KGAMMA(2,1) 1 ! Scale factor divided into dynamic tire load

! 1D table: col 1 = dynamic tire load (N), col 2 = dFy/dGamma (N/deg)
KGAMMA_TABLE(2,2) SPLINE ! axle 2, right side
 0, 0
 784.532, -5.3499
 1569.064, -11.1711
 2353.596, -17.1934
 3138.128, -23.3524
 3922.66, -29.616
 4707.192, -35.965
 5491.724, -42.3862
 6276.256, -48.8703
 7060.788, -55.4101
 7845.32, -62
 8629.852, -68.6354
 9414.384, -75.3126
 10198.916, -82.0284
 10983.448, -88.7802
 11767.98, -95.5655
 12552.512, -102.3825
 13337.044, -109.2292
 14121.576, -116.1042
 14906.108, -123.006
 15690.64, -129.9333
ENDTABLE
KGAMMA_GAIN(2,2)    1 ! Gain multiplied with calculated value to get dFy/dGamma
KGAMMA_OFFSET(2,2)  0 ; N/deg ! Offset added (after gain) to get dFy/dGamma
FZ_SCALE_KGAMMA(2,2) 1 ! Scale factor divided into dynamic tire load

! LTARG: Target lateral offset (+ -> left, - -> right). This offset is combined with
! a reference path to produce a modified path for steering control, moving objects,
! lane definition, etc. Lateral offset is a function of station (CONSTANT,
! COEFFICIENT, or TABLE). Lateral offset from the calculation can be adjusted with
! LTARG_GAIN and LTARG_OFFSET. Station used in the calculation can be adjusted with
! SSCALE_LTARG and SSTART_LTARG. The derivative of this function is used internally.
! This configurable function supports 500 datasets; if indices shown below are not
! used, e.g., (2), the current value of the index ILTARG is used to identify the
! dataset when reading data.

LTARG_ID(1)         1  ! 0.4 sec. Single Preview
LTARG_CONSTANT(1)   0 ; m ! Constant lateral offset
LTARG_OFFSET(1)     0 ; m ! Offset added (after gain) to get lateral offset

! L_CONTACT_X: Tire/ground contact length. Tire contact length is a function of tire
! compression (CONSTANT or TABLE). Alternatively, a custom equation can be defined at
! runtime. Tire contact length from the calculation can be adjusted with
! L_CONTACT_X_GAIN and L_CONTACT_X_OFFSET. Tire compression used in the calculation
! can be adjusted with CMP_SCALE_L_CONTACT_X. This configurable function supports 4
! datasets; if indices shown below are not used, e.g., (1,2), the current values of
! the indices IAXLE and ISIDE are used to identify the dataset when reading data.

L_CONTACT_X_CONSTANT(1,1) 85 ; mm ! Constant tire contact length, axle 1, left side
L_CONTACT_X_GAIN(1,1) 1 ! Gain multiplied with calculated value to get tire contact
                        ! length
L_CONTACT_X_OFFSET(1,1) 0 ; mm ! Offset added (after gain) to get tire contact
                          ! length

L_CONTACT_X_CONSTANT(1,2) 85 ; mm ! Constant tire contact length, axle 1, right side
L_CONTACT_X_GAIN(1,2) 1 ! Gain multiplied with calculated value to get tire contact
                        ! length
L_CONTACT_X_OFFSET(1,2) 0 ; mm ! Offset added (after gain) to get tire contact
                          ! length

L_CONTACT_X_CONSTANT(2,1) 85 ; mm ! Constant tire contact length, axle 2, left side
L_CONTACT_X_GAIN(2,1) 1 ! Gain multiplied with calculated value to get tire contact
                        ! length
L_CONTACT_X_OFFSET(2,1) 0 ; mm ! Offset added (after gain) to get tire contact
                          ! length

L_CONTACT_X_CONSTANT(2,2) 85 ; mm ! Constant tire contact length, axle 2, right side
L_CONTACT_X_GAIN(2,2) 1 ! Gain multiplied with calculated value to get tire contact
                        ! length
L_CONTACT_X_OFFSET(2,2) 0 ; mm ! Offset added (after gain) to get tire contact
                          ! length

! L_CONTACT_Y: Tire/ground contact width. Tire contact width is a function of tire
! compression (CONSTANT or TABLE). Alternatively, a custom equation can be defined at
! runtime. Tire contact width from the calculation can be adjusted with
! L_CONTACT_Y_GAIN and L_CONTACT_Y_OFFSET. Tire compression used in the calculation
! can be adjusted with CMP_SCALE_L_CONTACT_Y. This configurable function supports 4
! datasets; if indices shown below are not used, e.g., (1,2), the current values of
! the indices IAXLE and ISIDE are used to identify the dataset when reading data.

L_CONTACT_Y_CONSTANT(1,1) 265 ; mm ! Constant tire contact width, axle 1, left side
L_CONTACT_Y_GAIN(1,1) 1 ! Gain multiplied with calculated value to get tire contact
                        ! width
L_CONTACT_Y_OFFSET(1,1) 0 ; mm ! Offset added (after gain) to get tire contact width

L_CONTACT_Y_CONSTANT(1,2) 265 ; mm ! Constant tire contact width, axle 1, right side
L_CONTACT_Y_GAIN(1,2) 1 ! Gain multiplied with calculated value to get tire contact
                        ! width
L_CONTACT_Y_OFFSET(1,2) 0 ; mm ! Offset added (after gain) to get tire contact width

L_CONTACT_Y_CONSTANT(2,1) 265 ; mm ! Constant tire contact width, axle 2, left side
L_CONTACT_Y_GAIN(2,1) 1 ! Gain multiplied with calculated value to get tire contact
                        ! width
L_CONTACT_Y_OFFSET(2,1) 0 ; mm ! Offset added (after gain) to get tire contact width

L_CONTACT_Y_CONSTANT(2,2) 265 ; mm ! Constant tire contact width, axle 2, right side
L_CONTACT_Y_GAIN(2,2) 1 ! Gain multiplied with calculated value to get tire contact
                        ! width
L_CONTACT_Y_OFFSET(2,2) 0 ; mm ! Offset added (after gain) to get tire contact width

! L_RELAX_X: Tire longitudinal relaxation length as a function of vertical load (Fz)
! and lagged slip ratio (Kappa). L_Relax_X can be a nonlinear CARPET function of Fz
! and Lagged Kappa or a function of Lagged Kappa (CONSTANT or TABLE) combined with a
! function L_RELAX_X_FZ of Fz (CONSTANT or TABLE). Alternatively, a custom equation
! can be defined at runtime. L_Relax_X from the calculation can be adjusted with
! L_RELAX_X_GAIN and L_RELAX_X_OFFSET. Lagged Kappa used in the calculation can be
! adjusted with LAGGED_KAPPA_SCALE_L_RELAX_X. Fz used in the calculation can be
! adjusted with FZ_SCALE_L_RELAX_X. This configurable function supports 4 datasets;
! if indices shown below are not used, e.g., (1,2), the current values of the indices
! IAXLE and ISIDE are used to identify the dataset when reading data.
SET_UNITS L_RELAX_X_CARPET(1,1) m ;

! 1D table: col 1 = Lagged Kappa (-), col 2 = L_Relax_X (m)
L_RELAX_X_TABLE(1,1) SPLINE_FLAT ! axle 1, left side
 -0.1, 0.13526
 -0.095, 0.13793
 -0.09, 0.1431
 -0.085, 0.14862
 -0.08, 0.1552
 -0.075, 0.16251
 -0.07, 0.17087
 -0.065, 0.18085
 -0.06, 0.1926
 -0.055, 0.20631
 -0.05, 0.22324
 -0.045, 0.24389
 -0.04, 0.26989
 -0.035, 0.30301
 -0.03, 0.34575
 -0.025, 0.40397
 -0.02, 0.48251
 -0.015, 0.59275
 -0.01, 0.7393
 -0.005, 0.90707
 0, 1
 0.005, 0.90707
 0.01, 0.7393
 0.015, 0.59275
 0.02, 0.48251
 0.025, 0.40397
 0.03, 0.34575
 0.035, 0.30301
 0.04, 0.26989
 0.045, 0.24389
 0.05, 0.22324
 0.055, 0.20631
 0.06, 0.1926
 0.065, 0.18085
 0.07, 0.17087
 0.075, 0.16251
 0.08, 0.1552
 0.085, 0.14862
 0.09, 0.1431
 0.095, 0.13793
 0.1, 0.13526
ENDTABLE
L_RELAX_X_GAIN(1,1) 0.0786 ! Gain multiplied with calculated value to get L_Relax_X
L_RELAX_X_OFFSET(1,1) 0 ; m ! Offset added (after gain) to get L_Relax_X
LAGGED_KAPPA_SCALE_L_RELAX_X(1,1) 1 ! Scale factor divided into Lagged Kappa
L_RELAX_X_COMBINE(1,1) MULTIPLY ! How to combine the two components

! 1D table: col 1 = Fz (N), col 2 = L_Relax_X component due to Fz (-)
L_RELAX_X_FZ_TABLE(1,1) LINEAR ! axle 1, left side
 0, 0.2
 1, 1
ENDTABLE
FZ_SCALE_L_RELAX_X(1,1) 11500 ! Scale factor divided into Fz
SET_UNITS L_RELAX_X_CARPET(1,2) m ;

! 1D table: col 1 = Lagged Kappa (-), col 2 = L_Relax_X (m)
L_RELAX_X_TABLE(1,2) SPLINE_FLAT ! axle 1, right side
 -0.1, 0.13526
 -0.095, 0.13793
 -0.09, 0.1431
 -0.085, 0.14862
 -0.08, 0.1552
 -0.075, 0.16251
 -0.07, 0.17087
 -0.065, 0.18085
 -0.06, 0.1926
 -0.055, 0.20631
 -0.05, 0.22324
 -0.045, 0.24389
 -0.04, 0.26989
 -0.035, 0.30301
 -0.03, 0.34575
 -0.025, 0.40397
 -0.02, 0.48251
 -0.015, 0.59275
 -0.01, 0.7393
 -0.005, 0.90707
 0, 1
 0.005, 0.90707
 0.01, 0.7393
 0.015, 0.59275
 0.02, 0.48251
 0.025, 0.40397
 0.03, 0.34575
 0.035, 0.30301
 0.04, 0.26989
 0.045, 0.24389
 0.05, 0.22324
 0.055, 0.20631
 0.06, 0.1926
 0.065, 0.18085
 0.07, 0.17087
 0.075, 0.16251
 0.08, 0.1552
 0.085, 0.14862
 0.09, 0.1431
 0.095, 0.13793
 0.1, 0.13526
ENDTABLE
L_RELAX_X_GAIN(1,2) 0.0786 ! Gain multiplied with calculated value to get L_Relax_X
L_RELAX_X_OFFSET(1,2) 0 ; m ! Offset added (after gain) to get L_Relax_X
LAGGED_KAPPA_SCALE_L_RELAX_X(1,2) 1 ! Scale factor divided into Lagged Kappa
L_RELAX_X_COMBINE(1,2) MULTIPLY ! How to combine the two components

! 1D table: col 1 = Fz (N), col 2 = L_Relax_X component due to Fz (-)
L_RELAX_X_FZ_TABLE(1,2) LINEAR ! axle 1, right side
 0, 0.2
 1, 1
ENDTABLE
FZ_SCALE_L_RELAX_X(1,2) 11500 ! Scale factor divided into Fz
SET_UNITS L_RELAX_X_CARPET(2,1) m ;

! 1D table: col 1 = Lagged Kappa (-), col 2 = L_Relax_X (m)
L_RELAX_X_TABLE(2,1) SPLINE_FLAT ! axle 2, left side
 -0.1, 0.13526
 -0.095, 0.13793
 -0.09, 0.1431
 -0.085, 0.14862
 -0.08, 0.1552
 -0.075, 0.16251
 -0.07, 0.17087
 -0.065, 0.18085
 -0.06, 0.1926
 -0.055, 0.20631
 -0.05, 0.22324
 -0.045, 0.24389
 -0.04, 0.26989
 -0.035, 0.30301
 -0.03, 0.34575
 -0.025, 0.40397
 -0.02, 0.48251
 -0.015, 0.59275
 -0.01, 0.7393
 -0.005, 0.90707
 0, 1
 0.005, 0.90707
 0.01, 0.7393
 0.015, 0.59275
 0.02, 0.48251
 0.025, 0.40397
 0.03, 0.34575
 0.035, 0.30301
 0.04, 0.26989
 0.045, 0.24389
 0.05, 0.22324
 0.055, 0.20631
 0.06, 0.1926
 0.065, 0.18085
 0.07, 0.17087
 0.075, 0.16251
 0.08, 0.1552
 0.085, 0.14862
 0.09, 0.1431
 0.095, 0.13793
 0.1, 0.13526
ENDTABLE
L_RELAX_X_GAIN(2,1) 0.0786 ! Gain multiplied with calculated value to get L_Relax_X
L_RELAX_X_OFFSET(2,1) 0 ; m ! Offset added (after gain) to get L_Relax_X
LAGGED_KAPPA_SCALE_L_RELAX_X(2,1) 1 ! Scale factor divided into Lagged Kappa
L_RELAX_X_COMBINE(2,1) MULTIPLY ! How to combine the two components

! 1D table: col 1 = Fz (N), col 2 = L_Relax_X component due to Fz (-)
L_RELAX_X_FZ_TABLE(2,1) LINEAR ! axle 2, left side
 0, 0.2
 1, 1
ENDTABLE
FZ_SCALE_L_RELAX_X(2,1) 11500 ! Scale factor divided into Fz
SET_UNITS L_RELAX_X_CARPET(2,2) m ;

! 1D table: col 1 = Lagged Kappa (-), col 2 = L_Relax_X (m)
L_RELAX_X_TABLE(2,2) SPLINE_FLAT ! axle 2, right side
 -0.1, 0.13526
 -0.095, 0.13793
 -0.09, 0.1431
 -0.085, 0.14862
 -0.08, 0.1552
 -0.075, 0.16251
 -0.07, 0.17087
 -0.065, 0.18085
 -0.06, 0.1926
 -0.055, 0.20631
 -0.05, 0.22324
 -0.045, 0.24389
 -0.04, 0.26989
 -0.035, 0.30301
 -0.03, 0.34575
 -0.025, 0.40397
 -0.02, 0.48251
 -0.015, 0.59275
 -0.01, 0.7393
 -0.005, 0.90707
 0, 1
 0.005, 0.90707
 0.01, 0.7393
 0.015, 0.59275
 0.02, 0.48251
 0.025, 0.40397
 0.03, 0.34575
 0.035, 0.30301
 0.04, 0.26989
 0.045, 0.24389
 0.05, 0.22324
 0.055, 0.20631
 0.06, 0.1926
 0.065, 0.18085
 0.07, 0.17087
 0.075, 0.16251
 0.08, 0.1552
 0.085, 0.14862
 0.09, 0.1431
 0.095, 0.13793
 0.1, 0.13526
ENDTABLE
L_RELAX_X_GAIN(2,2) 0.0786 ! Gain multiplied with calculated value to get L_Relax_X
L_RELAX_X_OFFSET(2,2) 0 ; m ! Offset added (after gain) to get L_Relax_X
LAGGED_KAPPA_SCALE_L_RELAX_X(2,2) 1 ! Scale factor divided into Lagged Kappa
L_RELAX_X_COMBINE(2,2) MULTIPLY ! How to combine the two components

! 1D table: col 1 = Fz (N), col 2 = L_Relax_X component due to Fz (-)
L_RELAX_X_FZ_TABLE(2,2) LINEAR ! axle 2, right side
 0, 0.2
 1, 1
ENDTABLE
FZ_SCALE_L_RELAX_X(2,2) 11500 ! Scale factor divided into Fz

! L_RELAX_Y: Tire lateral relaxation length as a function of vertical load (Fz) and
! lagged slip angle (Alpha). L_Relax_Y can be a nonlinear CARPET function of Fz and
! Lagged Alpha or a function of Lagged Alpha (CONSTANT or TABLE) combined with a
! function L_RELAX_Y_FZ of Fz (CONSTANT or TABLE). Alternatively, a custom equation
! can be defined at runtime. L_Relax_Y from the calculation can be adjusted with
! L_RELAX_Y_GAIN and L_RELAX_Y_OFFSET. Lagged Alpha used in the calculation can be
! adjusted with LAGGED_ALPHA_SCALE_L_RELAX_Y. Fz used in the calculation can be
! adjusted with FZ_SCALE_L_RELAX_Y. This configurable function supports 4 datasets;
! if indices shown below are not used, e.g., (1,2), the current values of the indices
! IAXLE and ISIDE are used to identify the dataset when reading data.
SET_UNITS L_RELAX_Y_CARPET(1,1) m ;

! 1D table: col 1 = Lagged Alpha (deg), col 2 = L_Relax_Y (m)
L_RELAX_Y_TABLE(1,1) SPLINE_FLAT ! axle 1, left side
 -10, 0.039175
 -9.5, 0.042142
 -9, 0.047886
 -8.5, 0.054018
 -8, 0.061335
 -7.5, 0.069451
 -7, 0.078749
 -6.5, 0.089829
 -6, 0.10289
 -5.5, 0.11812
 -5, 0.13693
 -4.5, 0.15988
 -4, 0.18877
 -3.5, 0.22557
 -3, 0.27305
 -2.5, 0.33775
 -2, 0.42501
 -1.5, 0.5475
 -1, 0.71033
 -0.5, 0.89674
 0, 1
 0.5, 0.89674
 1, 0.71033
 1.5, 0.5475
 2, 0.42501
 2.5, 0.33775
 3, 0.27305
 3.5, 0.22557
 4, 0.18877
 4.5, 0.15988
 5, 0.13693
 5.5, 0.11812
 6, 0.10289
 6.5, 0.089829
 7, 0.078749
 7.5, 0.069451
 8, 0.061335
 8.5, 0.054018
 9, 0.047886
 9.5, 0.042142
 10, 0.039175
ENDTABLE
L_RELAX_Y_GAIN(1,1) 0.786 ! Gain multiplied with calculated value to get L_Relax_Y
L_RELAX_Y_OFFSET(1,1) 0 ; m ! Offset added (after gain) to get L_Relax_Y
LAGGED_ALPHA_SCALE_L_RELAX_Y(1,1) 1 ! Scale factor divided into Lagged Alpha
L_RELAX_Y_COMBINE(1,1) MULTIPLY ! How to combine the two components

! 1D table: col 1 = Fz (N), col 2 = L_Relax_Y component due to Fz (-)
L_RELAX_Y_FZ_TABLE(1,1) SPLINE ! axle 1, left side
 0, 0.1
 1, 1
 2, 1.5805
ENDTABLE
FZ_SCALE_L_RELAX_Y(1,1) 11500 ! Scale factor divided into Fz
SET_UNITS L_RELAX_Y_CARPET(1,2) m ;

! 1D table: col 1 = Lagged Alpha (deg), col 2 = L_Relax_Y (m)
L_RELAX_Y_TABLE(1,2) SPLINE_FLAT ! axle 1, right side
 -10, 0.039175
 -9.5, 0.042142
 -9, 0.047886
 -8.5, 0.054018
 -8, 0.061335
 -7.5, 0.069451
 -7, 0.078749
 -6.5, 0.089829
 -6, 0.10289
 -5.5, 0.11812
 -5, 0.13693
 -4.5, 0.15988
 -4, 0.18877
 -3.5, 0.22557
 -3, 0.27305
 -2.5, 0.33775
 -2, 0.42501
 -1.5, 0.5475
 -1, 0.71033
 -0.5, 0.89674
 0, 1
 0.5, 0.89674
 1, 0.71033
 1.5, 0.5475
 2, 0.42501
 2.5, 0.33775
 3, 0.27305
 3.5, 0.22557
 4, 0.18877
 4.5, 0.15988
 5, 0.13693
 5.5, 0.11812
 6, 0.10289
 6.5, 0.089829
 7, 0.078749
 7.5, 0.069451
 8, 0.061335
 8.5, 0.054018
 9, 0.047886
 9.5, 0.042142
 10, 0.039175
ENDTABLE
L_RELAX_Y_GAIN(1,2) 0.786 ! Gain multiplied with calculated value to get L_Relax_Y
L_RELAX_Y_OFFSET(1,2) 0 ; m ! Offset added (after gain) to get L_Relax_Y
LAGGED_ALPHA_SCALE_L_RELAX_Y(1,2) 1 ! Scale factor divided into Lagged Alpha
L_RELAX_Y_COMBINE(1,2) MULTIPLY ! How to combine the two components

! 1D table: col 1 = Fz (N), col 2 = L_Relax_Y component due to Fz (-)
L_RELAX_Y_FZ_TABLE(1,2) SPLINE ! axle 1, right side
 0, 0.1
 1, 1
 2, 1.5805
ENDTABLE
FZ_SCALE_L_RELAX_Y(1,2) 11500 ! Scale factor divided into Fz
SET_UNITS L_RELAX_Y_CARPET(2,1) m ;

! 1D table: col 1 = Lagged Alpha (deg), col 2 = L_Relax_Y (m)
L_RELAX_Y_TABLE(2,1) SPLINE_FLAT ! axle 2, left side
 -10, 0.039175
 -9.5, 0.042142
 -9, 0.047886
 -8.5, 0.054018
 -8, 0.061335
 -7.5, 0.069451
 -7, 0.078749
 -6.5, 0.089829
 -6, 0.10289
 -5.5, 0.11812
 -5, 0.13693
 -4.5, 0.15988
 -4, 0.18877
 -3.5, 0.22557
 -3, 0.27305
 -2.5, 0.33775
 -2, 0.42501
 -1.5, 0.5475
 -1, 0.71033
 -0.5, 0.89674
 0, 1
 0.5, 0.89674
 1, 0.71033
 1.5, 0.5475
 2, 0.42501
 2.5, 0.33775
 3, 0.27305
 3.5, 0.22557
 4, 0.18877
 4.5, 0.15988
 5, 0.13693
 5.5, 0.11812
 6, 0.10289
 6.5, 0.089829
 7, 0.078749
 7.5, 0.069451
 8, 0.061335
 8.5, 0.054018
 9, 0.047886
 9.5, 0.042142
 10, 0.039175
ENDTABLE
L_RELAX_Y_GAIN(2,1) 0.786 ! Gain multiplied with calculated value to get L_Relax_Y
L_RELAX_Y_OFFSET(2,1) 0 ; m ! Offset added (after gain) to get L_Relax_Y
LAGGED_ALPHA_SCALE_L_RELAX_Y(2,1) 1 ! Scale factor divided into Lagged Alpha
L_RELAX_Y_COMBINE(2,1) MULTIPLY ! How to combine the two components

! 1D table: col 1 = Fz (N), col 2 = L_Relax_Y component due to Fz (-)
L_RELAX_Y_FZ_TABLE(2,1) SPLINE ! axle 2, left side
 0, 0.1
 1, 1
 2, 1.5805
ENDTABLE
FZ_SCALE_L_RELAX_Y(2,1) 11500 ! Scale factor divided into Fz
SET_UNITS L_RELAX_Y_CARPET(2,2) m ;

! 1D table: col 1 = Lagged Alpha (deg), col 2 = L_Relax_Y (m)
L_RELAX_Y_TABLE(2,2) SPLINE_FLAT ! axle 2, right side
 -10, 0.039175
 -9.5, 0.042142
 -9, 0.047886
 -8.5, 0.054018
 -8, 0.061335
 -7.5, 0.069451
 -7, 0.078749
 -6.5, 0.089829
 -6, 0.10289
 -5.5, 0.11812
 -5, 0.13693
 -4.5, 0.15988
 -4, 0.18877
 -3.5, 0.22557
 -3, 0.27305
 -2.5, 0.33775
 -2, 0.42501
 -1.5, 0.5475
 -1, 0.71033
 -0.5, 0.89674
 0, 1
 0.5, 0.89674
 1, 0.71033
 1.5, 0.5475
 2, 0.42501
 2.5, 0.33775
 3, 0.27305
 3.5, 0.22557
 4, 0.18877
 4.5, 0.15988
 5, 0.13693
 5.5, 0.11812
 6, 0.10289
 6.5, 0.089829
 7, 0.078749
 7.5, 0.069451
 8, 0.061335
 8.5, 0.054018
 9, 0.047886
 9.5, 0.042142
 10, 0.039175
ENDTABLE
L_RELAX_Y_GAIN(2,2) 0.786 ! Gain multiplied with calculated value to get L_Relax_Y
L_RELAX_Y_OFFSET(2,2) 0 ; m ! Offset added (after gain) to get L_Relax_Y
LAGGED_ALPHA_SCALE_L_RELAX_Y(2,2) 1 ! Scale factor divided into Lagged Alpha
L_RELAX_Y_COMBINE(2,2) MULTIPLY ! How to combine the two components

! 1D table: col 1 = Fz (N), col 2 = L_Relax_Y component due to Fz (-)
L_RELAX_Y_FZ_TABLE(2,2) SPLINE ! axle 2, right side
 0, 0.1
 1, 1
 2, 1.5805
ENDTABLE
FZ_SCALE_L_RELAX_Y(2,2) 11500 ! Scale factor divided into Fz

! MENGINE: Engine torque applied to crankshaft. Engine torque can be a nonlinear
! CARPET function of normalized throttle and engine speed or a function of engine
! speed multiplied by a function MENGINE_THROTTLE of normalized throttle (CONSTANT,
! COEFFICIENT, or TABLE). Alternatively, a custom equation can be defined at runtime.
! Engine torque from the calculation can be adjusted with MENGINE_GAIN and
! MENGINE_OFFSET. Engine speed used in the calculation can be adjusted with
! SPIN_SCALE_MENGINE and SPIN_START_MENGINE. Normalized throttle used in the
! calculation can be adjusted with THROTTLE_SCALE_MENGINE and THROTTLE_START_MENGINE.

! 2D table: row 1 has "0" (place holder) followed by 10 values of normalized
! throttle (-). Other rows have engine speed (rpm) followed by 10 values of engine
! torque (N-m).
MENGINE_CARPET 2D_LINEAR
 0, 0, 0.1, 0.15, 0.2, 0.35, 0.5, 0.7, 0.85, 0.95, 1
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
 400, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
 508, 33, 101.48, 135.16, 137.91, 139.47, 140.24, 140.51, 140.57, 140.61, 140.57
 617, 39.6, 123.83, 186.22, 198.86, 200.89, 201.71, 202, 202.03, 202.03, 202.03
 725, 0, 116.94, 196.72, 214.19, 218.83, 220.51, 221.13, 221.18, 221.17, 221.15
 1083, -13.2, 94.17, 231.45, 264.88, 278.15, 282.69, 284.38, 284.54, 284.5, 284.38
 1442, -19.8, 62.82, 223.08, 277.2, 294.86, 302.87, 306.78, 307.69, 308.29, 314.16
 1800, -22.44, 34.32, 198, 282.13, 311.58, 323.05, 329.18, 330.85, 332.08, 340.56
 2158, -26.89, 13.2, 156.87, 271.56, 316.8, 343.2, 347.16, 351.12, 355.08, 363.84
 2517, -33.76, -8.54, 108.4, 242.77, 319.44, 355.99, 365.64, 372.32, 376.2, 382.8
 2875, -40.18, -20.21, 75.21, 204.67, 310.83, 359.87, 380.3, 385.44, 393.36, 399.96
 3233, -45.85, -29.41, 50.22, 163.32, 297.93, 356.4, 382.8, 393.36, 401.28, 409.2
 3592, -51.42, -37.47, 31.31, 128.71, 268.05, 345.84, 384.12, 396, 405.24, 413.16
 3950, -57.02, -44.95, 15.74, 101.9, 232.47, 331.5, 380.16, 394.68, 403.92, 409.2
 4308, -62.94, -52.5, 0.37, 76.6, 200.32, 316.39, 373.56, 386.76, 396, 403.84
 4667, -69.1, -60.01, -13.29, 54.92, 166.75, 293.75, 363, 376.2, 389.4, 396
 5025, -75.65, -67.43, -25.45, 35.99, 136.87, 265.28, 349.8, 363, 376.2, 382.8
 5383, -82.23, -74.99, -36.71, 19.26, 111.36, 235.45, 329.12, 341.88, 359.52, 363.32
 5742, -89.59, -82.89, -47.62, 3.76, 88.26, 204.37, 295.22, 315.36, 324.81, 328.55
 6100, -97.61, -91.21, -58.51, -10.89, 67.17, 174.21, 258.48, 277.23, 286.03, 289.4
 6500, -106.92, -106.92, -106.92, -106.92, -106.92, -106.92, -106.92, -106.92, -106.92, -106.92
 6700, -108.24, -108.24, -108.24, -108.24, -108.24, -108.24, -108.24, -108.24, -108.24, -108.24
ENDTABLE
MENGINE_GAIN        1 ! Gain multiplied with calculated value to get engine torque
MENGINE_OFFSET      0 ; N-m ! Offset added (after gain) to get engine torque
SPIN_START_MENGINE  0 ; rpm ! Offset subtracted from engine speed
SPIN_SCALE_MENGINE  1 ! Scale factor divided into (engine speed -
                      ! SPIN_START_MENGINE)
THROTTLE_START_MENGINE 0 ; - ! Offset subtracted from normalized throttle
THROTTLE_SCALE_MENGINE 1 ! Scale factor divided into (normalized throttle -
                         ! THROTTLE_START_MENGINE)

! MODE_TRANS: Transmission controller mode.  -1 -> reverse, 0 -> neutral, 1 ->
! open-loop (using the function GEAR_TRANS), 2 through 18 -> closed-loop limit
! (maximum gear available). Transmission mode is a function of time (CONSTANT or
! TABLE). Alternatively, a custom equation can be defined at runtime. Transmission
! mode from the calculation can be adjusted with MODE_TRANS_GAIN and
! MODE_TRANS_OFFSET. Time used in the calculation can be adjusted with TSCALE_TRANS
! and TSTART_TRANS.

MODE_TRANS_CONSTANT 6 ; - ! Constant transmission mode
MODE_TRANS_GAIN     1 ! Gain multiplied with calculated value to get transmission
                      ! mode
MODE_TRANS_OFFSET   0 ; - ! Offset added (after gain) to get transmission mode

! MX_AERO_SHAPING: Coefficient CMX for for X component of aerodynamic moment. CMX is
! a function of aerodynamic slip angle (CONSTANT, COEFFICIENT, or TABLE).
! Alternatively, a custom equation can be defined at runtime. CMX from the
! calculation can be adjusted with MX_AERO_SHAPING_GAIN and MX_AERO_SHAPING_OFFSET.
! Aerodynamic slip angle used in the calculation can be adjusted with
! SLIP_SCALE_MX_AERO and SLIP_START_MX_AERO.

! 1D table: col 1 = aerodynamic slip angle (deg), col 2 = CMX (-)
MX_AERO_SHAPING_TABLE SPLINE ! spline interpolation and extrapolation
 -180, 0
 -90, -0.3
 0, 0
 90, 0.3
 180, 0
ENDTABLE
MX_AERO_SHAPING_GAIN 1 ! Gain multiplied with calculated value to get CMX
MX_AERO_SHAPING_OFFSET 0 ; - ! Offset added (after gain) to get CMX
SLIP_START_MX_AERO  0 ; deg ! Offset subtracted from aerodynamic slip angle
SLIP_SCALE_MX_AERO  1 ! Scale factor divided into (aerodynamic slip angle -
                      ! SLIP_START_MX_AERO)

! MX_AERO_SHAPING_2: Coefficient CMX2 for X component of aerodynamic moment. CMX2
! can be a nonlinear CARPET function of ride height and pitch or a function of pitch
! (CONSTANT, COEFFICIENT, or TABLE) combined with a function MX_AERO_SHAPING_Z of
! ride height (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation can
! be defined at runtime. CMX2 from the calculation can be adjusted with
! MX_AERO_SHAPING_2_GAIN and MX_AERO_SHAPING_2_OFFSET. Pitch used in the calculation
! can be adjusted with PITCH_SCALE_MX_AERO and PITCH_START_MX_AERO. Ride height used
! in the calculation can be adjusted with Z_SCALE_MX_AERO and Z_START_MX_AERO.

MX_AERO_SHAPING_2_CONSTANT 1 ; - ! [D] Constant CMX2 component due to pitch
MX_AERO_SHAPING_2_GAIN 1 ! Gain multiplied with calculated value to get CMX2
MX_AERO_SHAPING_2_OFFSET 0 ; - ! Offset added (after gain) to get CMX2
MX_AERO_SHAPING_2_COMBINE MULTIPLY ! How to combine the two components
MX_AERO_SHAPING_Z_CONSTANT 1 ; - ! [D] Constant CMX2 component due to ride height

! MX_AUX: Auxiliary roll moment (exerted on axle). Auxiliary roll moment can be a
! nonlinear CARPET function of static axle load and relative axle roll or a function
! of relative axle roll (CONSTANT, COEFFICIENT, or TABLE) combined with a function
! MX_AUX_FSTATIC of static axle load (CONSTANT, COEFFICIENT, or TABLE).
! Alternatively, a custom equation can be defined at runtime. Auxiliary roll moment
! from the calculation can be adjusted with MX_AUX_GAIN and MX_AUX_OFFSET. Relative
! axle roll used in the calculation can be adjusted with ROLL_SCALE_MX_AUX and
! ROLL_START_MX_AUX. Static axle load used in the calculation can be adjusted with
! FSTATIC_SCALE_MX_AUX and FSTATIC_START_MX_AUX. This configurable function supports
! 2 datasets; if indices shown below are not used, e.g., (2), the current value of
! the index IAXLE is used to identify the dataset when reading data.

MX_AUX_COEFFICIENT(1) 384 ! Coefficient: auxiliary roll moment per unit relative
                          ! axle roll (N-m/deg), axle 1
MX_AUX_GAIN(1)      1 ! Gain multiplied with calculated value to get auxiliary roll
                      ! moment
MX_AUX_OFFSET(1)    0 ; N-m ! Offset added (after gain) to get auxiliary roll moment
ROLL_START_MX_AUX(1) 0 ; deg ! Offset subtracted from relative axle roll
ROLL_SCALE_MX_AUX(1) 1 ! Scale factor divided into (relative axle roll -
                       ! ROLL_START_MX_AUX)
MX_AUX_COMBINE(1) ADD ! How to combine the two components
SET_UNITS MX_AUX_FSTATIC_TABLE(1) N-m ;
MX_AUX_FSTATIC_CONSTANT(1) 0 ; N-m ! Constant auxiliary roll moment component due to
                             ! static axle load, axle 1

MX_AUX_COEFFICIENT(2) 510 ! Coefficient: auxiliary roll moment per unit relative
                          ! axle roll (N-m/deg), axle 2
MX_AUX_GAIN(2)      1 ! Gain multiplied with calculated value to get auxiliary roll
                      ! moment
MX_AUX_OFFSET(2)    0 ; N-m ! Offset added (after gain) to get auxiliary roll moment
ROLL_START_MX_AUX(2) 0 ; deg ! Offset subtracted from relative axle roll
ROLL_SCALE_MX_AUX(2) 1 ! Scale factor divided into (relative axle roll -
                       ! ROLL_START_MX_AUX)
MX_AUX_COMBINE(2) ADD ! How to combine the two components
SET_UNITS MX_AUX_FSTATIC_TABLE(2) N-m ;
MX_AUX_FSTATIC_CONSTANT(2) 0 ; N-m ! Constant auxiliary roll moment component due to
                             ! static axle load, axle 2

! MY_AERO_SHAPING: Coefficient CMY for for Y component of aerodynamic moment. CMY is
! a function of aerodynamic slip angle (CONSTANT, COEFFICIENT, or TABLE).
! Alternatively, a custom equation can be defined at runtime. CMY from the
! calculation can be adjusted with MY_AERO_SHAPING_GAIN and MY_AERO_SHAPING_OFFSET.
! Aerodynamic slip angle used in the calculation can be adjusted with
! SLIP_SCALE_MY_AERO and SLIP_START_MY_AERO.

! 1D table: col 1 = aerodynamic slip angle (deg), col 2 = CMY (-)
MY_AERO_SHAPING_TABLE SPLINE_FLAT ! spline interpolation, flat-line extrapolation
 -180, -0.17
 -160, -0.25
 -90, 0
 -20, 0.17
 0, 0.15
 20, 0.17
 90, 0
 160, -0.25
 180, -0.17
ENDTABLE
MY_AERO_SHAPING_GAIN 1 ! Gain multiplied with calculated value to get CMY
MY_AERO_SHAPING_OFFSET 0 ; - ! Offset added (after gain) to get CMY
SLIP_START_MY_AERO  0 ; deg ! Offset subtracted from aerodynamic slip angle
SLIP_SCALE_MY_AERO  1 ! Scale factor divided into (aerodynamic slip angle -
                      ! SLIP_START_MY_AERO)

! MY_AERO_SHAPING_2: Coefficient CMY2 for Y component of aerodynamic moment. CMY2
! can be a nonlinear CARPET function of ride height and pitch or a function of pitch
! (CONSTANT, COEFFICIENT, or TABLE) combined with a function MY_AERO_SHAPING_Z of
! ride height (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation can
! be defined at runtime. CMY2 from the calculation can be adjusted with
! MY_AERO_SHAPING_2_GAIN and MY_AERO_SHAPING_2_OFFSET. Pitch used in the calculation
! can be adjusted with PITCH_SCALE_MY_AERO and PITCH_START_MY_AERO. Ride height used
! in the calculation can be adjusted with Z_SCALE_MY_AERO and Z_START_MY_AERO.

MY_AERO_SHAPING_2_CONSTANT 1 ; - ! [D] Constant CMY2 component due to pitch
MY_AERO_SHAPING_2_GAIN 1 ! Gain multiplied with calculated value to get CMY2
MY_AERO_SHAPING_2_OFFSET 0 ; - ! Offset added (after gain) to get CMY2
MY_AERO_SHAPING_2_COMBINE MULTIPLY ! How to combine the two components
MY_AERO_SHAPING_Z_CONSTANT 1 ; - ! [D] Constant CMY2 component due to ride height

! MY_BRAKE: Brake torque at wheel. Brake torque is a function of wheel cylinder
! pressure (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation can be
! defined at runtime. Brake torque from the calculation can be adjusted with
! MY_BRAKE_GAIN and MY_BRAKE_OFFSET. Wheel cylinder pressure used in the calculation
! can be adjusted with PBK_SCALE_MY_BRAKE and PBK_START_MY_BRAKE. This configurable
! function supports 4 datasets; if indices shown below are not used, e.g., (1,2), the
! current values of the indices IAXLE and ISIDE are used to identify the dataset when
! reading data.

MY_BRAKE_COEFFICIENT(1,1) 350 ! Coefficient: brake torque per unit wheel cylinder
                              ! pressure (N-m/MPa), axle 1, left side
MY_BRAKE_GAIN(1,1)  1 ! Gain multiplied with calculated value to get brake torque
MY_BRAKE_OFFSET(1,1) 0 ; N-m ! Offset added (after gain) to get brake torque
PBK_START_MY_BRAKE(1,1) 0 ; MPa ! Offset subtracted from wheel cylinder pressure
PBK_SCALE_MY_BRAKE(1,1) 1 ! Scale factor divided into (wheel cylinder pressure -
                          ! PBK_START_MY_BRAKE)

MY_BRAKE_COEFFICIENT(1,2) 350 ! Coefficient: brake torque per unit wheel cylinder
                              ! pressure (N-m/MPa), axle 1, right side
MY_BRAKE_GAIN(1,2)  1 ! Gain multiplied with calculated value to get brake torque
MY_BRAKE_OFFSET(1,2) 0 ; N-m ! Offset added (after gain) to get brake torque
PBK_START_MY_BRAKE(1,2) 0 ; MPa ! Offset subtracted from wheel cylinder pressure
PBK_SCALE_MY_BRAKE(1,2) 1 ! Scale factor divided into (wheel cylinder pressure -
                          ! PBK_START_MY_BRAKE)

MY_BRAKE_COEFFICIENT(2,1) 150 ! Coefficient: brake torque per unit wheel cylinder
                              ! pressure (N-m/MPa), axle 2, left side
MY_BRAKE_GAIN(2,1)  1 ! Gain multiplied with calculated value to get brake torque
MY_BRAKE_OFFSET(2,1) 0 ; N-m ! Offset added (after gain) to get brake torque
PBK_START_MY_BRAKE(2,1) 0 ; MPa ! Offset subtracted from wheel cylinder pressure
PBK_SCALE_MY_BRAKE(2,1) 1 ! Scale factor divided into (wheel cylinder pressure -
                          ! PBK_START_MY_BRAKE)

MY_BRAKE_COEFFICIENT(2,2) 150 ! Coefficient: brake torque per unit wheel cylinder
                              ! pressure (N-m/MPa), axle 2, right side
MY_BRAKE_GAIN(2,2)  1 ! Gain multiplied with calculated value to get brake torque
MY_BRAKE_OFFSET(2,2) 0 ; N-m ! Offset added (after gain) to get brake torque
PBK_START_MY_BRAKE(2,2) 0 ; MPa ! Offset subtracted from wheel cylinder pressure
PBK_SCALE_MY_BRAKE(2,2) 1 ! Scale factor divided into (wheel cylinder pressure -
                          ! PBK_START_MY_BRAKE)

! MZ_AERO_SHAPING: Coefficient CMZ for for Z component of aerodynamic moment. CMZ is
! a function of aerodynamic slip angle (CONSTANT, COEFFICIENT, or TABLE).
! Alternatively, a custom equation can be defined at runtime. CMZ from the
! calculation can be adjusted with MZ_AERO_SHAPING_GAIN and MZ_AERO_SHAPING_OFFSET.
! Aerodynamic slip angle used in the calculation can be adjusted with
! SLIP_SCALE_MZ_AERO and SLIP_START_MZ_AERO.

! 1D table: col 1 = aerodynamic slip angle (deg), col 2 = CMZ (-)
MZ_AERO_SHAPING_TABLE SPLINE_FLAT ! spline interpolation, flat-line extrapolation
 -180, 0
 -135, 0.2
 -75, 0
 -35, -0.2
 0, 0
 35, 0.2
 75, 0
 135, -0.2
 180, 0
ENDTABLE
MZ_AERO_SHAPING_GAIN 1 ! Gain multiplied with calculated value to get CMZ
MZ_AERO_SHAPING_OFFSET 0 ; - ! Offset added (after gain) to get CMZ
SLIP_START_MZ_AERO  0 ; deg ! Offset subtracted from aerodynamic slip angle
SLIP_SCALE_MZ_AERO  1 ! Scale factor divided into (aerodynamic slip angle -
                      ! SLIP_START_MZ_AERO)

! MZ_AERO_SHAPING_2: Coefficient CMZ2 for Z component of aerodynamic moment. CMZ2
! can be a nonlinear CARPET function of ride height and pitch or a function of pitch
! (CONSTANT, COEFFICIENT, or TABLE) combined with a function MZ_AERO_SHAPING_Z of
! ride height (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation can
! be defined at runtime. CMZ2 from the calculation can be adjusted with
! MZ_AERO_SHAPING_2_GAIN and MZ_AERO_SHAPING_2_OFFSET. Pitch used in the calculation
! can be adjusted with PITCH_SCALE_MZ_AERO and PITCH_START_MZ_AERO. Ride height used
! in the calculation can be adjusted with Z_SCALE_MZ_AERO and Z_START_MZ_AERO.

MZ_AERO_SHAPING_2_CONSTANT 1 ; - ! [D] Constant CMZ2 component due to pitch
MZ_AERO_SHAPING_2_GAIN 1 ! Gain multiplied with calculated value to get CMZ2
MZ_AERO_SHAPING_2_OFFSET 0 ; - ! Offset added (after gain) to get CMZ2
MZ_AERO_SHAPING_2_COMBINE MULTIPLY ! How to combine the two components
MZ_AERO_SHAPING_Z_CONSTANT 1 ; - ! [D] Constant CMZ2 component due to ride height

! MZ_PARKING_STEER: Speed-sensitive steering torque for parking and near-zero speed
! conditions. Steering torque at kingpin can be a nonlinear CARPET function of
! vertical load and vehicle speed or a function of vehicle speed (CONSTANT or TABLE)
! combined with a function MZ_PARKING_STEER_FZ of vertical load (CONSTANT,
! COEFFICIENT, or TABLE). Alternatively, a custom equation can be defined at runtime.
! Steering torque at kingpin from the calculation can be adjusted with
! MZ_PARKING_STEER_GAIN and MZ_PARKING_STEER_OFFSET. Vehicle speed used in the
! calculation can be adjusted with VX_SCALE_MZ_PARKING_STEER and
! VX_START_MZ_PARKING_STEER. Vertical load used in the calculation can be adjusted
! with FZ_SCALE_MZ_PARKING_STEER and FZ_START_MZ_PARKING_STEER. This configurable
! function supports 4 datasets; if indices shown below are not used, e.g., (1,2), the
! current values of the indices IAXLE and ISIDE are used to identify the dataset when
! reading data.

! 1D table: col 1 = vehicle speed (km/h), col 2 = steering torque at kingpin (N-m)
MZ_PARKING_STEER_TABLE(1,1) LINEAR_FLAT ! axle 1, left side
 0, 160.05
 2, 0.05
 2.01, 0.05
ENDTABLE
MZ_PARKING_STEER_GAIN(1,1) 1 ! Gain multiplied with calculated value to get steering
                             ! torque at kingpin
MZ_PARKING_STEER_OFFSET(1,1) 0 ; N-m ! Offset added (after gain) to get steering
                               ! torque at kingpin
VX_START_MZ_PARKING_STEER(1,1) 0 ; km/h ! Offset subtracted from vehicle speed
VX_SCALE_MZ_PARKING_STEER(1,1) 1 ! Scale factor divided into (vehicle speed -
                                 ! VX_START_MZ_PARKING_STEER)
MZ_PARKING_STEER_COMBINE(1,1) MULTIPLY ! How to combine the two components
MZ_PARKING_STEER_FZ_CONSTANT(1,1) 1 ; - ! [D] Constant steering torque at kingpin
                                    ! component due to vertical load, axle 1, left
                                    ! side

! 1D table: col 1 = vehicle speed (km/h), col 2 = steering torque at kingpin (N-m)
MZ_PARKING_STEER_TABLE(1,2) LINEAR_FLAT ! axle 1, right side
 0, 160.05
 2, 0.05
 2.01, 0.05
ENDTABLE
MZ_PARKING_STEER_GAIN(1,2) 1 ! Gain multiplied with calculated value to get steering
                             ! torque at kingpin
MZ_PARKING_STEER_OFFSET(1,2) 0 ; N-m ! Offset added (after gain) to get steering
                               ! torque at kingpin
VX_START_MZ_PARKING_STEER(1,2) 0 ; km/h ! Offset subtracted from vehicle speed
VX_SCALE_MZ_PARKING_STEER(1,2) 1 ! Scale factor divided into (vehicle speed -
                                 ! VX_START_MZ_PARKING_STEER)
MZ_PARKING_STEER_COMBINE(1,2) MULTIPLY ! How to combine the two components
MZ_PARKING_STEER_FZ_CONSTANT(1,2) 1 ; - ! [D] Constant steering torque at kingpin
                                    ! component due to vertical load, axle 1, right
                                    ! side

! MZ_TIRE: Tire aligning moment (Mz) as a function of vertical load (Fz) and lateral
! slip (Alpha). Mz can be a nonlinear CARPET function of Fz and Alpha or a function
! of Alpha multiplied by a function MZ_TIRE_FZ of Fz (CONSTANT, COEFFICIENT, or
! TABLE). Mz from the calculation can be adjusted with MZ_TIRE_GAIN and
! MZ_TIRE_OFFSET. Alpha used in the calculation can be adjusted with
! ALPHA_SCALE_MZ_TIRE and ALPHA_START_MZ_TIRE. Fz used in the calculation can be
! adjusted with FZ_SCALE_MZ_TIRE and FZ_START_MZ_TIRE. This configurable function
! supports 4 datasets; if indices shown below are not used, e.g., (1,2), the current
! values of the indices IAXLE and ISIDE are used to identify the dataset when reading
! data.

! 2D table: row 1 has "0" (place holder) followed by 8 values of Fz (N). Other rows
! have Alpha (deg) followed by 8 values of Mz (N-m). With type = 2D_FROM _ZERO, the
! table includes a hidden row 2 of zeros along with a hidden column 1 of zeros.
MZ_TIRE_CARPET(1,1) 2D_FROM_ZERO ! axle 1, left side
 0, 1961.33, 3922.66, 5883.99, 7845.32, 9806.65, 11767.98, 13729.31, 15690.64
 0.5, 11.91, 23.1, 33.46, 42.94, 51.51, 59.16, 65.86, 71.63
 1, 24.18, 46.93, 68.03, 87.36, 104.85, 120.44, 134.1, 145.83
 1.5, 34.42, 67.26, 98.19, 126.98, 153.41, 177.33, 198.58, 217.06
 2, 38.63, 76.55, 113.43, 148.94, 182.72, 214.4, 243.6, 269.96
 2.5, 36.19, 72.89, 110.01, 147.29, 184.41, 220.92, 256.33, 290.06
 3, 30.22, 61.78, 94.81, 129.29, 165.09, 201.98, 239.57, 277.38
 3.5, 23.75, 49.13, 76.42, 105.8, 137.34, 171.07, 206.87, 244.54
 4, 18.12, 37.85, 59.54, 83.44, 109.79, 138.77, 170.52, 205.08
 4.5, 13.59, 28.65, 45.54, 64.54, 85.94, 110, 137, 167.18
 5, 10.03, 21.38, 34.36, 49.26, 66.38, 86.01, 108.47, 134.11
 5.5, 7.25, 15.65, 25.51, 37.08, 50.64, 66.49, 84.97, 106.44
 6, 5.05, 11.11, 18.47, 27.35, 38, 50.72, 65.82, 83.66
 6.5, 3.28, 7.48, 12.82, 19.51, 27.8, 37.92, 50.2, 64.96
 7, 1.86, 4.53, 8.22, 13.13, 19.47, 27.46, 37.38, 49.56
 7.5, 0.68, 2.1, 4.44, 7.88, 12.61, 18.82, 26.78, 36.78
 8, -0.3, 0.08, 1.3, 3.51, 6.89, 11.62, 17.93, 26.09
 8.5, -1.12, -1.62, -1.35, -0.17, 2.07, 5.55, 10.47, 17.08
 9, -1.82, -3.07, -3.6, -3.3, -2.02, 0.39, 4.13, 9.4
 9.5, -2.42, -4.31, -5.54, -5.99, -5.54, -4.04, -1.32, 2.81
 10, -2.94, -5.38, -7.21, -8.32, -8.58, -7.87, -6.03, -2.88
 10.5, -3.39, -6.32, -8.67, -10.34, -11.23, -11.21, -10.14, -7.85
 11, -3.79, -7.15, -9.96, -12.13, -13.56, -14.14, -13.74, -12.2
 11.5, -4.15, -7.88, -11.1, -13.71, -15.62, -16.73, -16.92, -16.05
 12, -4.47, -8.53, -12.11, -15.11, -17.45, -19.04, -19.75, -19.47
 12.5, -4.75, -9.12, -13.02, -16.37, -19.09, -21.1, -22.28, -22.52
 13, -5, -9.64, -13.83, -17.5, -20.56, -22.95, -24.55, -25.26
 13.5, -5.23, -10.12, -14.57, -18.52, -21.89, -24.62, -26.6, -27.73
 14, -5.44, -10.55, -15.24, -19.44, -23.1, -26.13, -28.45, -29.96
 14.5, -5.63, -10.94, -15.85, -20.29, -24.2, -27.51, -30.14, -32
 15, -5.81, -11.3, -16.41, -21.06, -25.2, -28.77, -31.69, -33.85
 15.5, -5.97, -11.63, -16.92, -21.77, -26.13, -29.93, -33.1, -35.55
 16, -6.12, -11.94, -17.39, -22.42, -26.97, -30.99, -34.4, -37.11
 16.5, -6.26, -12.22, -17.82, -23.02, -27.76, -31.97, -35.6, -38.55
 17, -6.38, -12.48, -18.23, -23.58, -28.48, -32.88, -36.7, -39.89
 17.5, -6.5, -12.72, -18.6, -24.1, -29.15, -33.72, -37.73, -41.12
 18, -6.61, -12.95, -18.95, -24.58, -29.78, -34.5, -38.69, -42.27
 18.5, -6.71, -13.16, -19.28, -25.03, -30.36, -35.23, -39.58, -43.33
 19, -6.81, -13.35, -19.58, -25.45, -30.91, -35.91, -40.41, -44.33
 19.5, -6.9, -13.54, -19.87, -25.84, -31.42, -36.55, -41.18, -45.26
 20, -6.98, -13.71, -20.14, -26.21, -31.9, -37.15, -41.91, -46.14
 20.5, -7.06, -13.87, -20.39, -26.56, -32.35, -37.71, -42.6, -46.96
 21, -7.14, -14.03, -20.62, -26.89, -32.77, -38.24, -43.24, -47.73
 21.5, -7.21, -14.17, -20.85, -27.19, -33.17, -38.74, -43.85, -48.46
 22, -7.27, -14.31, -21.06, -27.49, -33.55, -39.21, -44.42, -49.14
 22.5, -7.34, -14.44, -21.26, -27.76, -33.9, -39.65, -44.96, -49.79
 23, -7.4, -14.56, -21.45, -28.02, -34.24, -40.08, -45.48, -50.4
 23.5, -7.45, -14.68, -21.63, -28.27, -34.56, -40.48, -45.96, -50.99
 24, -7.51, -14.79, -21.8, -28.51, -34.87, -40.86, -46.43, -51.54
 24.5, -7.56, -14.9, -21.97, -28.73, -35.16, -41.22, -46.87, -52.06
 25, -7.61, -15, -22.12, -28.94, -35.44, -41.56, -47.28, -52.56
 26, -7.61, -15, -22.12, -28.94, -35.44, -41.56, -47.28, -52.56
ENDTABLE
MZ_TIRE_GAIN(1,1)   1 ! Gain multiplied with calculated value to get Mz
MZ_TIRE_OFFSET(1,1) 0 ; N-m ! Offset added (after gain) to get Mz
ALPHA_START_MZ_TIRE(1,1) 0 ; deg ! Offset subtracted from Alpha
ALPHA_SCALE_MZ_TIRE(1,1) 1 ! Scale factor divided into (Alpha - ALPHA_START_MZ_TIRE)
FZ_START_MZ_TIRE(1,1) 0 ; N ! Offset subtracted from Fz
FZ_SCALE_MZ_TIRE(1,1) 1 ! Scale factor divided into (Fz - FZ_START_MZ_TIRE)

! 2D table: row 1 has "0" (place holder) followed by 8 values of Fz (N). Other rows
! have Alpha (deg) followed by 8 values of Mz (N-m). With type = 2D_FROM _ZERO, the
! table includes a hidden row 2 of zeros along with a hidden column 1 of zeros.
MZ_TIRE_CARPET(1,2) 2D_FROM_ZERO ! axle 1, right side
 0, 1961.33, 3922.66, 5883.99, 7845.32, 9806.65, 11767.98, 13729.31, 15690.64
 0.5, 11.91, 23.1, 33.46, 42.94, 51.51, 59.16, 65.86, 71.63
 1, 24.18, 46.93, 68.03, 87.36, 104.85, 120.44, 134.1, 145.83
 1.5, 34.42, 67.26, 98.19, 126.98, 153.41, 177.33, 198.58, 217.06
 2, 38.63, 76.55, 113.43, 148.94, 182.72, 214.4, 243.6, 269.96
 2.5, 36.19, 72.89, 110.01, 147.29, 184.41, 220.92, 256.33, 290.06
 3, 30.22, 61.78, 94.81, 129.29, 165.09, 201.98, 239.57, 277.38
 3.5, 23.75, 49.13, 76.42, 105.8, 137.34, 171.07, 206.87, 244.54
 4, 18.12, 37.85, 59.54, 83.44, 109.79, 138.77, 170.52, 205.08
 4.5, 13.59, 28.65, 45.54, 64.54, 85.94, 110, 137, 167.18
 5, 10.03, 21.38, 34.36, 49.26, 66.38, 86.01, 108.47, 134.11
 5.5, 7.25, 15.65, 25.51, 37.08, 50.64, 66.49, 84.97, 106.44
 6, 5.05, 11.11, 18.47, 27.35, 38, 50.72, 65.82, 83.66
 6.5, 3.28, 7.48, 12.82, 19.51, 27.8, 37.92, 50.2, 64.96
 7, 1.86, 4.53, 8.22, 13.13, 19.47, 27.46, 37.38, 49.56
 7.5, 0.68, 2.1, 4.44, 7.88, 12.61, 18.82, 26.78, 36.78
 8, -0.3, 0.08, 1.3, 3.51, 6.89, 11.62, 17.93, 26.09
 8.5, -1.12, -1.62, -1.35, -0.17, 2.07, 5.55, 10.47, 17.08
 9, -1.82, -3.07, -3.6, -3.3, -2.02, 0.39, 4.13, 9.4
 9.5, -2.42, -4.31, -5.54, -5.99, -5.54, -4.04, -1.32, 2.81
 10, -2.94, -5.38, -7.21, -8.32, -8.58, -7.87, -6.03, -2.88
 10.5, -3.39, -6.32, -8.67, -10.34, -11.23, -11.21, -10.14, -7.85
 11, -3.79, -7.15, -9.96, -12.13, -13.56, -14.14, -13.74, -12.2
 11.5, -4.15, -7.88, -11.1, -13.71, -15.62, -16.73, -16.92, -16.05
 12, -4.47, -8.53, -12.11, -15.11, -17.45, -19.04, -19.75, -19.47
 12.5, -4.75, -9.12, -13.02, -16.37, -19.09, -21.1, -22.28, -22.52
 13, -5, -9.64, -13.83, -17.5, -20.56, -22.95, -24.55, -25.26
 13.5, -5.23, -10.12, -14.57, -18.52, -21.89, -24.62, -26.6, -27.73
 14, -5.44, -10.55, -15.24, -19.44, -23.1, -26.13, -28.45, -29.96
 14.5, -5.63, -10.94, -15.85, -20.29, -24.2, -27.51, -30.14, -32
 15, -5.81, -11.3, -16.41, -21.06, -25.2, -28.77, -31.69, -33.85
 15.5, -5.97, -11.63, -16.92, -21.77, -26.13, -29.93, -33.1, -35.55
 16, -6.12, -11.94, -17.39, -22.42, -26.97, -30.99, -34.4, -37.11
 16.5, -6.26, -12.22, -17.82, -23.02, -27.76, -31.97, -35.6, -38.55
 17, -6.38, -12.48, -18.23, -23.58, -28.48, -32.88, -36.7, -39.89
 17.5, -6.5, -12.72, -18.6, -24.1, -29.15, -33.72, -37.73, -41.12
 18, -6.61, -12.95, -18.95, -24.58, -29.78, -34.5, -38.69, -42.27
 18.5, -6.71, -13.16, -19.28, -25.03, -30.36, -35.23, -39.58, -43.33
 19, -6.81, -13.35, -19.58, -25.45, -30.91, -35.91, -40.41, -44.33
 19.5, -6.9, -13.54, -19.87, -25.84, -31.42, -36.55, -41.18, -45.26
 20, -6.98, -13.71, -20.14, -26.21, -31.9, -37.15, -41.91, -46.14
 20.5, -7.06, -13.87, -20.39, -26.56, -32.35, -37.71, -42.6, -46.96
 21, -7.14, -14.03, -20.62, -26.89, -32.77, -38.24, -43.24, -47.73
 21.5, -7.21, -14.17, -20.85, -27.19, -33.17, -38.74, -43.85, -48.46
 22, -7.27, -14.31, -21.06, -27.49, -33.55, -39.21, -44.42, -49.14
 22.5, -7.34, -14.44, -21.26, -27.76, -33.9, -39.65, -44.96, -49.79
 23, -7.4, -14.56, -21.45, -28.02, -34.24, -40.08, -45.48, -50.4
 23.5, -7.45, -14.68, -21.63, -28.27, -34.56, -40.48, -45.96, -50.99
 24, -7.51, -14.79, -21.8, -28.51, -34.87, -40.86, -46.43, -51.54
 24.5, -7.56, -14.9, -21.97, -28.73, -35.16, -41.22, -46.87, -52.06
 25, -7.61, -15, -22.12, -28.94, -35.44, -41.56, -47.28, -52.56
 26, -7.61, -15, -22.12, -28.94, -35.44, -41.56, -47.28, -52.56
ENDTABLE
MZ_TIRE_GAIN(1,2)   1 ! Gain multiplied with calculated value to get Mz
MZ_TIRE_OFFSET(1,2) 0 ; N-m ! Offset added (after gain) to get Mz
ALPHA_START_MZ_TIRE(1,2) 0 ; deg ! Offset subtracted from Alpha
ALPHA_SCALE_MZ_TIRE(1,2) 1 ! Scale factor divided into (Alpha - ALPHA_START_MZ_TIRE)
FZ_START_MZ_TIRE(1,2) 0 ; N ! Offset subtracted from Fz
FZ_SCALE_MZ_TIRE(1,2) 1 ! Scale factor divided into (Fz - FZ_START_MZ_TIRE)

! 2D table: row 1 has "0" (place holder) followed by 8 values of Fz (N). Other rows
! have Alpha (deg) followed by 8 values of Mz (N-m). With type = 2D_FROM _ZERO, the
! table includes a hidden row 2 of zeros along with a hidden column 1 of zeros.
MZ_TIRE_CARPET(2,1) 2D_FROM_ZERO ! axle 2, left side
 0, 1961.33, 3922.66, 5883.99, 7845.32, 9806.65, 11767.98, 13729.31, 15690.64
 0.5, 11.91, 23.1, 33.46, 42.94, 51.51, 59.16, 65.86, 71.63
 1, 24.18, 46.93, 68.03, 87.36, 104.85, 120.44, 134.1, 145.83
 1.5, 34.42, 67.26, 98.19, 126.98, 153.41, 177.33, 198.58, 217.06
 2, 38.63, 76.55, 113.43, 148.94, 182.72, 214.4, 243.6, 269.96
 2.5, 36.19, 72.89, 110.01, 147.29, 184.41, 220.92, 256.33, 290.06
 3, 30.22, 61.78, 94.81, 129.29, 165.09, 201.98, 239.57, 277.38
 3.5, 23.75, 49.13, 76.42, 105.8, 137.34, 171.07, 206.87, 244.54
 4, 18.12, 37.85, 59.54, 83.44, 109.79, 138.77, 170.52, 205.08
 4.5, 13.59, 28.65, 45.54, 64.54, 85.94, 110, 137, 167.18
 5, 10.03, 21.38, 34.36, 49.26, 66.38, 86.01, 108.47, 134.11
 5.5, 7.25, 15.65, 25.51, 37.08, 50.64, 66.49, 84.97, 106.44
 6, 5.05, 11.11, 18.47, 27.35, 38, 50.72, 65.82, 83.66
 6.5, 3.28, 7.48, 12.82, 19.51, 27.8, 37.92, 50.2, 64.96
 7, 1.86, 4.53, 8.22, 13.13, 19.47, 27.46, 37.38, 49.56
 7.5, 0.68, 2.1, 4.44, 7.88, 12.61, 18.82, 26.78, 36.78
 8, -0.3, 0.08, 1.3, 3.51, 6.89, 11.62, 17.93, 26.09
 8.5, -1.12, -1.62, -1.35, -0.17, 2.07, 5.55, 10.47, 17.08
 9, -1.82, -3.07, -3.6, -3.3, -2.02, 0.39, 4.13, 9.4
 9.5, -2.42, -4.31, -5.54, -5.99, -5.54, -4.04, -1.32, 2.81
 10, -2.94, -5.38, -7.21, -8.32, -8.58, -7.87, -6.03, -2.88
 10.5, -3.39, -6.32, -8.67, -10.34, -11.23, -11.21, -10.14, -7.85
 11, -3.79, -7.15, -9.96, -12.13, -13.56, -14.14, -13.74, -12.2
 11.5, -4.15, -7.88, -11.1, -13.71, -15.62, -16.73, -16.92, -16.05
 12, -4.47, -8.53, -12.11, -15.11, -17.45, -19.04, -19.75, -19.47
 12.5, -4.75, -9.12, -13.02, -16.37, -19.09, -21.1, -22.28, -22.52
 13, -5, -9.64, -13.83, -17.5, -20.56, -22.95, -24.55, -25.26
 13.5, -5.23, -10.12, -14.57, -18.52, -21.89, -24.62, -26.6, -27.73
 14, -5.44, -10.55, -15.24, -19.44, -23.1, -26.13, -28.45, -29.96
 14.5, -5.63, -10.94, -15.85, -20.29, -24.2, -27.51, -30.14, -32
 15, -5.81, -11.3, -16.41, -21.06, -25.2, -28.77, -31.69, -33.85
 15.5, -5.97, -11.63, -16.92, -21.77, -26.13, -29.93, -33.1, -35.55
 16, -6.12, -11.94, -17.39, -22.42, -26.97, -30.99, -34.4, -37.11
 16.5, -6.26, -12.22, -17.82, -23.02, -27.76, -31.97, -35.6, -38.55
 17, -6.38, -12.48, -18.23, -23.58, -28.48, -32.88, -36.7, -39.89
 17.5, -6.5, -12.72, -18.6, -24.1, -29.15, -33.72, -37.73, -41.12
 18, -6.61, -12.95, -18.95, -24.58, -29.78, -34.5, -38.69, -42.27
 18.5, -6.71, -13.16, -19.28, -25.03, -30.36, -35.23, -39.58, -43.33
 19, -6.81, -13.35, -19.58, -25.45, -30.91, -35.91, -40.41, -44.33
 19.5, -6.9, -13.54, -19.87, -25.84, -31.42, -36.55, -41.18, -45.26
 20, -6.98, -13.71, -20.14, -26.21, -31.9, -37.15, -41.91, -46.14
 20.5, -7.06, -13.87, -20.39, -26.56, -32.35, -37.71, -42.6, -46.96
 21, -7.14, -14.03, -20.62, -26.89, -32.77, -38.24, -43.24, -47.73
 21.5, -7.21, -14.17, -20.85, -27.19, -33.17, -38.74, -43.85, -48.46
 22, -7.27, -14.31, -21.06, -27.49, -33.55, -39.21, -44.42, -49.14
 22.5, -7.34, -14.44, -21.26, -27.76, -33.9, -39.65, -44.96, -49.79
 23, -7.4, -14.56, -21.45, -28.02, -34.24, -40.08, -45.48, -50.4
 23.5, -7.45, -14.68, -21.63, -28.27, -34.56, -40.48, -45.96, -50.99
 24, -7.51, -14.79, -21.8, -28.51, -34.87, -40.86, -46.43, -51.54
 24.5, -7.56, -14.9, -21.97, -28.73, -35.16, -41.22, -46.87, -52.06
 25, -7.61, -15, -22.12, -28.94, -35.44, -41.56, -47.28, -52.56
 26, -7.61, -15, -22.12, -28.94, -35.44, -41.56, -47.28, -52.56
ENDTABLE
MZ_TIRE_GAIN(2,1)   1 ! Gain multiplied with calculated value to get Mz
MZ_TIRE_OFFSET(2,1) 0 ; N-m ! Offset added (after gain) to get Mz
ALPHA_START_MZ_TIRE(2,1) 0 ; deg ! Offset subtracted from Alpha
ALPHA_SCALE_MZ_TIRE(2,1) 1 ! Scale factor divided into (Alpha - ALPHA_START_MZ_TIRE)
FZ_START_MZ_TIRE(2,1) 0 ; N ! Offset subtracted from Fz
FZ_SCALE_MZ_TIRE(2,1) 1 ! Scale factor divided into (Fz - FZ_START_MZ_TIRE)

! 2D table: row 1 has "0" (place holder) followed by 8 values of Fz (N). Other rows
! have Alpha (deg) followed by 8 values of Mz (N-m). With type = 2D_FROM _ZERO, the
! table includes a hidden row 2 of zeros along with a hidden column 1 of zeros.
MZ_TIRE_CARPET(2,2) 2D_FROM_ZERO ! axle 2, right side
 0, 1961.33, 3922.66, 5883.99, 7845.32, 9806.65, 11767.98, 13729.31, 15690.64
 0.5, 11.91, 23.1, 33.46, 42.94, 51.51, 59.16, 65.86, 71.63
 1, 24.18, 46.93, 68.03, 87.36, 104.85, 120.44, 134.1, 145.83
 1.5, 34.42, 67.26, 98.19, 126.98, 153.41, 177.33, 198.58, 217.06
 2, 38.63, 76.55, 113.43, 148.94, 182.72, 214.4, 243.6, 269.96
 2.5, 36.19, 72.89, 110.01, 147.29, 184.41, 220.92, 256.33, 290.06
 3, 30.22, 61.78, 94.81, 129.29, 165.09, 201.98, 239.57, 277.38
 3.5, 23.75, 49.13, 76.42, 105.8, 137.34, 171.07, 206.87, 244.54
 4, 18.12, 37.85, 59.54, 83.44, 109.79, 138.77, 170.52, 205.08
 4.5, 13.59, 28.65, 45.54, 64.54, 85.94, 110, 137, 167.18
 5, 10.03, 21.38, 34.36, 49.26, 66.38, 86.01, 108.47, 134.11
 5.5, 7.25, 15.65, 25.51, 37.08, 50.64, 66.49, 84.97, 106.44
 6, 5.05, 11.11, 18.47, 27.35, 38, 50.72, 65.82, 83.66
 6.5, 3.28, 7.48, 12.82, 19.51, 27.8, 37.92, 50.2, 64.96
 7, 1.86, 4.53, 8.22, 13.13, 19.47, 27.46, 37.38, 49.56
 7.5, 0.68, 2.1, 4.44, 7.88, 12.61, 18.82, 26.78, 36.78
 8, -0.3, 0.08, 1.3, 3.51, 6.89, 11.62, 17.93, 26.09
 8.5, -1.12, -1.62, -1.35, -0.17, 2.07, 5.55, 10.47, 17.08
 9, -1.82, -3.07, -3.6, -3.3, -2.02, 0.39, 4.13, 9.4
 9.5, -2.42, -4.31, -5.54, -5.99, -5.54, -4.04, -1.32, 2.81
 10, -2.94, -5.38, -7.21, -8.32, -8.58, -7.87, -6.03, -2.88
 10.5, -3.39, -6.32, -8.67, -10.34, -11.23, -11.21, -10.14, -7.85
 11, -3.79, -7.15, -9.96, -12.13, -13.56, -14.14, -13.74, -12.2
 11.5, -4.15, -7.88, -11.1, -13.71, -15.62, -16.73, -16.92, -16.05
 12, -4.47, -8.53, -12.11, -15.11, -17.45, -19.04, -19.75, -19.47
 12.5, -4.75, -9.12, -13.02, -16.37, -19.09, -21.1, -22.28, -22.52
 13, -5, -9.64, -13.83, -17.5, -20.56, -22.95, -24.55, -25.26
 13.5, -5.23, -10.12, -14.57, -18.52, -21.89, -24.62, -26.6, -27.73
 14, -5.44, -10.55, -15.24, -19.44, -23.1, -26.13, -28.45, -29.96
 14.5, -5.63, -10.94, -15.85, -20.29, -24.2, -27.51, -30.14, -32
 15, -5.81, -11.3, -16.41, -21.06, -25.2, -28.77, -31.69, -33.85
 15.5, -5.97, -11.63, -16.92, -21.77, -26.13, -29.93, -33.1, -35.55
 16, -6.12, -11.94, -17.39, -22.42, -26.97, -30.99, -34.4, -37.11
 16.5, -6.26, -12.22, -17.82, -23.02, -27.76, -31.97, -35.6, -38.55
 17, -6.38, -12.48, -18.23, -23.58, -28.48, -32.88, -36.7, -39.89
 17.5, -6.5, -12.72, -18.6, -24.1, -29.15, -33.72, -37.73, -41.12
 18, -6.61, -12.95, -18.95, -24.58, -29.78, -34.5, -38.69, -42.27
 18.5, -6.71, -13.16, -19.28, -25.03, -30.36, -35.23, -39.58, -43.33
 19, -6.81, -13.35, -19.58, -25.45, -30.91, -35.91, -40.41, -44.33
 19.5, -6.9, -13.54, -19.87, -25.84, -31.42, -36.55, -41.18, -45.26
 20, -6.98, -13.71, -20.14, -26.21, -31.9, -37.15, -41.91, -46.14
 20.5, -7.06, -13.87, -20.39, -26.56, -32.35, -37.71, -42.6, -46.96
 21, -7.14, -14.03, -20.62, -26.89, -32.77, -38.24, -43.24, -47.73
 21.5, -7.21, -14.17, -20.85, -27.19, -33.17, -38.74, -43.85, -48.46
 22, -7.27, -14.31, -21.06, -27.49, -33.55, -39.21, -44.42, -49.14
 22.5, -7.34, -14.44, -21.26, -27.76, -33.9, -39.65, -44.96, -49.79
 23, -7.4, -14.56, -21.45, -28.02, -34.24, -40.08, -45.48, -50.4
 23.5, -7.45, -14.68, -21.63, -28.27, -34.56, -40.48, -45.96, -50.99
 24, -7.51, -14.79, -21.8, -28.51, -34.87, -40.86, -46.43, -51.54
 24.5, -7.56, -14.9, -21.97, -28.73, -35.16, -41.22, -46.87, -52.06
 25, -7.61, -15, -22.12, -28.94, -35.44, -41.56, -47.28, -52.56
 26, -7.61, -15, -22.12, -28.94, -35.44, -41.56, -47.28, -52.56
ENDTABLE
MZ_TIRE_GAIN(2,2)   1 ! Gain multiplied with calculated value to get Mz
MZ_TIRE_OFFSET(2,2) 0 ; N-m ! Offset added (after gain) to get Mz
ALPHA_START_MZ_TIRE(2,2) 0 ; deg ! Offset subtracted from Alpha
ALPHA_SCALE_MZ_TIRE(2,2) 1 ! Scale factor divided into (Alpha - ALPHA_START_MZ_TIRE)
FZ_START_MZ_TIRE(2,2) 0 ; N ! Offset subtracted from Fz
FZ_SCALE_MZ_TIRE(2,2) 1 ! Scale factor divided into (Fz - FZ_START_MZ_TIRE)

! M_DIFF_VISC: Torque from viscous differential. The speed and torque differences
! are either [left - right] (half-shaft) or [front - rear] (driveshaft). This torque
! difference is a function of speed difference (CONSTANT, COEFFICIENT, or TABLE).
! Alternatively, a custom equation can be defined at runtime. This torque difference
! from the calculation can be adjusted with M_DIFF_VISC_GAIN and M_DIFF_VISC_OFFSET.
! Speed difference used in the calculation can be adjusted with
! DSPIN_SCALE_M_DIFF_VISC and DSPIN_START_M_DIFF_VISC. This configurable function
! supports 3 datasets; if indices shown below are not used, e.g., (2), the current
! value of the index IDIFF is used to identify the dataset when reading data.

! 1D table: col 1 = speed difference (rpm), col 2 = this torque difference (N-m)
M_DIFF_VISC_TABLE(1) SPLINE ! front diff
 -1200, 402.88
 -1080, 382.21
 -960, 360.35
 -840, 337.07
 -720, 312.07
 -600, 284.88
 -540, 270.26
 -480, 254.8
 -420, 238.35
 -360, 220.67
 -300, 201.44
 -240, 180.17
 -180, 156.03
 -120, 127.4
 -60, 90.09
 0, 0
 60, -90.09
 120, -127.4
 180, -156.03
 240, -180.17
 300, -201.44
 360, -220.67
 420, -238.35
 480, -254.8
 540, -270.26
 600, -284.88
 720, -312.07
 840, -337.07
 960, -360.35
 1080, -382.21
 1200, -402.88
ENDTABLE
M_DIFF_VISC_GAIN(1) 1 ! Gain multiplied with calculated value to get this torque
                      ! difference
M_DIFF_VISC_OFFSET(1) 0 ; N-m ! Offset added (after gain) to get this torque
                        ! difference
DSPIN_START_M_DIFF_VISC(1) 0 ; rpm ! Offset subtracted from speed difference
DSPIN_SCALE_M_DIFF_VISC(1) 1 ! Scale factor divided into (speed difference -
                             ! DSPIN_START_M_DIFF_VISC)

! 1D table: col 1 = speed difference (rpm), col 2 = this torque difference (N-m)
M_DIFF_VISC_TABLE(2) SPLINE ! rear diff
 -1200, 402.88
 -1080, 382.21
 -960, 360.35
 -840, 337.07
 -720, 312.07
 -600, 284.88
 -540, 270.26
 -480, 254.8
 -420, 238.35
 -360, 220.67
 -300, 201.44
 -240, 180.17
 -180, 156.03
 -120, 127.4
 -60, 90.09
 0, 0
 60, -90.09
 120, -127.4
 180, -156.03
 240, -180.17
 300, -201.44
 360, -220.67
 420, -238.35
 480, -254.8
 540, -270.26
 600, -284.88
 720, -312.07
 840, -337.07
 960, -360.35
 1080, -382.21
 1200, -402.88
ENDTABLE
M_DIFF_VISC_GAIN(2) 1 ! Gain multiplied with calculated value to get this torque
                      ! difference
M_DIFF_VISC_OFFSET(2) 0 ; N-m ! Offset added (after gain) to get this torque
                        ! difference
DSPIN_START_M_DIFF_VISC(2) 0 ; rpm ! Offset subtracted from speed difference
DSPIN_SCALE_M_DIFF_VISC(2) 1 ! Scale factor divided into (speed difference -
                             ! DSPIN_START_M_DIFF_VISC)

! 1D table: col 1 = speed difference (rpm), col 2 = this torque difference (N-m)
M_DIFF_VISC_TABLE(3) SPLINE ! transfer case
 -1200, 402.88
 -1080, 382.21
 -960, 360.35
 -840, 337.07
 -720, 312.07
 -600, 284.88
 -540, 270.26
 -480, 254.8
 -420, 238.35
 -360, 220.67
 -300, 201.44
 -240, 180.17
 -180, 156.03
 -120, 127.4
 -60, 90.09
 0, 0
 60, -90.09
 120, -127.4
 180, -156.03
 240, -180.17
 300, -201.44
 360, -220.67
 420, -238.35
 480, -254.8
 540, -270.26
 600, -284.88
 720, -312.07
 840, -337.07
 960, -360.35
 1080, -382.21
 1200, -402.88
ENDTABLE
M_DIFF_VISC_GAIN(3) 1 ! Gain multiplied with calculated value to get this torque
                      ! difference
M_DIFF_VISC_OFFSET(3) 0 ; N-m ! Offset added (after gain) to get this torque
                        ! difference
DSPIN_START_M_DIFF_VISC(3) 0 ; rpm ! Offset subtracted from speed difference
DSPIN_SCALE_M_DIFF_VISC(3) 1 ! Scale factor divided into (speed difference -
                             ! DSPIN_START_M_DIFF_VISC)

! M_TBAR: Torsion bar torque vs deflection. Torsion bar torque is a function of
! angle (COEFFICIENT or TABLE). Alternatively, a custom equation can be defined at
! runtime. Torsion bar torque from the calculation can be adjusted with M_TBAR_GAIN
! and M_TBAR_OFFSET.

M_TBAR_COEFFICIENT  2 ! Coefficient: torsion bar torque per unit angle (N-m/deg)
M_TBAR_GAIN         1 ! Gain multiplied with calculated value to get torsion bar
                      ! torque
M_TBAR_OFFSET       0 ; N-m ! Offset added (after gain) to get torsion bar torque

! M_TRANS_AV: Component of transmission output torque due to torsional damping of
! the driveline. Transmission output torque is a function of compliance twist angular
! rate (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation can be
! defined at runtime. Transmission output torque from the calculation can be adjusted
! with M_TRANS_AV_GAIN and M_TRANS_AV_OFFSET. Compliance twist angular rate used in
! the calculation can be adjusted with AV_SCALE_M_TRANS and AV_START_M_TRANS.

M_TRANS_AV_CONSTANT 0 ; N-m ! [D] Constant transmission output torque
M_TRANS_AV_OFFSET   0 ; N-m ! Offset added (after gain) to get transmission output
                      ! torque

! M_TRANS_ROT: Component of transmission output torque due to torsional stiffness of
! the driveline. Transmission output torque is a function of compliance twist angle
! (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation can be defined
! at runtime. Transmission output torque from the calculation can be adjusted with
! M_TRANS_ROT_GAIN and M_TRANS_ROT_OFFSET. Compliance twist angle used in the
! calculation can be adjusted with ROT_SCALE_M_TRANS and ROT_START_M_TRANS.

M_TRANS_ROT_CONSTANT 0 ; N-m ! [D] Constant transmission output torque
M_TRANS_ROT_OFFSET  0 ; N-m ! Offset added (after gain) to get transmission output
                      ! torque

! PBK_CON: Brake control pressure (master cylinder). Brake pressure is a function of
! time (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation can be
! defined at runtime. Brake pressure from the calculation can be adjusted with
! PBK_CON_GAIN and PBK_CON_OFFSET. Time used in the calculation can be adjusted with
! TSCALE_PBK_CON and TSTART_PBK_CON.

! 1D table: col 1 = time (s), col 2 = brake pressure (MPa)
PBK_CON_TABLE LINEAR_FLAT ! linear interpolation, flat-line extrapolation
 0, 0
 2, 0
 3, 4
 5, 4
ENDTABLE
PBK_CON_GAIN        1 ! Gain multiplied with calculated value to get brake pressure
PBK_CON_OFFSET      0 ; MPa ! Offset added (after gain) to get brake pressure
TSTART_PBK_CON      0 ; s ! Offset subtracted from time
TSCALE_PBK_CON      1 ! Scale factor divided into (time - TSTART_PBK_CON)

! PBK_DL: Brake delivery pressure (proportioning valve). Delivery pressure can be a
! nonlinear CARPET function of dynamic wheel load and master cylinder pressure or a
! function of master cylinder pressure (CONSTANT, COEFFICIENT, or TABLE) combined
! with a function PBK_DL_FZ of dynamic wheel load (CONSTANT, COEFFICIENT, or TABLE).
! Alternatively, a custom equation can be defined at runtime. Delivery pressure from
! the calculation can be adjusted with PBK_DL_GAIN and PBK_DL_OFFSET. Master cylinder
! pressure used in the calculation can be adjusted with PBK_CON_SCALE_PBK_DL and
! PBK_CON_START_PBK_DL. Dynamic wheel load used in the calculation can be adjusted
! with FZ_SCALE_PBK_DL and FZ_START_PBK_DL. This configurable function supports 4
! datasets; if indices shown below are not used, e.g., (1,2), the current values of
! the indices IAXLE and ISIDE are used to identify the dataset when reading data.

PBK_DL_COEFFICIENT(1,1) 1 ! Coefficient: delivery pressure per unit master cylinder
                          ! pressure (MPa/MPa), axle 1, left side
PBK_DL_GAIN(1,1)    1 ! Gain multiplied with calculated value to get delivery
                      ! pressure
PBK_DL_OFFSET(1,1)  0 ; MPa ! Offset added (after gain) to get delivery pressure
PBK_CON_START_PBK_DL(1,1) 0 ; MPa ! Offset subtracted from master cylinder pressure
PBK_CON_SCALE_PBK_DL(1,1) 1 ! Scale factor divided into (master cylinder pressure -
                            ! PBK_CON_START_PBK_DL)
PBK_DL_COMBINE(1,1) MULTIPLY ! How to combine the two components
PBK_DL_FZ_CONSTANT(1,1) 1 ; - ! Constant delivery pressure component due to dynamic
                          ! wheel load, axle 1, left side

PBK_DL_COEFFICIENT(1,2) 1 ! Coefficient: delivery pressure per unit master cylinder
                          ! pressure (MPa/MPa), axle 1, right side
PBK_DL_GAIN(1,2)    1 ! Gain multiplied with calculated value to get delivery
                      ! pressure
PBK_DL_OFFSET(1,2)  0 ; MPa ! Offset added (after gain) to get delivery pressure
PBK_CON_START_PBK_DL(1,2) 0 ; MPa ! Offset subtracted from master cylinder pressure
PBK_CON_SCALE_PBK_DL(1,2) 1 ! Scale factor divided into (master cylinder pressure -
                            ! PBK_CON_START_PBK_DL)
PBK_DL_COMBINE(1,2) MULTIPLY ! How to combine the two components
PBK_DL_FZ_CONSTANT(1,2) 1 ; - ! Constant delivery pressure component due to dynamic
                          ! wheel load, axle 1, right side

PBK_DL_COEFFICIENT(2,1) 1 ! Coefficient: delivery pressure per unit master cylinder
                          ! pressure (MPa/MPa), axle 2, left side
PBK_DL_GAIN(2,1)    1 ! Gain multiplied with calculated value to get delivery
                      ! pressure
PBK_DL_OFFSET(2,1)  0 ; MPa ! Offset added (after gain) to get delivery pressure
PBK_CON_START_PBK_DL(2,1) 0 ; MPa ! Offset subtracted from master cylinder pressure
PBK_CON_SCALE_PBK_DL(2,1) 1 ! Scale factor divided into (master cylinder pressure -
                            ! PBK_CON_START_PBK_DL)
PBK_DL_COMBINE(2,1) MULTIPLY ! How to combine the two components
PBK_DL_FZ_CONSTANT(2,1) 1 ; - ! Constant delivery pressure component due to dynamic
                          ! wheel load, axle 2, left side

PBK_DL_COEFFICIENT(2,2) 1 ! Coefficient: delivery pressure per unit master cylinder
                          ! pressure (MPa/MPa), axle 2, right side
PBK_DL_GAIN(2,2)    1 ! Gain multiplied with calculated value to get delivery
                      ! pressure
PBK_DL_OFFSET(2,2)  0 ; MPa ! Offset added (after gain) to get delivery pressure
PBK_CON_START_PBK_DL(2,2) 0 ; MPa ! Offset subtracted from master cylinder pressure
PBK_CON_SCALE_PBK_DL(2,2) 1 ! Scale factor divided into (master cylinder pressure -
                            ! PBK_CON_START_PBK_DL)
PBK_DL_COMBINE(2,2) MULTIPLY ! How to combine the two components
PBK_DL_FZ_CONSTANT(2,2) 1 ; - ! Constant delivery pressure component due to dynamic
                          ! wheel load, axle 2, right side

! RACK_KIN: Nonlinear steering system kinematics for rack and pinion: steer angle at
! the road wheel. Road wheel steer is a function of rack displacement (CONSTANT,
! COEFFICIENT, or TABLE). Road wheel steer from the calculation can be adjusted with
! RACK_KIN_GAIN and RACK_KIN_OFFSET. The derivative of this function is used
! internally. This configurable function supports 4 datasets; if indices shown below
! are not used, e.g., (1,2), the current values of the indices IAXLE and ISIDE are
! used to identify the dataset when reading data.

! 1D table: col 1 = rack displacement (mm), col 2 = road wheel steer (deg)
RACK_KIN_TABLE(1,1) SPLINE ! axle 1, left side
 -80, -31.32135342
 -79.2, -30.99639101
 -78.4, -30.67266583
 -77.6, -30.35012854
 -76.8, -30.02873131
 -76, -29.70842778
 -75.2, -29.38917298
 -74.4, -29.07092322
 -73.6, -28.75363611
 -72.8, -28.43727041
 -72, -28.12178603
 -71.2, -27.80714397
 -70.4, -27.49330626
 -69.6, -27.18023589
 -68.8, -26.86789682
 -68, -26.55625389
 -67.2, -26.24527281
 -66.4, -25.93492008
 -65.6, -25.62516301
 -64.8, -25.31596965
 -64, -25.00730875
 -63.2, -24.69914977
 -62.4, -24.39146281
 -61.6, -24.08421859
 -60.8, -23.77738844
 -60, -23.47094426
 -59.2, -23.16485851
 -58.4, -22.85910415
 -57.6, -22.55365467
 -56.8, -22.24848404
 -56, -21.94356669
 -55.2, -21.63887748
 -54.4, -21.33439172
 -53.6, -21.03008512
 -52.8, -20.72593377
 -52, -20.42191414
 -51.2, -20.11800308
 -50.4, -19.81417776
 -49.6, -19.51041568
 -48.8, -19.20669467
 -48, -18.90299287
 -47.2, -18.59928868
 -46.4, -18.29556083
 -45.6, -17.99178826
 -44.8, -17.6879502
 -44, -17.38402613
 -43.2, -17.07999575
 -42.4, -16.77583898
 -41.6, -16.47153598
 -40.8, -16.1670671
 -40, -15.86241288
 -39.2, -15.55755406
 -38.4, -15.25247156
 -37.6, -14.94714647
 -36.8, -14.64156005
 -36, -14.33569371
 -35.2, -14.02952902
 -34.4, -13.72304767
 -33.6, -13.41623152
 -32.8, -13.10906252
 -32, -12.80152278
 -31.2, -12.49359451
 -30.4, -12.18526003
 -29.6, -11.87650177
 -28.8, -11.56730225
 -28, -11.2576441
 -27.2, -10.94751004
 -26.4, -10.63688284
 -25.6, -10.3257454
 -24.8, -10.01408065
 -24, -9.70187162
 -23.2, -9.389101384
 -22.4, -9.075753089
 -21.6, -8.761809933
 -20.8, -8.447255169
 -20, -8.132072094
 -19.2, -7.816244052
 -18.4, -7.499754427
 -17.6, -7.182586638
 -16.8, -6.864724138
 -16, -6.546150407
 -15.2, -6.226848953
 -14.4, -5.906803307
 -13.6, -5.585997015
 -12.8, -5.264413642
 -12, -4.942036764
 -11.2, -4.618849969
 -10.4, -4.294836849
 -9.6, -3.969981
 -8.8, -3.64426602
 -8, -3.317675503
 -7.2, -2.99019304
 -6.4, -2.661802214
 -5.6, -2.332486597
 -4.8, -2.00222975
 -4, -1.671015219
 -3.2, -1.338826529
 -2.4, -1.00564719
 -1.6, -0.671460686
 -0.8, -0.336250478
 0, 0
 0.8, 0.337307343
 1.6, 0.675688178
 2.4, 1.015159164
 3.2, 1.355736997
 4, 1.697438409
 4.8, 2.040280172
 5.6, 2.384279101
 6.4, 2.729452051
 7.2, 3.075815925
 8, 3.423387674
 8.8, 3.772184294
 9.6, 4.122222837
 10.4, 4.473520403
 11.2, 4.826094151
 12, 5.179961291
 12.8, 5.535139097
 13.6, 5.891644897
 14.4, 6.249496084
 15.2, 6.608710113
 16, 6.969304504
 16.8, 7.331296844
 17.6, 7.694704786
 18.4, 8.059546055
 19.2, 8.425838448
 20, 8.793599832
 20.8, 9.162848152
 21.6, 9.533601427
 22.4, 9.905877757
 23.2, 10.27969532
 24, 10.65507237
 24.8, 11.03202726
 25.6, 11.41057841
 26.4, 11.79074434
 27.2, 12.17254366
 28, 12.55599505
 28.8, 12.9411173
 29.6, 13.32792929
 30.4, 13.71645001
 31.2, 14.10669852
 32, 14.498694
 32.8, 14.89245574
 33.6, 15.28800311
 34.4, 15.6853556
 35.2, 16.08453282
 36, 16.48555448
 36.8, 16.8884404
 37.6, 17.29321054
 38.4, 17.69988495
 39.2, 18.10848382
 40, 18.51902747
 40.8, 18.93153635
 41.6, 19.34603104
 42.4, 19.76253224
 43.2, 20.18106081
 44, 20.60163777
 44.8, 21.02428425
 45.6, 21.44902156
 46.4, 21.87587117
 47.2, 22.30485471
 48, 22.73599396
 48.8, 23.1693109
 49.6, 23.60482768
 50.4, 24.04256664
 51.2, 24.48255031
 52, 24.92480143
 52.8, 25.36934294
 53.6, 25.816198
 54.4, 26.26538999
 55.2, 26.71694255
 56, 27.17087953
 56.8, 27.62722506
 57.6, 28.08600353
 58.4, 28.5472396
 59.2, 29.01095823
 60, 29.47718469
 60.8, 29.94594455
 61.6, 30.41726374
 62.4, 30.89116851
 63.2, 31.3676855
 64, 31.84684173
 64.8, 32.32866462
 65.6, 32.81318203
 66.4, 33.30042226
 67.2, 33.79041407
 68, 34.28318675
 68.8, 34.77877008
 69.6, 35.27719442
 70.4, 35.77849071
 71.2, 36.2826905
 72, 36.789826
 72.8, 37.29993011
 73.6, 37.81303646
 74.4, 38.32917945
 75.2, 38.84839433
 76, 39.37071717
 76.8, 39.89618501
 77.6, 40.42483584
 78.4, 40.95670869
 79.2, 41.49184372
 80, 42.03028225
ENDTABLE
RACK_KIN_GAIN(1,1)  1 ! Gain multiplied with calculated value to get road wheel
                      ! steer
RACK_KIN_OFFSET(1,1) 0 ; deg ! Offset added (after gain) to get road wheel steer

! 1D table: col 1 = rack displacement (mm), col 2 = road wheel steer (deg)
RACK_KIN_TABLE(1,2) SPLINE ! axle 1, right side
 -80, -42.03028225
 -79.2, -41.49184372
 -78.4, -40.95670869
 -77.6, -40.42483584
 -76.8, -39.89618501
 -76, -39.37071717
 -75.2, -38.84839433
 -74.4, -38.32917945
 -73.6, -37.81303646
 -72.8, -37.29993011
 -72, -36.789826
 -71.2, -36.2826905
 -70.4, -35.77849071
 -69.6, -35.27719442
 -68.8, -34.77877008
 -68, -34.28318675
 -67.2, -33.79041407
 -66.4, -33.30042226
 -65.6, -32.81318203
 -64.8, -32.32866462
 -64, -31.84684173
 -63.2, -31.3676855
 -62.4, -30.89116851
 -61.6, -30.41726374
 -60.8, -29.94594455
 -60, -29.47718469
 -59.2, -29.01095823
 -58.4, -28.5472396
 -57.6, -28.08600353
 -56.8, -27.62722506
 -56, -27.17087953
 -55.2, -26.71694255
 -54.4, -26.26538999
 -53.6, -25.816198
 -52.8, -25.36934294
 -52, -24.92480143
 -51.2, -24.48255031
 -50.4, -24.04256664
 -49.6, -23.60482768
 -48.8, -23.1693109
 -48, -22.73599396
 -47.2, -22.30485471
 -46.4, -21.87587117
 -45.6, -21.44902156
 -44.8, -21.02428425
 -44, -20.60163777
 -43.2, -20.18106081
 -42.4, -19.76253224
 -41.6, -19.34603104
 -40.8, -18.93153635
 -40, -18.51902747
 -39.2, -18.10848382
 -38.4, -17.69988495
 -37.6, -17.29321054
 -36.8, -16.8884404
 -36, -16.48555448
 -35.2, -16.08453282
 -34.4, -15.6853556
 -33.6, -15.28800311
 -32.8, -14.89245574
 -32, -14.498694
 -31.2, -14.10669852
 -30.4, -13.71645001
 -29.6, -13.32792929
 -28.8, -12.9411173
 -28, -12.55599505
 -27.2, -12.17254366
 -26.4, -11.79074434
 -25.6, -11.41057841
 -24.8, -11.03202726
 -24, -10.65507237
 -23.2, -10.27969532
 -22.4, -9.905877757
 -21.6, -9.533601427
 -20.8, -9.162848152
 -20, -8.793599832
 -19.2, -8.425838448
 -18.4, -8.059546055
 -17.6, -7.694704786
 -16.8, -7.331296844
 -16, -6.969304504
 -15.2, -6.608710113
 -14.4, -6.249496084
 -13.6, -5.891644897
 -12.8, -5.535139097
 -12, -5.179961291
 -11.2, -4.826094151
 -10.4, -4.473520403
 -9.6, -4.122222837
 -8.8, -3.772184294
 -8, -3.423387674
 -7.2, -3.075815925
 -6.4, -2.729452051
 -5.6, -2.384279101
 -4.8, -2.040280172
 -4, -1.697438409
 -3.2, -1.355736997
 -2.4, -1.015159164
 -1.6, -0.675688178
 -0.8, -0.337307343
 0, 0
 0.8, 0.336250478
 1.6, 0.671460686
 2.4, 1.00564719
 3.2, 1.338826529
 4, 1.671015219
 4.8, 2.00222975
 5.6, 2.332486597
 6.4, 2.661802214
 7.2, 2.99019304
 8, 3.317675503
 8.8, 3.64426602
 9.6, 3.969981
 10.4, 4.294836849
 11.2, 4.618849969
 12, 4.942036764
 12.8, 5.264413642
 13.6, 5.585997015
 14.4, 5.906803307
 15.2, 6.226848953
 16, 6.546150407
 16.8, 6.864724138
 17.6, 7.182586638
 18.4, 7.499754427
 19.2, 7.816244052
 20, 8.132072094
 20.8, 8.447255169
 21.6, 8.761809933
 22.4, 9.075753089
 23.2, 9.389101384
 24, 9.70187162
 24.8, 10.01408065
 25.6, 10.3257454
 26.4, 10.63688284
 27.2, 10.94751004
 28, 11.2576441
 28.8, 11.56730225
 29.6, 11.87650177
 30.4, 12.18526003
 31.2, 12.49359451
 32, 12.80152278
 32.8, 13.10906252
 33.6, 13.41623152
 34.4, 13.72304767
 35.2, 14.02952902
 36, 14.33569371
 36.8, 14.64156005
 37.6, 14.94714647
 38.4, 15.25247156
 39.2, 15.55755406
 40, 15.86241288
 40.8, 16.1670671
 41.6, 16.47153598
 42.4, 16.77583898
 43.2, 17.07999575
 44, 17.38402613
 44.8, 17.6879502
 45.6, 17.99178826
 46.4, 18.29556083
 47.2, 18.59928868
 48, 18.90299287
 48.8, 19.20669467
 49.6, 19.51041568
 50.4, 19.81417776
 51.2, 20.11800308
 52, 20.42191414
 52.8, 20.72593377
 53.6, 21.03008512
 54.4, 21.33439172
 55.2, 21.63887748
 56, 21.94356669
 56.8, 22.24848404
 57.6, 22.55365467
 58.4, 22.85910415
 59.2, 23.16485851
 60, 23.47094426
 60.8, 23.77738844
 61.6, 24.08421859
 62.4, 24.39146281
 63.2, 24.69914977
 64, 25.00730875
 64.8, 25.31596965
 65.6, 25.62516301
 66.4, 25.93492008
 67.2, 26.24527281
 68, 26.55625389
 68.8, 26.86789682
 69.6, 27.18023589
 70.4, 27.49330626
 71.2, 27.80714397
 72, 28.12178603
 72.8, 28.43727041
 73.6, 28.75363611
 74.4, 29.07092322
 75.2, 29.38917298
 76, 29.70842778
 76.8, 30.02873131
 77.6, 30.35012854
 78.4, 30.67266583
 79.2, 30.99639101
 80, 31.32135342
ENDTABLE
RACK_KIN_GAIN(1,2)  1 ! Gain multiplied with calculated value to get road wheel
                      ! steer
RACK_KIN_OFFSET(1,2) 0 ; deg ! Offset added (after gain) to get road wheel steer

! RACK_TRAVEL: Steering rack displacement. Rack displacement is a function of pinion
! angle (CONSTANT, COEFFICIENT, or TABLE). Rack displacement from the calculation can
! be adjusted with RACK_TRAVEL_GAIN and RACK_TRAVEL_OFFSET. The derivative of this
! function is used internally. This configurable function supports 2 datasets; if
! indices shown below are not used, e.g., (2), the current value of the index IAXLE
! is used to identify the dataset when reading data.

RACK_TRAVEL_COEFFICIENT(1) 0.1279444444 ! Coefficient: rack displacement per unit
                                        ! pinion angle (mm/deg), axle 1
RACK_TRAVEL_GAIN(1) 1 ! Gain multiplied with calculated value to get rack
                      ! displacement
RACK_TRAVEL_OFFSET(1) 0 ; mm ! Offset added (after gain) to get rack displacement

! RM_TC: Torque converter output to input torque ratio vs. speed ratio of torque
! converter output shaft to engine. Torque ratio is a function of speed ratio
! (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation can be defined
! at runtime. Torque ratio from the calculation can be adjusted with RM_TC_GAIN and
! RM_TC_OFFSET. Speed ratio used in the calculation can be adjusted with
! RSPIN_SCALE_RM_TC and RSPIN_START_RM_TC.

! 1D table: col 1 = speed ratio (-), col 2 = torque ratio (-)
RM_TC_TABLE LINEAR_FLAT ! linear interpolation, flat-line extrapolation
 0, 1.864
 0.881, 1
 1, 1
ENDTABLE
RM_TC_GAIN          1 ! Gain multiplied with calculated value to get torque ratio
RM_TC_OFFSET        0 ; - ! Offset added (after gain) to get torque ratio
RSPIN_START_RM_TC   0 ; - ! Offset subtracted from speed ratio
RSPIN_SCALE_RM_TC   1 ! Scale factor divided into (speed ratio - RSPIN_START_RM_TC)

! SPEED_TARGET: Speed controller target. Speed can be a nonlinear CARPET function of
! station and time or a function of time (CONSTANT, COEFFICIENT, or TABLE) combined
! with a function SPEED_TARGET_S of station (CONSTANT, COEFFICIENT, or TABLE).
! Alternatively, a custom equation can be defined at runtime. Speed from the
! calculation can be adjusted with SPEED_TARGET_GAIN and SPEED_TARGET_OFFSET. Time
! used in the calculation can be adjusted with TSCALE_SPEED_TARGET and
! TSTART_SPEED_TARGET. Station used in the calculation can be adjusted with
! SSCALE_SPEED_TARGET and SSTART_SPEED_TARGET. This configurable function supports
! 200 datasets; if indices shown below are not used, e.g., (2), the current value of
! the index ISPEED is used to identify the dataset when reading data.

SPEED_TARGET_ID(1)  1  ! Procedure: Split Mu Brake Test
SPEED_TARGET_CONSTANT(1) 120 ; km/h ! Constant speed component due to time
SPEED_TARGET_GAIN(1) 1 ! Gain multiplied with calculated value to get speed
SPEED_TARGET_OFFSET(1) 0 ; km/h ! Offset added (after gain) to get speed
SPEED_TARGET_COMBINE(1) ADD ! How to combine the two components
SET_UNITS SPEED_TARGET_S_TABLE(1) km/h ;
SPEED_TARGET_S_CONSTANT(1) 0 ; km/h ! Constant speed component due to station

! STEER_COMP: Steer of each wheel on an axle as a function of the total kingpin
! steering moment from both wheels on the axle, MINUS steering due to suspension
! compliance. Steer is a function of total kingpin moment (CONSTANT, COEFFICIENT, or
! TABLE). Alternatively, a custom equation can be defined at runtime. Steer from the
! calculation can be adjusted with STEER_COMP_GAIN and STEER_COMP_OFFSET. Total
! kingpin moment used in the calculation can be adjusted with M_KP_SCALE_STEER_COMP
! and M_KP_START_STEER_COMP. This configurable function supports 2 datasets; if
! indices shown below are not used, e.g., (2), the current value of the index IAXLE
! is used to identify the dataset when reading data.

STEER_COMP_COEFFICIENT(1) 0.002 ! Coefficient: steer per unit total kingpin moment
                                ! (deg/N-m), axle 1
STEER_COMP_GAIN(1)  1 ! Gain multiplied with calculated value to get steer
STEER_COMP_OFFSET(1) 0 ; deg ! Offset added (after gain) to get steer
M_KP_START_STEER_COMP(1) 0 ; N-m ! Offset subtracted from total kingpin moment
M_KP_SCALE_STEER_COMP(1) 1 ! Scale factor divided into (total kingpin moment -
                           ! M_KP_START_STEER_COMP)

! SUSP_AXLE_ROLL_STEER: Suspension roll steer. Steer is a function of roll
! (CONSTANT, COEFFICIENT, or TABLE). Steer from the calculation can be adjusted with
! SUSP_AXLE_ROLL_STEER_GAIN and SUSP_AXLE_ROLL_STEER_OFFSET. Roll used in the
! calculation can be adjusted with ROLL_SCALE_AXLE_STEER and ROLL_START_AXLE_STEER.
! The derivative of this function is used internally. This configurable function
! supports 2 datasets; if indices shown below are not used, e.g., (2), the current
! value of the index IAXLE is used to identify the dataset when reading data.

SUSP_AXLE_ROLL_STEER_COEFFICIENT(2) 0.08 ! Coefficient: steer per unit roll
                                         ! (deg/deg), axle 2
SUSP_AXLE_ROLL_STEER_GAIN(2) 1 ! Gain multiplied with calculated value to get steer
SUSP_AXLE_ROLL_STEER_OFFSET(2) 0 ; deg ! Offset added (after gain) to get steer
ROLL_START_AXLE_STEER(2) 0 ; deg ! Offset subtracted from roll
ROLL_SCALE_AXLE_STEER(2) 1 ! Scale factor divided into (roll -
                           ! ROLL_START_AXLE_STEER)

! SUSP_DIVE: Suspension dive (measured at zero steer). Suspension dive can be a
! nonlinear CARPET function of jounce (other side) and jounce or a function of jounce
! (CONSTANT, COEFFICIENT, or TABLE) combined with a function SUSP_DIVE_JNC_OTHER_SIDE
! of jounce (other side) (CONSTANT, COEFFICIENT, or TABLE). Suspension dive from the
! calculation can be adjusted with SUSP_DIVE_GAIN and SUSP_DIVE_OFFSET. Jounce used
! in the calculation can be adjusted with JNC_SCALE_SUSP_DIVE and
! JNC_START_SUSP_DIVE. Jounce (other side) used in the calculation can be adjusted
! with JNC2_SCALE_SUSP_DIVE and JNC2_START_SUSP_DIVE. The derivative of this function
! is used internally. This configurable function supports 4 datasets; if indices
! shown below are not used, e.g., (1,2), the current values of the indices IAXLE and
! ISIDE are used to identify the dataset when reading data.

! 1D table: col 1 = jounce (mm), col 2 = suspension dive (deg)
SUSP_DIVE_TABLE(1,1) SPLINE ! axle 1, left side
 -70, 2.07166
 -60, 1.77237
 -50, 1.47431
 -40, 1.17742
 -30, 0.881618
 -20, 0.586832
 -10, 0.292987
 0, 0
 10, -0.292218
 20, -0.583766
 30, -0.874758
 40, -1.16532
 50, -1.45561
 60, -1.7458
 70, -2.03611
ENDTABLE
SUSP_DIVE_GAIN(1,1) 1 ! Gain multiplied with calculated value to get suspension dive
SUSP_DIVE_OFFSET(1,1) 0 ; deg ! Offset added (after gain) to get suspension dive
JNC_START_SUSP_DIVE(1,1) 0 ; mm ! Offset subtracted from jounce
JNC_SCALE_SUSP_DIVE(1,1) 1 ! Scale factor divided into (jounce -
                           ! JNC_START_SUSP_DIVE)
SUSP_DIVE_COMBINE(1,1) ADD ! How to combine the two components
SET_UNITS SUSP_DIVE_JNC_OTHER_SIDE_TABLE(1,1) deg ;
SUSP_DIVE_JNC_OTHER_SIDE_CONSTANT(1,1) 0 ; deg ! Constant suspension dive component
                                         ! due to jounce (other side), axle 1, left
                                         ! side

! 1D table: col 1 = jounce (mm), col 2 = suspension dive (deg)
SUSP_DIVE_TABLE(1,2) SPLINE ! axle 1, right side
 -70, 2.07166
 -60, 1.77237
 -50, 1.47431
 -40, 1.17742
 -30, 0.881618
 -20, 0.586832
 -10, 0.292987
 0, 0
 10, -0.292218
 20, -0.583766
 30, -0.874758
 40, -1.16532
 50, -1.45561
 60, -1.7458
 70, -2.03611
ENDTABLE
SUSP_DIVE_GAIN(1,2) 1 ! Gain multiplied with calculated value to get suspension dive
SUSP_DIVE_OFFSET(1,2) 0 ; deg ! Offset added (after gain) to get suspension dive
JNC_START_SUSP_DIVE(1,2) 0 ; mm ! Offset subtracted from jounce
JNC_SCALE_SUSP_DIVE(1,2) 1 ! Scale factor divided into (jounce -
                           ! JNC_START_SUSP_DIVE)
SUSP_DIVE_COMBINE(1,2) ADD ! How to combine the two components
SET_UNITS SUSP_DIVE_JNC_OTHER_SIDE_TABLE(1,2) deg ;
SUSP_DIVE_JNC_OTHER_SIDE_CONSTANT(1,2) 0 ; deg ! Constant suspension dive component
                                         ! due to jounce (other side), axle 1,
                                         ! right side

! SUSP_DIVE_AXLE: Suspension dive (measured at zero steer). Suspension dive is a
! function of jounce (CONSTANT, COEFFICIENT, or TABLE). Suspension dive from the
! calculation can be adjusted with SUSP_DIVE_AXLE_GAIN and SUSP_DIVE_AXLE_OFFSET.
! Jounce used in the calculation can be adjusted with JNC_SCALE_SUSP_DIVE_AXLE and
! JNC_START_SUSP_DIVE_AXLE. The derivative of this function is used internally. This
! configurable function supports 2 datasets; if indices shown below are not used,
! e.g., (2), the current value of the index IAXLE is used to identify the dataset
! when reading data.

SUSP_DIVE_AXLE_COEFFICIENT(2) 0 ! Coefficient: suspension dive per unit jounce
                                ! (deg/mm), axle 2
SUSP_DIVE_AXLE_OFFSET(2) 0 ; deg ! Offset added (after gain) to get suspension dive
JNC_START_SUSP_DIVE_AXLE(2) 0 ; mm ! Offset subtracted from jounce
JNC_SCALE_SUSP_DIVE_AXLE(2) 1 ! Scale factor divided into (jounce -
                              ! JNC_START_SUSP_DIVE_AXLE)

! SUSP_LAT: Suspension Lateral movement inward of unsteered wheel (measured at zero
! steer). Lateral movement inward of unsteered wheel can be a nonlinear CARPET
! function of jounce (other side) and jounce or a function of jounce (CONSTANT,
! COEFFICIENT, or TABLE) combined with a function SUSP_LAT_JNC_OTHER_SIDE of jounce
! (other side) (CONSTANT, COEFFICIENT, or TABLE). Lateral movement inward of
! unsteered wheel from the calculation can be adjusted with SUSP_LAT_GAIN and
! SUSP_LAT_OFFSET. Jounce used in the calculation can be adjusted with
! JNC_SCALE_SUSP_LAT and JNC_START_SUSP_LAT. Jounce (other side) used in the
! calculation can be adjusted with JNC2_SCALE_SUSP_LAT and JNC2_START_SUSP_LAT. The
! derivative of this function is used internally. This configurable function supports
! 4 datasets; if indices shown below are not used, e.g., (1,2), the current values of
! the indices IAXLE and ISIDE are used to identify the dataset when reading data.

! 1D table: col 1 = jounce (mm), col 2 = Lateral movement inward of unsteered wheel (mm)
SUSP_LAT_TABLE(1,1) SPLINE ! axle 1, left side
 -70, 4.74662
 -60, 3.12302
 -50, 1.82181
 -40, 0.837522
 -30, 0.165882
 -20, -0.196302
 -10, -0.251197
 0, 0
 10, 0.557037
 20, 1.42059
 30, 2.59226
 40, 4.07461
 50, 5.87116
 60, 7.98647
 70, 10.4262
ENDTABLE
SUSP_LAT_GAIN(1,1)  1 ! Gain multiplied with calculated value to get Lateral
                      ! movement inward of unsteered wheel
SUSP_LAT_OFFSET(1,1) 0 ; mm ! Offset added (after gain) to get Lateral movement
                       ! inward of unsteered wheel
JNC_START_SUSP_LAT(1,1) 0 ; mm ! Offset subtracted from jounce
JNC_SCALE_SUSP_LAT(1,1) 1 ! Scale factor divided into (jounce - JNC_START_SUSP_LAT)
SUSP_LAT_COMBINE(1,1) ADD ! How to combine the two components
SET_UNITS SUSP_LAT_JNC_OTHER_SIDE_TABLE(1,1) mm ;
SUSP_LAT_JNC_OTHER_SIDE_CONSTANT(1,1) 0 ; mm ! Constant Lateral movement inward of
                                        ! unsteered wheel component due to jounce
                                        ! (other side), axle 1, left side

! 1D table: col 1 = jounce (mm), col 2 = Lateral movement inward of unsteered wheel (mm)
SUSP_LAT_TABLE(1,2) SPLINE ! axle 1, right side
 -70, 4.74662
 -60, 3.12302
 -50, 1.82181
 -40, 0.837522
 -30, 0.165882
 -20, -0.196302
 -10, -0.251197
 0, 0
 10, 0.557037
 20, 1.42059
 30, 2.59226
 40, 4.07461
 50, 5.87116
 60, 7.98647
 70, 10.4262
ENDTABLE
SUSP_LAT_GAIN(1,2)  1 ! Gain multiplied with calculated value to get Lateral
                      ! movement inward of unsteered wheel
SUSP_LAT_OFFSET(1,2) 0 ; mm ! Offset added (after gain) to get Lateral movement
                       ! inward of unsteered wheel
JNC_START_SUSP_LAT(1,2) 0 ; mm ! Offset subtracted from jounce
JNC_SCALE_SUSP_LAT(1,2) 1 ! Scale factor divided into (jounce - JNC_START_SUSP_LAT)
SUSP_LAT_COMBINE(1,2) ADD ! How to combine the two components
SET_UNITS SUSP_LAT_JNC_OTHER_SIDE_TABLE(1,2) mm ;
SUSP_LAT_JNC_OTHER_SIDE_CONSTANT(1,2) 0 ; mm ! Constant Lateral movement inward of
                                        ! unsteered wheel component due to jounce
                                        ! (other side), axle 1, right side

! SUSP_X: Suspension X movement forward of unsteered wheel (measured at zero steer).
! X movement forward of unsteered wheel can be a nonlinear CARPET function of jounce
! (other side) and jounce or a function of jounce (CONSTANT, COEFFICIENT, or TABLE)
! combined with a function SUSP_X_JNC_OTHER_SIDE of jounce (other side) (CONSTANT,
! COEFFICIENT, or TABLE). X movement forward of unsteered wheel from the calculation
! can be adjusted with SUSP_X_GAIN and SUSP_X_OFFSET. Jounce used in the calculation
! can be adjusted with JNC_SCALE_SUSP_X and JNC_START_SUSP_X. Jounce (other side)
! used in the calculation can be adjusted with JNC2_SCALE_SUSP_X and
! JNC2_START_SUSP_X. The derivative of this function is used internally. This
! configurable function supports 4 datasets; if indices shown below are not used,
! e.g., (1,2), the current values of the indices IAXLE and ISIDE are used to identify
! the dataset when reading data.

! 1D table: col 1 = jounce (mm), col 2 = X movement forward of unsteered wheel (mm)
SUSP_X_TABLE(1,1) SPLINE ! axle 1, left side
 -70, -0.729904
 -60, -0.634454
 -50, -0.536096
 -40, -0.434813
 -30, -0.330589
 -20, -0.2234
 -10, -0.113217
 0, 0
 10, 0.116308
 20, 0.235783
 30, 0.358522
 40, 0.484654
 50, 0.61434
 60, 0.747787
 70, 0.885253
ENDTABLE
SUSP_X_GAIN(1,1)    1 ! Gain multiplied with calculated value to get X movement
                      ! forward of unsteered wheel
SUSP_X_OFFSET(1,1)  0 ; mm ! Offset added (after gain) to get X movement forward of
                      ! unsteered wheel
JNC_START_SUSP_X(1,1) 0 ; mm ! Offset subtracted from jounce
JNC_SCALE_SUSP_X(1,1) 1 ! Scale factor divided into (jounce - JNC_START_SUSP_X)
SUSP_X_COMBINE(1,1) ADD ! How to combine the two components
SET_UNITS SUSP_X_JNC_OTHER_SIDE_TABLE(1,1) mm ;
SUSP_X_JNC_OTHER_SIDE_CONSTANT(1,1) 0 ; mm ! Constant X movement forward of
                                      ! unsteered wheel component due to jounce
                                      ! (other side), axle 1, left side

! 1D table: col 1 = jounce (mm), col 2 = X movement forward of unsteered wheel (mm)
SUSP_X_TABLE(1,2) SPLINE ! axle 1, right side
 -70, -0.729904
 -60, -0.634454
 -50, -0.536096
 -40, -0.434813
 -30, -0.330589
 -20, -0.2234
 -10, -0.113217
 0, 0
 10, 0.116308
 20, 0.235783
 30, 0.358522
 40, 0.484654
 50, 0.61434
 60, 0.747787
 70, 0.885253
ENDTABLE
SUSP_X_GAIN(1,2)    1 ! Gain multiplied with calculated value to get X movement
                      ! forward of unsteered wheel
SUSP_X_OFFSET(1,2)  0 ; mm ! Offset added (after gain) to get X movement forward of
                      ! unsteered wheel
JNC_START_SUSP_X(1,2) 0 ; mm ! Offset subtracted from jounce
JNC_SCALE_SUSP_X(1,2) 1 ! Scale factor divided into (jounce - JNC_START_SUSP_X)
SUSP_X_COMBINE(1,2) ADD ! How to combine the two components
SET_UNITS SUSP_X_JNC_OTHER_SIDE_TABLE(1,2) mm ;
SUSP_X_JNC_OTHER_SIDE_CONSTANT(1,2) 0 ; mm ! Constant X movement forward of
                                      ! unsteered wheel component due to jounce
                                      ! (other side), axle 1, right side

! SUSP_X_AXLE: Suspension X axle movement forward (measured at zero steer). X axle
! movement forward is a function of jounce (CONSTANT, COEFFICIENT, or TABLE). X axle
! movement forward from the calculation can be adjusted with SUSP_X_AXLE_GAIN and
! SUSP_X_AXLE_OFFSET. Jounce used in the calculation can be adjusted with
! JNC_SCALE_SUSP_X_AXLE and JNC_START_SUSP_X_AXLE. The derivative of this function is
! used internally. This configurable function supports 2 datasets; if indices shown
! below are not used, e.g., (2), the current value of the index IAXLE is used to
! identify the dataset when reading data.

! 1D table: col 1 = jounce (mm), col 2 = X axle movement forward (mm)
SUSP_X_AXLE_TABLE(2) SPLINE ! axle 2
 -150, 5.1612
 -135, 2.79277
 -120, 0.841255
 -105, -0.695023
 -90, -1.8184
 -75, -2.53133
 -60, -2.83607
 -45, -2.73441
 -30, -2.22759
 -15, -1.3162
 0, 0
 15, 1.72199
 30, 3.85147
 45, 6.39054
 60, 9.34103
 75, 12.703
 90, 16.4714
 105, 20.6284
 120, 25.1262
 135, 29.8517
 150, 34.583
ENDTABLE
SUSP_X_AXLE_GAIN(2) 1 ! Gain multiplied with calculated value to get X axle movement
                      ! forward
SUSP_X_AXLE_OFFSET(2) 0 ; mm ! Offset added (after gain) to get X axle movement
                        ! forward
JNC_START_SUSP_X_AXLE(2) 0 ; mm ! Offset subtracted from jounce
JNC_SCALE_SUSP_X_AXLE(2) 1 ! Scale factor divided into (jounce -
                           ! JNC_START_SUSP_X_AXLE)

! SUSP_Y_AXLE_ROLL: Suspension Y movement. Y movement can be a nonlinear CARPET
! function of jounce and roll or a function of roll (CONSTANT, COEFFICIENT, or TABLE)
! combined with a function SUSP_LAT_AXLE_JOUNCE of jounce (CONSTANT, COEFFICIENT, or
! TABLE). Y movement from the calculation can be adjusted with SUSP_Y_AXLE_ROLL_GAIN
! and SUSP_Y_AXLE_ROLL_OFFSET. Roll used in the calculation can be adjusted with
! ROLL_SCALE_AXLE_Y and ROLL_START_AXLE_Y. Jounce used in the calculation can be
! adjusted with JNC_SCALE_AXLE_Y and JNC_START_AXLE_Y. The derivative of this
! function is used internally. This configurable function supports 2 datasets; if
! indices shown below are not used, e.g., (2), the current value of the index IAXLE
! is used to identify the dataset when reading data.

! 1D table: col 1 = roll (deg), col 2 = Y movement (mm)
SUSP_Y_AXLE_ROLL_TABLE(2) SPLINE ! axle 2
 -10.053, 16.793
 -8.3636, 14.014
 -6.6819, 11.23
 -5.0063, 8.4357
 -3.335, 5.6313
 -1.6668, 2.8181
 0, 0
 1.6668, -2.8181
 3.335, -5.6313
 5.0063, -8.4357
 6.6819, -11.23
 8.3636, -14.014
 10.053, -16.793
ENDTABLE
SUSP_Y_AXLE_ROLL_GAIN(2) 1 ! Gain multiplied with calculated value to get Y movement
SUSP_Y_AXLE_ROLL_OFFSET(2) 0 ; mm ! Offset added (after gain) to get Y movement
ROLL_START_AXLE_Y(2) 0 ; deg ! Offset subtracted from roll
ROLL_SCALE_AXLE_Y(2) 1 ! Scale factor divided into (roll - ROLL_START_AXLE_Y)
SUSP_Y_AXLE_ROLL_COMBINE(2) ADD ! How to combine the two components
SET_UNITS SUSP_LAT_AXLE_JOUNCE_TABLE(2) mm ;
SUSP_LAT_AXLE_JOUNCE_CONSTANT(2) 0 ; mm ! Constant Y movement component due to
                                   ! jounce, axle 2

! THROTTLE_ENGINE: Throttle input (normalized). Normalized throttle input is a
! function of time (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom
! equation can be defined at runtime. Normalized throttle input from the calculation
! can be adjusted with THROTTLE_ENGINE_GAIN and THROTTLE_ENGINE_OFFSET. Time used in
! the calculation can be adjusted with TSCALE_THROTTLE and TSTART_THROTTLE.

THROTTLE_ENGINE_CONSTANT 0 ; - ! [D] Constant normalized throttle input
THROTTLE_ENGINE_OFFSET 0 ; - ! Offset added (after gain) to get normalized throttle
                         ! input

! TOE: Suspension toe (measured at zero steer). Toe can be a nonlinear CARPET
! function of jounce (other side) and jounce or a function of jounce (CONSTANT,
! COEFFICIENT, or TABLE) combined with a function SUSP_TOE_JNC_OTHER_SIDE of jounce
! (other side) (CONSTANT, COEFFICIENT, or TABLE). Toe from the calculation can be
! adjusted with TOE_GAIN and TOE_OFFSET. Jounce used in the calculation can be
! adjusted with JNC_SCALE_TOE and JNC_START_TOE. Jounce (other side) used in the
! calculation can be adjusted with JNC2_SCALE_TOE and JNC2_START_TOE. The derivative
! of this function is used internally. This configurable function supports 4
! datasets; if indices shown below are not used, e.g., (1,2), the current values of
! the indices IAXLE and ISIDE are used to identify the dataset when reading data.

! 1D table: col 1 = jounce (mm), col 2 = toe (deg)
TOE_TABLE(1,1) SPLINE ! axle 1, left side
 -70, 0.292407
 -60, 0.237822
 -50, 0.187561
 -40, 0.141604
 -30, 0.099916
 -20, 0.062452
 -10, 0.029164
 0, 0
 10, -0.025093
 20, -0.046165
 30, -0.063264
 40, -0.076429
 50, -0.085696
 60, -0.091086
 70, -0.09261
ENDTABLE
TOE_GAIN(1,1)       1 ! Gain multiplied with calculated value to get toe
TOE_OFFSET(1,1)     0 ; deg ! Offset added (after gain) to get toe
JNC_START_TOE(1,1)  0 ; mm ! Offset subtracted from jounce
JNC_SCALE_TOE(1,1)  1 ! Scale factor divided into (jounce - JNC_START_TOE)
TOE_COMBINE(1,1) ADD ! How to combine the two components
SET_UNITS SUSP_TOE_JNC_OTHER_SIDE_TABLE(1,1) deg ;
SUSP_TOE_JNC_OTHER_SIDE_CONSTANT(1,1) 0 ; deg ! Constant toe component due to jounce
                                        ! (other side), axle 1, left side

! 1D table: col 1 = jounce (mm), col 2 = toe (deg)
TOE_TABLE(1,2) SPLINE ! axle 1, right side
 -70, 0.292407
 -60, 0.237822
 -50, 0.187561
 -40, 0.141604
 -30, 0.099916
 -20, 0.062452
 -10, 0.029164
 0, 0
 10, -0.025093
 20, -0.046165
 30, -0.063264
 40, -0.076429
 50, -0.085696
 60, -0.091086
 70, -0.09261
ENDTABLE
TOE_GAIN(1,2)       1 ! Gain multiplied with calculated value to get toe
TOE_OFFSET(1,2)     0 ; deg ! Offset added (after gain) to get toe
JNC_START_TOE(1,2)  0 ; mm ! Offset subtracted from jounce
JNC_SCALE_TOE(1,2)  1 ! Scale factor divided into (jounce - JNC_START_TOE)
TOE_COMBINE(1,2) ADD ! How to combine the two components
SET_UNITS SUSP_TOE_JNC_OTHER_SIDE_TABLE(1,2) deg ;
SUSP_TOE_JNC_OTHER_SIDE_CONSTANT(1,2) 0 ; deg ! Constant toe component due to jounce
                                        ! (other side), axle 1, right side

! TPREV: Driver preview time. Preview time is a function of vehicle speed (CONSTANT,
! COEFFICIENT, or TABLE). Alternatively, a custom equation can be defined at runtime.
! Preview time from the calculation can be adjusted with TPREV_GAIN and TPREV_OFFSET.
! Vehicle speed used in the calculation can be adjusted with VX_SCALE_TPREV and
! VX_START_TPREV.

TPREV_CONSTANT    0.4 ; s ! Constant preview time
TPREV_GAIN          1 ! Gain multiplied with calculated value to get preview time
TPREV_OFFSET        0 ; s ! Offset added (after gain) to get preview time

! UPSHIFT_TRANS: Transmission speed when upshift occurs. IGEAR specifies the lower
! gear for each table (e.g., IGEAR 2 means upshift from 2 to 3). Transmission speed
! is a function of throttle position (CONSTANT, COEFFICIENT, or TABLE).
! Alternatively, a custom equation can be defined at runtime. Transmission speed from
! the calculation can be adjusted with UPSHIFT_TRANS_GAIN and UPSHIFT_TRANS_OFFSET.
! Throttle position used in the calculation can be adjusted with
! THROTTLE_SCALE_UPSHIFT and THROTTLE_START_UPSHIFT. This configurable function
! supports 17 datasets; if indices shown below are not used, e.g., (2), the current
! value of the index IGEAR is used to identify the dataset when reading data.

! 1D table: col 1 = throttle position (-), col 2 = transmission speed (rpm)
UPSHIFT_TRANS_TABLE(1) LINEAR_FLAT ! shifting between gears 1 and 2
 0, 874
 0.2, 874
 0.8, 1653
 1, 1653
ENDTABLE
UPSHIFT_TRANS_GAIN(1) 1 ! Gain multiplied with calculated value to get transmission
                        ! speed
UPSHIFT_TRANS_OFFSET(1) 0 ; rpm ! Offset added (after gain) to get transmission
                          ! speed
THROTTLE_START_UPSHIFT(1) 0 ; - ! Offset subtracted from throttle position
THROTTLE_SCALE_UPSHIFT(1) 1 ! Scale factor divided into (throttle position -
                            ! THROTTLE_START_UPSHIFT)

! 1D table: col 1 = throttle position (-), col 2 = transmission speed (rpm)
UPSHIFT_TRANS_TABLE(2) LINEAR_FLAT ! shifting between gears 2 and 3
 0, 1282
 0.2, 1282
 0.8, 2840
 1, 2840
ENDTABLE
UPSHIFT_TRANS_GAIN(2) 1 ! Gain multiplied with calculated value to get transmission
                        ! speed
UPSHIFT_TRANS_OFFSET(2) 0 ; rpm ! Offset added (after gain) to get transmission
                          ! speed
THROTTLE_START_UPSHIFT(2) 0 ; - ! Offset subtracted from throttle position
THROTTLE_SCALE_UPSHIFT(2) 1 ! Scale factor divided into (throttle position -
                            ! THROTTLE_START_UPSHIFT)

! 1D table: col 1 = throttle position (-), col 2 = transmission speed (rpm)
UPSHIFT_TRANS_TABLE(3) LINEAR_FLAT ! shifting between gears 3 and 4
 0, 1800
 0.2, 1800
 0.8, 4167
 1, 4167
ENDTABLE
UPSHIFT_TRANS_GAIN(3) 1 ! Gain multiplied with calculated value to get transmission
                        ! speed
UPSHIFT_TRANS_OFFSET(3) 0 ; rpm ! Offset added (after gain) to get transmission
                          ! speed
THROTTLE_START_UPSHIFT(3) 0 ; - ! Offset subtracted from throttle position
THROTTLE_SCALE_UPSHIFT(3) 1 ! Scale factor divided into (throttle position -
                            ! THROTTLE_START_UPSHIFT)

! 1D table: col 1 = throttle position (-), col 2 = transmission speed (rpm)
UPSHIFT_TRANS_TABLE(4) LINEAR_FLAT ! shifting between gears 4 and 5
 0, 2525
 0.2, 2525
 0.8, 5850
 1, 5850
ENDTABLE
UPSHIFT_TRANS_GAIN(4) 1 ! Gain multiplied with calculated value to get transmission
                        ! speed
UPSHIFT_TRANS_OFFSET(4) 0 ; rpm ! Offset added (after gain) to get transmission
                          ! speed
THROTTLE_START_UPSHIFT(4) 0 ; - ! Offset subtracted from throttle position
THROTTLE_SCALE_UPSHIFT(4) 1 ! Scale factor divided into (throttle position -
                            ! THROTTLE_START_UPSHIFT)

! 1D table: col 1 = throttle position (-), col 2 = transmission speed (rpm)
UPSHIFT_TRANS_TABLE(5) LINEAR_FLAT ! shifting between gears 5 and 6
 0, 3093
 0.2, 3093
 0.8, 8205
 1, 8205
ENDTABLE
UPSHIFT_TRANS_GAIN(5) 1 ! Gain multiplied with calculated value to get transmission
                        ! speed
UPSHIFT_TRANS_OFFSET(5) 0 ; rpm ! Offset added (after gain) to get transmission
                          ! speed
THROTTLE_START_UPSHIFT(5) 0 ; - ! Offset subtracted from throttle position
THROTTLE_SCALE_UPSHIFT(5) 1 ! Scale factor divided into (throttle position -
                            ! THROTTLE_START_UPSHIFT)

! WIND_HEADING: Wind heading (yaw) relative to global X. When vehicle yaw is zero,
! then 0 deg -> tailwind, 90 deg -> from right, 180 deg -> headwind. Heading can be a
! nonlinear CARPET function of station and time or a function of time (CONSTANT,
! COEFFICIENT, or TABLE) combined with a function WIND_HEADING_S of station
! (CONSTANT, COEFFICIENT, or TABLE). Alternatively, a custom equation can be defined
! at runtime. Heading from the calculation can be adjusted with WIND_HEADING_GAIN and
! WIND_HEADING_OFFSET. Time used in the calculation can be adjusted with
! TSCALE_WIND_HD and TSTART_WIND_HD. Station used in the calculation can be adjusted
! with SSCALE_WIND_HD and SSTART_WIND_HD.

WIND_HEADING_CONSTANT 0 ; deg ! [D] Constant heading component due to time
WIND_HEADING_GAIN   1 ! Gain multiplied with calculated value to get heading
WIND_HEADING_OFFSET 0 ; deg ! Offset added (after gain) to get heading
WIND_HEADING_COMBINE MULTIPLY ! How to combine the two components
WIND_HEADING_S_CONSTANT 1 ; - ! [D] Constant heading component due to station

! WIND_SPEED: Absolute wind speed. Wind speed can be a nonlinear CARPET function of
! station and time or a function of time (CONSTANT, COEFFICIENT, or TABLE) combined
! with a function WIND_SPEED_S of station (CONSTANT, COEFFICIENT, or TABLE).
! Alternatively, a custom equation can be defined at runtime. Wind speed from the
! calculation can be adjusted with WIND_SPEED_GAIN and WIND_SPEED_OFFSET. Time used
! in the calculation can be adjusted with TSCALE_WIND and TSTART_WIND. Station used
! in the calculation can be adjusted with SSCALE_WIND and SSTART_WIND.

WIND_SPEED_CONSTANT 0 ; km/h ! [D] Constant wind speed component due to time
WIND_SPEED_GAIN     1 ! Gain multiplied with calculated value to get wind speed
WIND_SPEED_OFFSET   0 ; km/h ! Offset added (after gain) to get wind speed
WIND_SPEED_COMBINE MULTIPLY ! How to combine the two components
WIND_SPEED_S_CONSTANT 1 ; - ! [D] Constant wind speed component due to station

! Z_PROFILE: "Wandering profile" (roughness input). Elevation increment is a
! function of distance travelled (CONSTANT or TABLE). Elevation increment from the
! calculation can be adjusted with Z_PROFILE_GAIN and Z_PROFILE_OFFSET. Distance
! travelled used in the calculation can be adjusted with SSCALE_Z_PROFILE and
! SSTART_Z_PROFILE. The derivative of this function is used internally. This
! configurable function supports 2 datasets; if indices shown below are not used,
! e.g., (2), the current value of the index ISIDE is used to identify the dataset
! when reading data.

Z_PROFILE_CONSTANT(1) 0 ; mm ! [D] Constant elevation increment
Z_PROFILE_OFFSET(1) 0 ; mm ! Offset added (after gain) to get elevation increment

Z_PROFILE_CONSTANT(2) 0 ; mm ! [D] Constant elevation increment
Z_PROFILE_OFFSET(2) 0 ; mm ! Offset added (after gain) to get elevation increment

!------------------------------------------------------------------------------------
! SPLINE X-Y TABLES FOR PATH SEGMENTS
!------------------------------------------------------------------------------------
! Following are up to 500 tables of X-Y global coordinates used to make spline
! segments for reference paths. Tables are listed here only if used in a path. If
! indices shown below are not used, e.g., SEGMENT_XY_TABLE(1), the current value
! of the index ITAB_XY is used to identify the table when reading data.

! NTAB_XY 17 ! CALC -- Current number of XY spline tables for path segments

XY_TABLE_ID(1)      1 ; Split mu 210 m at 3% grade Segment 1
SEGMENT_XY_TABLE(1) ! table with X (m), Y (m), and calculated station S (m)
 733.1612, 135.4172, 0
 731.6689, 135.4172, 1.492
 731.0898, 135.4172, 2.071
 730.89, 135.4172, 2.271
 730.6901, 135.4172, 2.471
 730.4902, 135.4172, 2.671
 730.2905, 135.4172, 2.871
 729.0419, 135.4172, 4.119
 706.1517, 135.4172, 27.01
 680.852, 135.4172, 52.309
 632.662, 135.4172, 100.499
 584.4722, 135.4172, 148.689
 550.0052, 135.4172, 183.156
 546.5744, 135.4172, 186.587
 543.1433, 135.4172, 190.018
 539.712, 135.4172, 193.449
 536.2803, 135.4172, 196.881
 532.8485, 135.4172, 200.313
 529.4164, 135.4172, 203.745
 525.9841, 135.4173, 207.177
 522.5516, 135.4173, 210.61
 519.8101, 135.4173, 213.351
 518.7288, 135.4173, 214.432
 517.6382, 135.4173, 215.523
 516.4963, 135.4172, 216.665
 515.3095, 135.4172, 217.852
 514.0844, 135.4172, 219.077
 512.8273, 135.4172, 220.334
 511.5447, 135.4173, 221.617
 510.2431, 135.4172, 222.918
 508.929, 135.4172, 224.232
 507.6039, 135.4173, 225.557
 506.1805, 135.4426, 226.981
 504.7676, 135.5142, 228.396
 503.3754, 135.632, 229.793
 502.014, 135.7958, 231.164
 500.6932, 136.0052, 232.501
 499.4234, 136.2599, 233.796
 498.2145, 136.5594, 235.042
 497.0765, 136.9032, 236.231
 496.0195, 137.2906, 237.356
ENDTABLE

XY_TABLE_ID(2)      2 ; Split mu 168 m at 6% grade Segment 1
SEGMENT_XY_TABLE(2) ! table with X (m), Y (m), and calculated station S (m)
 733.1724, 158.6689, 0
 731.6984, 158.6689, 1.474
 731.1469, 158.6689, 2.026
 731.0042, 158.6689, 2.168
 730.8616, 158.6689, 2.311
 730.7191, 158.6689, 2.453
 730.5767, 158.6689, 2.596
 730.4344, 158.6689, 2.738
 730.2922, 158.6689, 2.88
 728.9241, 158.6689, 4.248
 705.9138, 158.6688, 27.259
 682.9036, 158.6687, 50.269
 659.8933, 158.6686, 73.279
 636.883, 158.6685, 96.289
 613.8727, 158.6684, 119.3
 590.8624, 158.6683, 142.31
 577.0563, 158.6682, 156.116
 568.7833, 158.6683, 164.389
 567.7877, 158.6683, 165.385
 566.7924, 158.6683, 166.38
 565.7972, 158.6683, 167.375
 564.8021, 158.6683, 168.37
 563.8071, 158.6683, 169.365
 562.812, 158.6683, 170.36
 561.8168, 158.6683, 171.356
 560.8215, 158.6683, 172.351
 559.8261, 158.6683, 173.346
 558.8304, 158.6683, 174.342
 557.8345, 158.6683, 175.338
 556.8383, 158.6683, 176.334
 555.8417, 158.6683, 177.331
 554.8449, 158.6683, 178.328
 553.8477, 158.6683, 179.325
 552.8502, 158.6683, 180.322
 551.8523, 158.6683, 181.32
 550.8541, 158.6683, 182.318
 549.8555, 158.6683, 183.317
 548.8565, 158.6682, 184.316
 547.8553, 158.6682, 185.317
 546.8519, 158.6682, 186.321
 545.8464, 158.6682, 187.326
 544.8389, 158.6682, 188.334
 543.8295, 158.6682, 189.343
 542.8184, 158.6682, 190.354
 541.8057, 158.6682, 191.367
 540.7916, 158.6682, 192.381
 539.7761, 158.6682, 193.396
 538.7593, 158.6682, 194.413
 537.7416, 158.6682, 195.431
 536.723, 158.6682, 196.449
 535.7035, 158.6682, 197.469
 534.6834, 158.6682, 198.489
 533.6628, 158.6682, 199.51
 532.6418, 158.6682, 200.531
 531.6207, 158.6682, 201.552
 530.5994, 158.6682, 202.573
 526.6431, 158.6263, 206.53
 525.6219, 158.6263, 207.551
 524.6011, 158.6263, 208.572
 523.5684, 158.6263, 209.604
 522.3959, 158.6263, 210.777
 521.077, 158.6263, 212.096
 519.647, 158.6263, 213.526
 518.1404, 158.6263, 215.032
 516.591, 158.6263, 216.582
 515.0318, 158.6263, 218.141
 513.4947, 158.6263, 219.678
 512.0108, 158.6263, 221.162
 510.6101, 158.6263, 222.563
 508.9227, 158.6263, 224.25
 507.7443, 158.6503, 225.429
 506.6666, 158.7215, 226.509
 505.5931, 158.8398, 227.589
 504.5257, 159.0051, 228.669
 503.4666, 159.2169, 229.749
 502.4178, 159.475, 230.829
 501.3814, 159.7787, 231.909
 500.3592, 160.1276, 232.989
 499.3533, 160.5209, 234.069
 498.3656, 160.9579, 235.149
ENDTABLE

XY_TABLE_ID(3)      3 ; Split mu 146 m at 9% grade Segment 1
SEGMENT_XY_TABLE(3) ! table with X (m), Y (m), and calculated station S (m)
 733.15, 182.1044, 0
 731.7446, 182.1044, 1.405
 731.506, 182.1044, 1.644
 731.2678, 182.1044, 1.882
 731.03, 182.1044, 2.12
 730.7924, 182.1044, 2.358
 730.5552, 182.1044, 2.595
 730.3183, 182.1044, 2.832
 730.0817, 182.1044, 3.068
 729.8455, 182.1044, 3.304
 728.9355, 182.1044, 4.215
 706.0662, 182.1044, 27.084
 683.197, 182.1044, 49.953
 660.3278, 182.1044, 72.822
 637.4586, 182.1043, 95.691
 614.5894, 182.1043, 118.561
 591.72, 182.1043, 141.43
 587.7549, 182.1043, 145.395
 586.7646, 182.1043, 146.385
 585.7747, 182.1043, 147.375
 584.7855, 182.1043, 148.365
 583.7967, 182.1043, 149.353
 582.8082, 182.1043, 150.342
 581.8199, 182.1043, 151.33
 580.8317, 182.1043, 152.318
 579.8434, 182.1043, 153.307
 578.855, 182.1043, 154.295
 577.8663, 182.1043, 155.284
 576.8773, 182.1043, 156.273
 575.8879, 182.1043, 157.262
 574.898, 182.1043, 158.252
 573.9076, 182.1043, 159.242
 572.9166, 182.1043, 160.233
 571.9251, 182.1043, 161.225
 570.933, 182.1043, 162.217
 569.9319, 182.1042, 163.218
 568.9285, 182.1042, 164.222
 567.923, 182.1042, 165.227
 566.9155, 182.1042, 166.235
 565.9061, 182.1042, 167.244
 564.895, 182.1042, 168.255
 563.8823, 182.1042, 169.268
 562.8681, 182.1042, 170.282
 561.8526, 182.1042, 171.297
 560.8359, 182.1042, 172.314
 559.8182, 182.1042, 173.332
 558.7995, 182.1042, 174.351
 557.78, 182.1042, 175.37
 556.7599, 182.1042, 176.39
 555.7393, 182.1042, 177.411
 554.7183, 182.1042, 178.432
 553.6972, 182.1042, 179.453
 552.676, 182.1043, 180.474
 526.0005, 182.1044, 207.15
 524.9794, 182.1044, 208.171
 523.9586, 182.1044, 209.191
 522.9382, 182.1044, 210.212
 521.9185, 182.1044, 211.232
 520.8997, 182.1044, 212.25
 519.882, 182.1044, 213.268
 518.8657, 182.1044, 214.284
 517.8511, 182.1044, 215.299
 516.8384, 182.1044, 216.312
 515.8281, 182.1044, 217.322
 514.8204, 182.1044, 218.33
 513.8159, 182.1044, 219.334
 512.482, 182.1044, 220.668
 511.4019, 182.1284, 221.748
 510.3242, 182.1995, 222.828
 509.2507, 182.3179, 223.908
 508.1833, 182.4831, 224.989
 507.1243, 182.695, 226.069
 506.0755, 182.9531, 227.149
 505.039, 183.2568, 228.229
 504.0168, 183.6057, 229.309
 503.0109, 183.999, 230.389
ENDTABLE

XY_TABLE_ID(4)      4 ; Split mu 30 m at 15% grade Segment 1
SEGMENT_XY_TABLE(4) ! table with X (m), Y (m), and calculated station S (m)
 733.1611, 220.9154, 0
 731.7538, 220.9128, 1.407
 730.7549, 220.9103, 2.406
 729.7586, 220.9103, 3.403
 728.7649, 220.9103, 4.396
 727.7739, 220.9103, 5.387
 726.7856, 220.9103, 6.376
 725.8002, 220.9103, 7.361
 724.8177, 220.9103, 8.343
 723.8382, 220.9103, 9.323
 722.8616, 220.9103, 10.3
 721.8881, 220.9103, 11.273
 720.9174, 220.9103, 12.244
 719.9495, 220.9103, 13.212
 718.9844, 220.9103, 14.177
 718.0219, 220.9103, 15.139
 717.0619, 220.9103, 16.099
 694.9122, 220.9103, 38.249
 672.7626, 220.9103, 60.399
 650.613, 220.9103, 82.548
 628.4634, 220.9103, 104.698
 627.5034, 220.9103, 105.658
 626.5409, 220.9103, 106.62
 625.5758, 220.9103, 107.585
 624.608, 220.9103, 108.553
 623.6373, 220.9103, 109.524
 622.6636, 220.9103, 110.498
 621.6871, 220.9103, 111.474
 620.7075, 220.9103, 112.454
 619.725, 220.9103, 113.436
 618.7396, 220.9103, 114.422
 617.7514, 220.9103, 115.41
 616.7604, 220.9103, 116.401
 615.7667, 220.9103, 117.394
 614.7703, 220.9103, 118.391
 613.7715, 220.9103, 119.39
 612.7704, 220.9103, 120.391
 611.767, 220.9103, 121.394
 610.7615, 220.9103, 122.4
 609.754, 220.9103, 123.407
 608.7446, 220.9102, 124.417
 607.7335, 220.9102, 125.428
 606.7208, 220.9102, 126.44
 605.7066, 220.9102, 127.455
 604.6911, 220.9102, 128.47
 603.6744, 220.9102, 129.487
 602.6566, 220.9102, 130.505
 601.638, 220.9102, 131.523
 600.6185, 220.9102, 132.543
 599.5984, 220.9102, 133.563
 598.5778, 220.9102, 134.583
 597.5568, 220.9102, 135.604
 596.5356, 220.9103, 136.626
 595.5144, 220.9078, 137.647
 529.658, 220.9053, 203.503
 528.6368, 220.9053, 204.524
 527.616, 220.9053, 205.545
 526.5956, 220.9053, 206.566
 525.576, 220.9053, 207.585
 524.5571, 220.9053, 208.604
 523.5395, 220.9053, 209.622
 522.5232, 220.9053, 210.638
 521.5085, 220.9053, 211.653
 520.4958, 220.9053, 212.665
 519.4855, 220.9053, 213.676
 518.4778, 220.9053, 214.683
 517.4733, 220.9053, 215.688
 516.1395, 220.9053, 217.022
 515.0595, 220.9292, 218.102
 513.9817, 221.0004, 219.182
 512.9082, 221.1188, 220.262
 511.8409, 221.284, 221.342
 510.7818, 221.4959, 222.422
 509.733, 221.7539, 223.502
 508.6965, 222.0577, 224.582
 507.6744, 222.4065, 225.662
 506.6685, 222.7998, 226.742
 505.6808, 223.2368, 227.822
 504.7132, 223.7167, 228.902
ENDTABLE

XY_TABLE_ID(5)      5 ; Hill 50 m at 6% grade Segment 1
SEGMENT_XY_TABLE(5) ! table with X (m), Y (m), and calculated station S (m)
 980.4153, 151.3537, 0
 979.0113, 151.3537, 1.404
 978.3898, 151.3537, 2.025
 978.2471, 151.3537, 2.168
 978.1045, 151.3537, 2.311
 977.962, 151.3537, 2.453
 977.8196, 151.3537, 2.596
 977.6774, 151.3537, 2.738
 977.5352, 151.3537, 2.88
 976.167, 151.3537, 4.248
 953.1567, 151.3537, 27.259
 944.8647, 151.3537, 35.551
 936.5728, 151.3537, 43.842
 935.5772, 151.3537, 44.838
 934.5818, 151.3537, 45.833
 933.5867, 151.3537, 46.829
 932.5916, 151.3537, 47.824
 931.5966, 151.3537, 48.819
 930.6014, 151.3537, 49.814
 929.6063, 151.3537, 50.809
 928.611, 151.3537, 51.804
 927.6155, 151.3537, 52.8
 926.6198, 151.3537, 53.796
 925.6239, 151.3537, 54.791
 924.6277, 151.3537, 55.788
 923.6312, 151.3537, 56.784
 922.6343, 151.3537, 57.781
 921.6372, 151.3537, 58.778
 920.6396, 151.3537, 59.776
 919.6418, 151.3537, 60.774
 918.6435, 151.3537, 61.772
 917.6449, 151.3537, 62.77
 916.6459, 151.3537, 63.769
 915.6466, 151.3537, 64.769
 914.647, 151.3537, 65.768
 913.647, 151.3537, 66.768
 912.6468, 151.3537, 67.769
 911.6463, 151.3537, 68.769
 910.6456, 151.3537, 69.77
 909.6448, 151.3537, 70.77
 908.6437, 151.3537, 71.772
 907.6426, 151.3537, 72.773
 906.6415, 151.3537, 73.774
 905.6403, 151.3537, 74.775
 904.6393, 151.3537, 75.776
 903.6384, 151.3537, 76.777
 902.6376, 151.3537, 77.778
 901.6372, 151.3537, 78.778
 900.6371, 151.3537, 79.778
 899.5569, 151.3776, 80.859
 898.4792, 151.4488, 81.939
 897.4057, 151.5672, 83.019
 896.3383, 151.7324, 84.099
 895.2793, 151.9443, 85.179
 894.2305, 152.2023, 86.259
 893.194, 152.5061, 87.339
 892.1719, 152.8549, 88.419
 891.166, 153.2483, 89.499
ENDTABLE

XY_TABLE_ID(6)      6 ; Hill 40 m at 9% grade Segment 1
SEGMENT_XY_TABLE(6) ! table with X (m), Y (m), and calculated station S (m)
 980.393, 167.474, 0
 978.9875, 167.474, 1.406
 978.749, 167.474, 1.644
 978.5107, 167.474, 1.882
 978.2729, 167.474, 2.12
 978.0353, 167.474, 2.358
 977.7981, 167.474, 2.595
 977.5612, 167.474, 2.832
 977.3246, 167.474, 3.068
 977.0884, 167.474, 3.305
 976.1784, 167.474, 4.215
 953.3092, 167.474, 27.084
 945.0681, 167.474, 35.325
 944.0778, 167.474, 36.315
 943.0879, 167.474, 37.305
 942.0986, 167.474, 38.294
 941.1099, 167.474, 39.283
 940.1214, 167.474, 40.272
 939.1331, 167.474, 41.26
 938.1449, 167.474, 42.248
 937.1566, 167.474, 43.236
 936.1681, 167.474, 44.225
 935.1795, 167.474, 45.214
 934.1905, 167.474, 46.202
 933.201, 167.474, 47.192
 932.2111, 167.474, 48.182
 931.2208, 167.474, 49.172
 930.2298, 167.474, 50.163
 929.2383, 167.474, 51.155
 928.2462, 167.474, 52.147
 927.2534, 167.474, 53.14
 926.2601, 167.474, 54.133
 925.2662, 167.474, 55.127
 924.2716, 167.474, 56.121
 923.2764, 167.474, 57.117
 922.2807, 167.474, 58.112
 921.2844, 167.474, 59.109
 920.2877, 167.474, 60.105
 919.2903, 167.474, 61.103
 918.2925, 167.474, 62.101
 917.2943, 167.474, 63.099
 916.2957, 167.474, 64.097
 915.2966, 167.474, 65.096
 914.2973, 167.474, 66.096
 913.2976, 167.474, 67.095
 912.2977, 167.474, 68.095
 911.2975, 167.474, 69.096
 910.2972, 167.474, 70.096
 909.2968, 167.474, 71.096
 908.2963, 167.474, 72.097
 907.2957, 167.474, 73.097
 906.2953, 167.474, 74.098
 905.2949, 167.474, 75.098
 904.2947, 167.474, 76.098
 903.2145, 167.4979, 77.179
 902.1368, 167.5691, 78.259
 901.0633, 167.6874, 79.339
 899.996, 167.8527, 80.419
 898.9369, 168.0645, 81.499
 897.8881, 168.3226, 82.579
 896.8516, 168.6263, 83.659
 895.8295, 168.9752, 84.739
 894.8235, 169.3685, 85.819
ENDTABLE

XY_TABLE_ID(7)      7 ; Hill 30 m at 15% grade Segment 1
SEGMENT_XY_TABLE(7) ! table with X (m), Y (m), and calculated station S (m)
 980.4153, 183.5943, 0
 979.0113, 183.5943, 1.404
 978.816, 183.5943, 1.599
 978.6215, 183.5943, 1.794
 978.4279, 183.5943, 1.987
 978.235, 183.5943, 2.18
 978.043, 183.5943, 2.372
 977.8518, 183.5943, 2.563
 977.6614, 183.5943, 2.754
 977.4719, 183.5943, 2.943
 977.2831, 183.5943, 3.132
 977.0953, 183.5943, 3.32
 976.2368, 183.5943, 4.178
 954.0871, 183.5943, 26.328
 953.1271, 183.5943, 27.288
 952.1646, 183.5943, 28.251
 951.1995, 183.5943, 29.216
 950.2316, 183.5943, 30.184
 949.261, 183.5943, 31.154
 948.2873, 183.5943, 32.128
 947.3108, 183.5943, 33.105
 946.3312, 183.5943, 34.084
 945.3488, 183.5943, 35.067
 944.3633, 183.5943, 36.052
 943.3751, 183.5943, 37.04
 942.3841, 183.5943, 38.031
 941.3904, 183.5943, 39.025
 940.394, 183.5943, 40.021
 939.3953, 183.5943, 41.02
 938.3941, 183.5943, 42.021
 937.3907, 183.5943, 43.025
 936.3852, 183.5943, 44.03
 935.3776, 183.5943, 45.038
 934.3683, 183.5943, 46.047
 933.3572, 183.5943, 47.058
 932.3444, 183.5943, 48.071
 931.3303, 183.5943, 49.085
 930.3148, 183.5943, 50.101
 929.2981, 183.5943, 51.117
 928.2803, 183.5943, 52.135
 927.2617, 183.5943, 53.154
 926.2422, 183.5943, 54.173
 925.2221, 183.5943, 55.193
 924.2015, 183.5943, 56.214
 923.1805, 183.5943, 57.235
 922.1594, 183.5943, 58.256
 921.1381, 183.5943, 59.277
 920.117, 183.5943, 60.298
 919.0962, 183.5943, 61.319
 918.0758, 183.5943, 62.34
 917.0561, 183.5943, 63.359
 916.0373, 183.5943, 64.378
 915.0196, 183.5943, 65.396
 914.0034, 183.5943, 66.412
 912.9887, 183.5943, 67.427
 911.976, 183.5943, 68.439
 910.9657, 183.5943, 69.45
 909.958, 183.5943, 70.457
 908.9535, 183.5943, 71.462
 907.9524, 183.5943, 72.463
 906.8721, 183.6182, 73.543
 905.7944, 183.6894, 74.624
 904.7209, 183.8077, 75.704
 903.6536, 183.973, 76.784
 902.5945, 184.1848, 77.864
 901.5457, 184.4429, 78.944
 900.5092, 184.7466, 80.024
 899.4871, 185.0955, 81.104
 898.4811, 185.4888, 82.184
ENDTABLE

XY_TABLE_ID(8)      8 ; 5 mile circle - 10 deg bank Segment 1
SEGMENT_XY_TABLE(8) ! table with X (m), Y (m), and calculated station S (m)
 1258.985, 214.415, 0
 1257.2902, 224.3185, 10.047
 1255.5181, 234.2077, 20.094
 1253.669, 244.0827, 30.141
 1251.7416, 253.9435, 40.188
 1249.7363, 263.7881, 50.235
 1247.6535, 273.6175, 60.283
 1245.4948, 283.4296, 70.329
 1243.2579, 293.2245, 80.376
 1240.9437, 303.0012, 90.423
 1238.5533, 312.7606, 100.471
 1236.0867, 322.4998, 110.518
 1233.543, 332.2188, 120.564
 1230.9221, 341.9185, 130.612
 1228.2258, 351.597, 140.659
 1225.4534, 361.2543, 150.706
 1222.6058, 370.8893, 160.753
 1219.681, 380.5011, 170.8
 1216.6818, 390.0896, 180.847
 1213.6075, 399.6549, 190.894
 1210.457, 409.1949, 200.941
 1207.2321, 418.7107, 210.988
 1203.9329, 428.2002, 221.035
 1200.5587, 437.6645, 231.083
 1197.11, 447.1005, 241.129
 1193.5871, 456.5103, 251.177
 1189.9909, 465.8908, 261.223
 1186.3204, 475.244, 271.271
 1182.5765, 484.567, 281.317
 1178.7596, 493.8607, 291.364
 1174.8692, 503.1242, 301.411
 1170.9063, 512.3573, 311.459
 1166.8714, 521.5582, 321.506
 1162.7641, 530.7278, 331.553
 1158.5845, 539.8642, 341.6
 1154.3333, 548.9671, 351.647
 1150.011, 558.0369, 361.694
 1145.6174, 567.0724, 371.741
 1141.1523, 576.0725, 381.788
 1136.6169, 585.0374, 391.835
 1132.0112, 593.9671, 401.882
 1127.335, 602.8593, 411.929
 1122.5895, 611.7154, 421.977
 1117.7735, 620.533, 432.024
 1112.8893, 629.3124, 442.07
 1107.9356, 638.0535, 452.117
 1102.9145, 646.7561, 462.165
 1097.824, 655.4176, 472.211
 1092.6651, 664.0397, 482.259
 1087.4398, 672.6205, 492.305
 1082.1462, 681.16, 502.353
 1076.7859, 689.658, 512.4
 1071.3594, 698.1129, 522.446
 1065.8653, 706.5254, 532.494
 1060.3061, 714.8945, 542.541
 1054.6811, 723.2193, 552.588
 1048.9907, 731.4997, 562.635
 1043.236, 739.7347, 572.682
 1037.4157, 747.9245, 582.729
 1031.532, 756.0678, 592.776
 1025.5838, 764.1659, 602.824
 1019.5723, 772.2154, 612.87
 1013.4981, 780.2186, 622.917
 1007.3605, 788.1726, 632.964
 1001.1604, 796.0791, 643.012
 994.8988, 803.9362, 653.059
 988.5757, 811.7439, 663.106
 982.191, 819.5012, 673.153
 975.746, 827.2082, 683.199
 969.2393, 834.8648, 693.247
 962.6743, 842.469, 703.293
 956.0485, 850.0217, 713.34
 949.3634, 857.523, 723.388
 942.6206, 864.9699, 733.434
 935.8184, 872.3645, 743.482
 928.9586, 879.7056, 753.529
 922.0412, 886.9922, 763.576
 915.0663, 894.2235, 773.623
 908.0358, 901.4003, 783.67
 900.9478, 908.5217, 793.717
 893.8052, 915.5876, 803.764
 886.6061, 922.596, 813.811
 879.3534, 929.5481, 823.858
 872.0451, 936.4426, 833.905
 864.6832, 943.2797, 843.952
 857.2678, 950.0593, 854
 849.7987, 956.7795, 864.047
 842.2781, 963.4411, 874.094
 834.7048, 970.0424, 884.14
 827.08, 976.585, 894.187
 819.4036, 983.0673, 904.234
 811.6765, 989.4891, 914.282
 803.8989, 995.8493, 924.329
 796.0715, 1002.1491, 934.376
 788.1957, 1008.3863, 944.423
 780.2701, 1014.561, 954.47
 772.2969, 1020.6742, 964.517
 764.2751, 1026.7238, 974.564
 756.2067, 1032.71, 984.611
 748.0906, 1038.6336, 994.659
 739.929, 1044.4916, 1004.705
 731.7216, 1050.2862, 1014.752
 723.4686, 1056.0161, 1024.799
 715.1699, 1061.6806, 1034.846
 706.8276, 1067.2804, 1044.894
 698.4416, 1072.8137, 1054.941
 690.0129, 1078.2804, 1064.987
 681.5406, 1083.6814, 1075.035
 673.0266, 1089.0152, 1085.081
 664.4709, 1094.282, 1095.128
 655.8737, 1099.4815, 1105.175
 647.2356, 1104.6133, 1115.223
 638.5578, 1109.6764, 1125.27
 629.8405, 1114.672, 1135.317
 621.0844, 1119.5979, 1145.364
 612.2896, 1124.4553, 1155.411
 603.4561, 1129.2431, 1165.458
 594.586, 1133.9612, 1175.505
 585.6791, 1138.6095, 1185.552
 576.7355, 1143.1884, 1195.6
 567.7572, 1147.6956, 1205.646
 558.7422, 1152.1332, 1215.694
 549.6935, 1156.499, 1225.741
 540.611, 1160.7932, 1235.787
 531.4939, 1165.0158, 1245.834
 522.345, 1169.1676, 1255.881
 513.1634, 1173.2468, 1265.928
 503.9501, 1177.2533, 1275.975
 494.7051, 1181.1872, 1286.022
 485.4293, 1185.0482, 1296.07
 476.1238, 1188.8367, 1306.117
 466.7885, 1192.5514, 1316.164
 457.4245, 1196.1924, 1326.211
 448.0328, 1199.7608, 1336.258
 438.6123, 1203.2543, 1346.305
 429.1651, 1206.6731, 1356.352
 419.6911, 1210.0181, 1366.399
 410.1914, 1213.2884, 1376.446
 400.666, 1216.4842, 1386.493
 391.1157, 1219.6039, 1396.54
 381.5417, 1222.6499, 1406.587
 371.943, 1225.6192, 1416.634
 362.3225, 1228.5137, 1426.681
 352.6783, 1231.3316, 1436.728
 343.0133, 1234.0745, 1446.775
 333.3265, 1236.7406, 1456.822
 323.619, 1239.3311, 1466.869
 313.8907, 1241.8447, 1476.917
 304.1446, 1244.2814, 1486.963
 294.3788, 1246.6424, 1497.01
 284.5941, 1248.9256, 1507.058
 274.7927, 1251.1317, 1517.104
 264.9736, 1253.2611, 1527.152
 255.1386, 1255.3129, 1537.198
 245.2869, 1257.2877, 1547.246
 235.4204, 1259.1846, 1557.293
 225.5402, 1261.0037, 1567.34
 215.6451, 1262.7449, 1577.387
 205.7363, 1264.4083, 1587.434
 195.8157, 1265.9937, 1597.481
 185.8823, 1267.5014, 1607.528
 175.9371, 1268.9311, 1617.575
 165.9811, 1270.2819, 1627.622
 156.0154, 1271.5547, 1637.669
 146.0398, 1272.7488, 1647.716
 136.0545, 1273.8648, 1657.763
 126.0614, 1274.902, 1667.81
 116.0595, 1275.8604, 1677.858
 106.0518, 1276.7395, 1687.904
 96.0363, 1277.5409, 1697.952
 86.0151, 1278.2633, 1707.999
 75.989, 1278.9069, 1718.046
 65.9582, 1279.4713, 1728.092
 55.9225, 1279.9569, 1738.14
 45.8831, 1280.3634, 1748.187
 35.8419, 1280.6912, 1758.234
 25.7979, 1280.9397, 1768.281
 15.7521, 1281.1095, 1778.328
 5.7055, 1281.2001, 1788.375
 -4.3409, 1281.2118, 1798.422
 -14.3881, 1281.1443, 1808.469
 -24.4341, 1280.9979, 1818.516
 -34.4788, 1280.7715, 1828.563
 -44.5214, 1280.4671, 1838.611
 -54.5607, 1280.0838, 1848.657
 -64.5969, 1279.6212, 1858.704
 -74.6298, 1279.0797, 1868.751
 -84.6575, 1278.4601, 1878.798
 -94.68, 1277.7605, 1888.845
 -104.6973, 1276.9829, 1898.893
 -114.7074, 1276.1261, 1908.939
 -124.7113, 1275.1903, 1918.987
 -134.707, 1274.1763, 1929.034
 -144.6944, 1273.0834, 1939.081
 -154.6726, 1271.9123, 1949.128
 -164.6417, 1270.6631, 1959.175
 -174.6005, 1269.3349, 1969.222
 -184.549, 1267.9284, 1979.269
 -194.4854, 1266.444, 1989.316
 -204.4106, 1264.8811, 1999.363
 -214.3225, 1263.2404, 2009.41
 -224.2212, 1261.5215, 2019.457
 -234.1067, 1259.7256, 2029.504
 -243.977, 1257.8513, 2039.551
 -253.833, 1255.8988, 2049.598
 -263.6729, 1253.8693, 2059.645
 -273.4964, 1251.7637, 2069.692
 -283.3038, 1249.5799, 2079.74
 -293.093, 1247.3187, 2089.787
 -302.8639, 1244.9805, 2099.833
 -312.6166, 1242.5661, 2109.88
 -322.35, 1240.0755, 2119.927
 -332.0632, 1237.5076, 2129.974
 -341.7562, 1234.8635, 2140.022
 -351.4279, 1232.1435, 2150.068
 -361.0784, 1229.3471, 2160.116
 -370.7057, 1226.4752, 2170.162
 -380.3107, 1223.5274, 2180.21
 -389.8924, 1220.5042, 2190.257
 -399.45, 1217.4059, 2200.304
 -408.9822, 1214.2321, 2210.351
 -418.4903, 1210.9833, 2220.399
 -427.971, 1207.661, 2230.445
 -437.4265, 1204.2625, 2240.492
 -446.8548, 1200.7908, 2250.54
 -456.2548, 1197.2449, 2260.586
 -465.6275, 1193.6256, 2270.633
 -474.971, 1189.932, 2280.68
 -484.2852, 1186.1651, 2290.727
 -493.5701, 1182.3259, 2300.775
 -502.8239, 1178.4124, 2310.822
 -512.0461, 1174.4278, 2320.868
 -521.2372, 1170.3695, 2330.915
 -530.3961, 1166.239, 2340.963
 -539.5227, 1162.0373, 2351.01
 -548.6149, 1157.7642, 2361.056
 -557.674, 1153.4187, 2371.104
 -566.6986, 1149.0029, 2381.151
 -575.6881, 1144.5156, 2391.198
 -584.6422, 1139.9582, 2401.245
 -593.5599, 1135.3302, 2411.292
 -602.4405, 1130.632, 2421.339
 -611.2847, 1125.8644, 2431.386
 -620.0906, 1121.0272, 2441.433
 -628.8582, 1116.122, 2451.48
 -637.5874, 1111.1471, 2461.527
 -646.2764, 1106.103, 2471.574
 -654.926, 1100.9915, 2481.621
 -663.5353, 1095.8124, 2491.668
 -672.1034, 1090.565, 2501.716
 -680.63, 1085.251, 2511.763
 -689.1143, 1079.8699, 2521.809
 -697.5563, 1074.4221, 2531.857
 -705.955, 1068.908, 2541.904
 -714.3104, 1063.3273, 2551.951
 -722.6204, 1057.6824, 2561.997
 -730.887, 1051.9718, 2572.045
 -739.1082, 1046.1961, 2582.092
 -747.2831, 1040.3556, 2592.139
 -755.4127, 1034.4517, 2602.186
 -763.4949, 1028.4834, 2612.233
 -771.5307, 1022.4525, 2622.28
 -779.5181, 1016.3583, 2632.327
 -787.4572, 1010.2015, 2642.374
 -795.3479, 1003.9822, 2652.421
 -803.1903, 997.7005, 2662.469
 -810.9822, 991.3582, 2672.515
 -818.7237, 984.9544, 2682.562
 -826.4149, 978.4903, 2692.609
 -834.0547, 971.9654, 2702.656
 -841.644, 965.3801, 2712.704
 -849.18, 958.7363, 2722.751
 -856.6644, 952.0329, 2732.798
 -864.0955, 945.271, 2742.845
 -871.4733, 938.4516, 2752.892
 -878.7965, 931.5736, 2762.939
 -886.0664, 924.6381, 2772.986
 -893.2808, 917.646, 2783.033
 -900.4398, 910.5974, 2793.079
 -907.5443, 903.4922, 2803.127
 -914.5914, 896.3314, 2813.174
 -921.5831, 889.1161, 2823.221
 -928.5172, 881.8452, 2833.268
 -935.3939, 874.5208, 2843.315
 -942.2122, 867.1417, 2853.362
 -948.973, 859.709, 2863.41
 -955.6754, 852.2238, 2873.457
 -962.3182, 844.687, 2883.503
 -968.9015, 837.0976, 2893.55
 -975.4244, 829.4555, 2903.598
 -981.8878, 821.7639, 2913.644
 -988.2907, 814.0207, 2923.692
 -994.6321, 806.2278, 2933.739
 -1000.912, 798.3853, 2943.786
 -1007.1293, 790.4932, 2953.833
 -1013.2852, 782.5535, 2963.879
 -1019.3786, 774.5641, 2973.927
 -1025.4085, 766.5281, 2983.974
 -1031.3747, 758.4445, 2994.021
 -1037.2774, 750.3142, 3004.068
 -1043.1166, 742.1383, 3014.115
 -1048.8902, 733.9157, 3024.162
 -1054.6005, 725.6485, 3034.21
 -1060.244, 717.3366, 3044.256
 -1065.8229, 708.9811, 3054.303
 -1071.3353, 700.5809, 3064.351
 -1076.7823, 692.1391, 3074.397
 -1082.1616, 683.6535, 3084.444
 -1087.4742, 675.1263, 3094.491
 -1092.7203, 666.5575, 3104.538
 -1097.8987, 657.9469, 3114.586
 -1103.0087, 649.2966, 3124.633
 -1108.051, 640.6067, 3134.68
 -1113.0247, 631.8771, 3144.727
 -1117.9289, 623.1088, 3154.773
 -1122.7642, 614.3018, 3164.82
 -1127.5312, 605.4572, 3174.868
 -1132.2274, 596.5747, 3184.915
 -1136.8539, 587.6566, 3194.962
 -1141.41, 578.7019, 3205.009
 -1145.8952, 569.7123, 3215.056
 -1150.3099, 560.6871, 3225.103
 -1154.6538, 551.6272, 3235.15
 -1158.9252, 542.5335, 3245.197
 -1163.1258, 533.4071, 3255.244
 -1167.2547, 524.247, 3265.291
 -1171.3111, 515.0552, 3275.339
 -1175.2946, 505.8317, 3285.385
 -1179.2066, 496.5774, 3295.433
 -1183.0447, 487.2924, 3305.48
 -1186.8101, 477.9776, 3315.527
 -1190.502, 468.6331, 3325.574
 -1194.1202, 459.2609, 3335.62
 -1197.6645, 449.859, 3345.668
 -1201.1341, 440.4303, 3355.715
 -1204.53, 430.9748, 3365.762
 -1207.8522, 421.4926, 3375.809
 -1211.0987, 411.9846, 3385.856
 -1214.2712, 402.452, 3395.903
 -1217.3671, 392.8935, 3405.95
 -1220.3893, 383.3123, 3415.997
 -1223.3356, 373.7063, 3426.044
 -1226.2054, 364.0786, 3436.091
 -1229.0002, 354.4281, 3446.138
 -1231.7192, 344.7558, 3456.185
 -1234.3614, 335.0618, 3466.233
 -1236.9278, 325.3481, 3476.28
 -1239.4175, 315.6145, 3486.327
 -1241.8304, 305.8612, 3496.374
 -1244.1663, 296.0901, 3506.42
 -1246.4255, 286.3002, 3516.468
 -1248.6079, 276.4926, 3526.515
 -1250.7134, 266.6692, 3536.562
 -1252.7401, 256.829, 3546.608
 -1254.6909, 246.9731, 3556.655
 -1256.5629, 237.1013, 3566.703
 -1258.358, 227.2158, 3576.75
 -1260.0753, 217.3175, 3586.796
 -1261.7147, 207.4045, 3596.844
 -1263.2751, 197.4796, 3606.891
 -1264.7589, 187.543, 3616.938
 -1266.1635, 177.5945, 3626.985
 -1267.4894, 167.6353, 3637.032
 -1268.7372, 157.6663, 3647.079
 -1269.9074, 147.6875, 3657.126
 -1270.9984, 137.7, 3667.173
 -1272.0107, 127.7036, 3677.22
 -1272.9449, 117.7004, 3687.267
 -1273.8001, 107.6895, 3697.314
 -1274.5766, 97.6728, 3707.361
 -1275.2741, 87.6493, 3717.409
 -1275.8925, 77.622, 3727.455
 -1276.4321, 67.5889, 3737.503
 -1276.8926, 57.553, 3747.549
 -1277.2753, 47.5133, 3757.596
 -1277.5779, 37.4708, 3767.643
 -1277.8016, 27.4256, 3777.691
 -1277.9462, 17.3795, 3787.738
 -1278.0119, 7.3327, 3797.785
 -1277.9995, -2.714, 3807.832
 -1277.9072, -12.7604, 3817.879
 -1277.7358, -22.8066, 3827.926
 -1277.4853, -32.8506, 3837.974
 -1277.1559, -42.8914, 3848.02
 -1276.7475, -52.931, 3858.068
 -1276.2611, -62.9654, 3868.114
 -1275.6944, -72.9966, 3878.161
 -1275.0488, -83.0235, 3888.209
 -1274.3253, -93.0443, 3898.256
 -1273.5225, -103.0588, 3908.302
 -1272.6418, -113.0672, 3918.349
 -1271.681, -123.0683, 3928.396
 -1270.642, -133.0612, 3938.443
 -1269.525, -143.0469, 3948.491
 -1268.3288, -153.0224, 3958.538
 -1267.0546, -162.9877, 3968.585
 -1265.7023, -172.9437, 3978.632
 -1264.2708, -182.8885, 3988.679
 -1262.7623, -192.8211, 3998.726
 -1261.1746, -202.7425, 4008.773
 -1259.5097, -212.6497, 4018.82
 -1257.7668, -222.5447, 4028.867
 -1255.9456, -232.4254, 4038.914
 -1254.0474, -242.2919, 4048.961
 -1252.071, -252.1422, 4059.008
 -1250.0175, -261.9773, 4069.055
 -1247.8867, -271.7962, 4079.103
 -1245.6787, -281.5978, 4089.15
 -1243.3936, -291.3811, 4099.197
 -1241.0324, -301.1463, 4109.243
 -1238.5938, -310.8932, 4119.291
 -1236.0782, -320.6199, 4129.337
 -1233.4864, -330.3273, 4139.385
 -1230.8183, -340.0136, 4149.432
 -1228.075, -349.6785, 4159.478
 -1225.2545, -359.3222, 4169.526
 -1222.3586, -368.9428, 4179.573
 -1219.3876, -378.54, 4189.62
 -1216.3404, -388.114, 4199.667
 -1213.2188, -397.6638, 4209.714
 -1210.0212, -407.1883, 4219.761
 -1206.7502, -416.6875, 4229.807
 -1203.4029, -426.1615, 4239.855
 -1199.9824, -435.6082, 4249.902
 -1196.4876, -445.0278, 4259.949
 -1192.9185, -454.419, 4269.996
 -1189.2751, -463.7829, 4280.044
 -1185.5595, -473.1176, 4290.091
 -1181.7694, -482.4221, 4300.137
 -1177.9062, -491.6972, 4310.185
 -1173.9706, -500.9411, 4320.232
 -1169.9626, -510.1538, 4330.279
 -1165.8824, -519.3351, 4340.326
 -1161.7299, -528.4842, 4350.373
 -1157.5051, -537.6, 4360.42
 -1153.2087, -546.6814, 4370.467
 -1148.8421, -555.7297, 4380.513
 -1144.4033, -564.7436, 4390.561
 -1139.894, -573.7222, 4400.608
 -1135.3143, -582.6645, 4410.655
 -1130.6644, -591.5705, 4420.702
 -1125.9449, -600.4403, 4430.749
 -1121.1552, -609.2727, 4440.797
 -1116.2971, -618.0658, 4450.843
 -1111.3694, -626.8216, 4460.89
 -1106.3726, -635.5381, 4470.937
 -1101.3073, -644.2153, 4480.984
 -1096.1745, -652.8522, 4491.031
 -1090.9744, -661.4487, 4501.078
 -1085.7059, -670.0039, 4511.126
 -1080.3708, -678.5168, 4521.172
 -1074.9684, -686.9883, 4531.22
 -1069.4997, -695.4165, 4541.267
 -1063.9644, -703.8014, 4551.314
 -1058.3647, -712.1429, 4561.361
 -1052.6986, -720.4402, 4571.408
 -1046.9669, -728.6919, 4581.455
 -1041.1717, -736.8984, 4591.501
 -1035.3112, -745.0596, 4601.549
 -1029.3873, -753.1743, 4611.596
 -1023.3987, -761.2427, 4621.644
 -1017.3478, -769.2627, 4631.69
 -1011.2344, -777.2353, 4641.737
 -1005.0574, -785.1596, 4651.784
 -998.819, -793.0345, 4661.831
 -992.5181, -800.861, 4671.879
 -986.1567, -808.6371, 4681.925
 -979.7338, -816.3628, 4691.972
 -973.2503, -824.0382, 4702.019
 -966.7064, -831.6622, 4712.067
 -960.1038, -839.2347, 4722.113
 -953.4409, -846.7549, 4732.161
 -946.7193, -854.2226, 4742.208
 -939.9393, -861.6369, 4752.255
 -933.1007, -868.9978, 4762.302
 -926.2045, -876.3042, 4772.349
 -919.2519, -883.5562, 4782.395
 -912.2416, -890.7538, 4792.443
 -905.1748, -897.896, 4802.49
 -898.0524, -904.9816, 4812.537
 -890.8746, -912.0119, 4822.584
 -883.642, -918.9857, 4832.631
 -876.3539, -925.901, 4842.678
 -869.0123, -932.76, 4852.725
 -861.617, -939.5603, 4862.772
 -854.1682, -946.3034, 4872.819
 -846.6658, -952.9868, 4882.867
 -839.1118, -959.6109, 4892.914
 -831.5062, -966.1753, 4902.961
 -823.8489, -972.6804, 4913.008
 -816.1411, -979.1239, 4923.054
 -808.3827, -985.507, 4933.101
 -800.5736, -991.8296, 4943.149
 -792.7159, -998.0896, 4953.195
 -784.8087, -1004.2881, 4963.242
 -776.8527, -1010.4242, 4973.29
 -768.8491, -1016.4976, 4983.337
 -760.798, -1022.5086, 4993.384
 -752.7001, -1028.4549, 5003.431
 -744.5557, -1034.3379, 5013.478
 -736.3646, -1040.1564, 5023.525
 -728.1288, -1045.91, 5033.572
 -719.8474, -1051.5993, 5043.619
 -711.5212, -1057.223, 5053.667
 -703.1515, -1062.7801, 5063.713
 -694.7381, -1068.2727, 5073.761
 -686.282, -1073.6976, 5083.807
 -677.7833, -1079.0571, 5093.855
 -669.2429, -1084.3489, 5103.902
 -660.6617, -1089.5732, 5113.948
 -652.0391, -1094.7298, 5123.995
 -643.3756, -1099.8188, 5134.043
 -634.6735, -1104.8393, 5144.089
 -625.9316, -1109.7922, 5154.137
 -617.1511, -1114.6743, 5164.183
 -608.3319, -1119.489, 5174.231
 -599.476, -1124.2328, 5184.277
 -590.5823, -1128.9072, 5194.325
 -581.652, -1133.5118, 5204.372
 -572.686, -1138.0459, 5214.42
 -563.6853, -1142.5093, 5224.466
 -554.6488, -1146.9011, 5234.513
 -545.5787, -1151.2232, 5244.561
 -536.4748, -1155.4725, 5254.607
 -527.3382, -1159.6502, 5264.654
 -518.1678, -1163.7564, 5274.702
 -508.9658, -1167.7898, 5284.749
 -499.733, -1171.7516, 5294.796
 -490.4685, -1175.6394, 5304.843
 -481.1743, -1179.4547, 5314.89
 -471.8503, -1183.1974, 5324.937
 -462.4976, -1186.8663, 5334.983
 -453.1151, -1190.4614, 5345.031
 -443.7059, -1193.9819, 5355.077
 -434.2679, -1197.4295, 5365.125
 -424.8043, -1200.8016, 5375.172
 -415.3138, -1204.0998, 5385.219
 -405.7976, -1207.3232, 5395.266
 -396.2567, -1210.4721, 5405.313
 -386.691, -1213.545, 5415.36
 -377.1026, -1216.5432, 5425.407
 -367.4894, -1219.4658, 5435.454
 -357.8544, -1222.3124, 5445.501
 -348.1967, -1225.0832, 5455.548
 -338.5182, -1227.7773, 5465.595
 -328.8179, -1230.3966, 5475.643
 -319.0979, -1232.9381, 5485.689
 -309.3581, -1235.4038, 5495.736
 -299.5996, -1237.7927, 5505.783
 -289.8222, -1240.1047, 5515.83
 -280.0261, -1242.3399, 5525.878
 -270.2143, -1244.4985, 5535.924
 -260.3846, -1246.5791, 5545.972
 -250.5392, -1248.5818, 5556.019
 -240.679, -1250.5077, 5566.065
 -230.803, -1252.3568, 5576.113
 -220.9133, -1254.1269, 5586.16
 -211.0097, -1255.8191, 5596.207
 -201.0934, -1257.4336, 5606.254
 -191.1643, -1258.971, 5616.301
 -181.2244, -1260.4287, 5626.348
 -171.2718, -1261.8096, 5636.395
 -161.3103, -1263.1114, 5646.442
 -151.3371, -1264.3343, 5656.49
 -141.356, -1265.4795, 5666.536
 -131.3652, -1266.5466, 5676.584
 -121.3676, -1267.5338, 5686.63
 -111.3612, -1268.443, 5696.678
 -101.349, -1269.2734, 5706.724
 -91.33, -1270.0249, 5716.771
 -81.3053, -1270.6983, 5726.819
 -71.2757, -1271.2917, 5736.866
 -61.2424, -1271.8074, 5746.912
 -51.2042, -1272.2429, 5756.96
 -41.1633, -1272.6006, 5767.007
 -31.1206, -1272.8783, 5777.054
 -21.0751, -1273.0768, 5787.101
 -13.5847, -1273.1739, 5794.592
 -3.5388, -1273.2355, 5804.638
 6.5079, -1273.2171, 5814.685
 16.5544, -1273.1207, 5824.732
 26.6006, -1272.9444, 5834.78
 36.6437, -1272.69, 5844.826
 46.6855, -1272.3556, 5854.873
 56.7242, -1271.9432, 5864.921
 66.7596, -1271.4507, 5874.968
 76.7898, -1270.8801, 5885.015
 86.8158, -1270.2306, 5895.062
 96.8366, -1269.5019, 5905.109
 106.8512, -1268.6942, 5915.156
 116.8586, -1267.8085, 5925.202
 126.8598, -1266.8435, 5935.25
 136.8527, -1265.8008, 5945.297
 146.8365, -1264.6786, 5955.344
 156.812, -1263.4775, 5965.391
 166.7773, -1262.1992, 5975.438
 176.7324, -1260.8419, 5985.486
 186.6763, -1259.4054, 5995.533
 196.608, -1257.8918, 6005.579
 206.5284, -1256.3003, 6015.626
 216.4356, -1254.6302, 6025.673
 226.3296, -1252.8834, 6035.72
 236.2094, -1251.0572, 6045.768
 246.075, -1249.154, 6055.815
 255.9243, -1247.1736, 6065.861
 265.7584, -1245.1159, 6075.909
 275.5763, -1242.9801, 6085.956
 285.376, -1240.7673, 6096.002
 295.1594, -1238.4781, 6106.05
 304.9236, -1236.1118, 6116.097
 314.6686, -1233.6684, 6126.144
 324.3953, -1231.1488, 6136.191
 334.1008, -1228.5528, 6146.238
 343.786, -1225.8797, 6156.285
 353.4501, -1223.1313, 6166.333
 363.0918, -1220.3067, 6176.38
 372.7104, -1217.407, 6186.426
 382.3067, -1214.431, 6196.473
 391.8797, -1211.3799, 6206.52
 401.4275, -1208.2533, 6216.567
 410.9511, -1205.0515, 6226.615
 420.4494, -1201.7755, 6236.662
 429.9204, -1198.4252, 6246.708
 439.3662, -1194.9997, 6256.756
 448.7837, -1191.4999, 6266.803
 458.174, -1187.9269, 6276.85
 467.536, -1184.2793, 6286.897
 476.8688, -1180.5587, 6296.944
 486.1713, -1176.7648, 6306.991
 495.4445, -1172.8973, 6317.038
 504.6864, -1168.9577, 6327.085
 513.8981, -1164.9449, 6337.132
 523.0775, -1160.8606, 6347.179
 532.2235, -1156.703, 6357.226
 541.3373, -1152.4751, 6367.273
 550.4178, -1148.1749, 6377.32
 559.4642, -1143.8032, 6387.367
 568.4752, -1139.3603, 6397.414
 577.4517, -1134.847, 6407.461
 586.3921, -1130.2633, 6417.508
 595.2963, -1125.6092, 6427.555
 604.164, -1120.8849, 6437.603
 612.9935, -1116.0921, 6447.65
 621.7856, -1111.229, 6457.697
 630.5384, -1106.2975, 6467.743
 639.253, -1101.2965, 6477.791
 647.9272, -1096.228, 6487.837
 656.5621, -1091.0904, 6497.885
 665.1556, -1085.8863, 6507.932
 673.7079, -1080.6136, 6517.979
 682.2189, -1075.2745, 6528.026
 690.6874, -1069.8681, 6538.073
 699.1136, -1064.3954, 6548.12
 707.4955, -1058.857, 6558.167
 715.8351, -1053.2523, 6568.215
 724.1293, -1047.5831, 6578.261
 732.3782, -1041.8484, 6588.308
 740.5828, -1036.0483, 6598.355
 748.7409, -1030.1848, 6608.402
 756.8527, -1024.2568, 6618.449
 764.9181, -1018.2652, 6628.496
 772.9352, -1012.2102, 6638.543
 780.9048, -1006.0918, 6648.591
 788.8262, -999.9118, 6658.637
 796.6991, -993.6694, 6668.685
 804.5217, -987.3655, 6678.731
 812.2958, -981, 6688.779
 820.0186, -974.5741, 6698.826
 827.691, -968.0866, 6708.873
 835.3119, -961.5397, 6718.92
 842.8805, -954.9331, 6728.967
 850.3976, -948.2661, 6739.014
 857.8624, -941.5415, 6749.061
 865.2737, -934.7574, 6759.109
 872.6306, -927.9158, 6769.155
 879.9341, -921.0166, 6779.202
 887.1832, -914.0599, 6789.249
 894.3778, -907.0466, 6799.297
 901.516, -899.9767, 6809.343
 908.5997, -892.8514, 6819.391
 915.626, -885.6705, 6829.437
 922.5959, -878.4339, 6839.485
 929.5083, -871.1427, 6849.532
 936.3641, -863.7981, 6859.579
 943.1606, -856.3988, 6869.626
 949.8996, -848.947, 6879.673
 956.5802, -841.4425, 6889.72
 963.2002, -833.8854, 6899.767
 969.7618, -826.2767, 6909.814
 976.2629, -818.6166, 6919.861
 982.7034, -810.9056, 6929.908
 989.0825, -803.1432, 6939.955
 995.4011, -795.3321, 6950.002
 1001.6581, -787.4714, 6960.049
 1007.8527, -779.561, 6970.096
 1013.9857, -771.6031, 6980.143
 1020.0552, -763.5965, 6990.19
 1026.0611, -755.5423, 7000.237
 1032.0046, -747.4414, 7010.284
 1037.8836, -739.2939, 7020.331
 1043.6979, -731.1007, 7030.378
 1049.4477, -722.8619, 7040.425
 1055.133, -714.5775, 7050.472
 1060.7527, -706.2493, 7060.519
 1066.3068, -697.8766, 7070.567
 1071.7945, -689.4611, 7080.613
 1077.2165, -681.002, 7090.661
 1082.572, -672.5013, 7100.708
 1087.8598, -663.9588, 7110.755
 1093.0801, -655.3747, 7120.802
 1098.2326, -646.7488, 7130.849
 1103.3177, -638.0843, 7140.896
 1108.3342, -629.3791, 7150.943
 1113.2819, -620.6343, 7160.99
 1118.1612, -611.8517, 7171.037
 1122.971, -603.0305, 7181.084
 1127.711, -594.1725, 7191.131
 1132.3813, -585.2768, 7201.178
 1136.9819, -576.3445, 7211.226
 1141.511, -567.3764, 7221.272
 1145.9705, -558.3736, 7231.319
 1150.3592, -549.3351, 7241.367
 1154.6763, -540.2629, 7251.414
 1158.9218, -531.157, 7261.461
 1163.0944, -522.0184, 7271.507
 1167.1966, -512.846, 7281.555
 1171.226, -503.6429, 7291.601
 1175.1827, -494.4081, 7301.648
 1179.0668, -485.1415, 7311.696
 1182.8781, -475.8452, 7321.743
 1186.6157, -466.5202, 7331.789
 1190.2806, -457.1644, 7341.837
 1193.8708, -447.7809, 7351.884
 1197.3882, -438.3697, 7361.931
 1200.8309, -428.9307, 7371.978
 1204.199, -419.465, 7382.025
 1207.4924, -409.9735, 7392.072
 1210.7116, -400.4563, 7402.119
 1213.8555, -390.9133, 7412.167
 1216.9245, -381.3465, 7422.214
 1219.9178, -371.7561, 7432.26
 1222.8362, -362.1418, 7442.308
 1225.6779, -352.5058, 7452.354
 1228.4438, -342.847, 7462.401
 1231.1348, -333.1665, 7472.449
 1233.7482, -323.4652, 7482.496
 1236.2857, -313.7441, 7492.543
 1238.7475, -304.0033, 7502.59
 1241.1313, -294.2427, 7512.637
 1243.4394, -284.4643, 7522.684
 1245.6696, -274.6682, 7532.731
 1247.8232, -264.8552, 7542.778
 1249.8996, -255.0245, 7552.825
 1251.8984, -245.1781, 7562.872
 1253.8193, -235.3168, 7572.919
 1255.6634, -225.4398, 7582.967
 1257.4285, -215.55, 7593.013
 1259.1168, -205.6454, 7603.06
 1260.7272, -195.7281, 7613.107
 1262.2588, -185.7989, 7623.154
 1263.7125, -175.857, 7633.202
 1265.0882, -165.9053, 7643.248
 1266.3851, -155.9417, 7653.296
 1267.6042, -145.9695, 7663.342
 1268.7453, -135.9874, 7673.389
 1269.8062, -125.9965, 7683.436
 1270.7896, -115.9969, 7693.484
 1271.6938, -105.9914, 7703.53
 1272.5201, -95.9782, 7713.578
 1273.2665, -85.9592, 7723.624
 1273.9351, -75.9344, 7733.671
 1274.5245, -65.9038, 7743.719
 1275.0351, -55.8704, 7753.766
 1275.4656, -45.8322, 7763.813
 1275.8183, -35.7912, 7773.86
 1276.0919, -25.7485, 7783.907
 1276.2866, -15.7029, 7793.954
 1276.4023, -5.6566, 7804.001
 1276.4379, 4.3906, 7814.048
 1276.3956, 14.4375, 7824.095
 1276.2741, 24.4832, 7834.142
 1276.0727, 34.5288, 7844.19
 1275.7934, 44.5721, 7854.237
 1275.435, 54.6122, 7864.283
 1274.9965, 64.6501, 7874.331
 1274.4799, 74.6837, 7884.378
 1273.8845, 84.7132, 7894.425
 1273.2099, 94.7375, 7904.472
 1272.4571, 104.7565, 7914.519
 1271.6253, 114.7683, 7924.565
 1270.7147, 124.775, 7934.613
 1269.7247, 134.7724, 7944.66
 1268.6568, 144.7626, 7954.707
 1267.5096, 154.7446, 7964.754
 1266.2846, 164.7164, 7974.801
 1264.9811, 174.6789, 7984.849
 1263.5999, 184.6302, 7994.895
 1262.1395, 194.5704, 8004.942
 1260.6008, 204.4993, 8014.99
 1258.985, 214.415, 8025.036
ENDTABLE

XY_TABLE_ID(9)      9 ; Hill 80 m at 3% grade Segment 1
SEGMENT_XY_TABLE(9) ! table with X (m), Y (m), and calculated station S (m)
 980.4153, 135.4172, 0
 979.0113, 135.4172, 1.404
 978.3327, 135.4172, 2.083
 978.1328, 135.4172, 2.283
 977.9329, 135.4172, 2.482
 977.7331, 135.4172, 2.682
 977.5333, 135.4172, 2.882
 976.2848, 135.4172, 4.13
 928.095, 135.4172, 52.32
 907.3225, 135.4172, 73.093
 906.2754, 135.4172, 74.14
 905.2767, 135.4172, 75.139
 904.278, 135.4172, 76.137
 903.2792, 135.4172, 77.136
 902.2805, 135.4172, 78.135
 901.2817, 135.4172, 79.134
 900.283, 135.4172, 80.132
 899.2842, 135.4172, 81.131
 898.2855, 135.4172, 82.13
 897.2831, 135.4173, 83.132
 896.206, 135.4426, 84.21
 895.131, 135.5142, 85.287
 894.0601, 135.632, 86.364
 892.9952, 135.7958, 87.442
 891.9384, 136.0052, 88.519
 890.8915, 136.2599, 89.597
 889.8566, 136.5594, 90.674
 888.8356, 136.9032, 91.751
 887.8303, 137.2906, 92.829
ENDTABLE

XY_TABLE_ID(10)    10 ; Split mu - asphalt/wet Segment 1
SEGMENT_XY_TABLE(10) ! table with X (m), Y (m), and calculated station S (m)
 133.6096, 492.4636, 0
 933.6099, 492.4637, 800
ENDTABLE

XY_TABLE_ID(11)    11 ; Staggered bumps (8 km/h) Segment 1
SEGMENT_XY_TABLE(11) ! table with X (m), Y (m), and calculated station S (m)
 87.4675, 711.3886, 0
 93.6499, 711.4742, 6.183
 99.0807, 711.7035, 11.619
 104.7638, 712.0742, 17.314
 112.6555, 712.7807, 25.237
 121.8732, 713.833, 34.515
 132.47, 715.2519, 45.206
 142.8258, 716.7459, 55.669
 152.5167, 718.1384, 65.459
 162.3188, 719.4419, 75.348
 170.0653, 720.3322, 83.145
 175.07, 720.8164, 88.173
 180.1269, 721.2171, 93.246
 185.2744, 721.5197, 98.403
 190.0256, 721.6926, 103.157
 195.0917, 721.7517, 108.223
 698.0948, 721.7515, 611.226
 718.0079, 721.6839, 631.14
 721.0892, 721.9979, 634.237
 723.8544, 722.8837, 637.141
 726.524, 724.3308, 640.177
 729.3455, 726.4888, 643.729
 733.6253, 730.7276, 649.753
 738.2189, 735.6737, 656.503
 742.4569, 739.6471, 662.312
 747.6658, 743.1297, 668.578
 753.776, 745.2618, 675.05
 759.2733, 745.7102, 680.565
 764.6974, 745.1135, 686.022
 769.9272, 743.5683, 691.475
 774.8877, 741.0315, 697.047
 779.2859, 737.6182, 702.614
 782.3, 734.3433, 707.065
 783.6492, 732.4974, 709.352
 785.0612, 730.1709, 712.073
 786.2324, 727.7414, 714.77
 787.0508, 725.5271, 717.131
 787.815, 722.3924, 720.357
 788.0948, 719.5369, 723.226
ENDTABLE

XY_TABLE_ID(12)    12 ; Sine bumps out of phase (20 km/h) Segment 1
SEGMENT_XY_TABLE(12) ! table with X (m), Y (m), and calculated station S (m)
 87.4675, 711.3797, 0
 185.0917, 710.3291, 97.63
 195.0917, 710.2877, 107.63
 695.0917, 710.2876, 607.63
 697.9954, 710.2903, 610.534
 704.5124, 710.2529, 617.051
 706.848, 710.1536, 619.388
 709.2843, 709.9546, 621.833
 711.3353, 709.6887, 623.901
 713.4008, 709.3142, 626
 715.6715, 708.7679, 628.336
 718.1265, 708.016, 630.903
 720.8242, 706.7171, 633.897
 723.3517, 704.8894, 637.016
 728.7904, 699.6668, 644.557
 732.8389, 695.3922, 650.444
 737.6528, 690.6636, 657.192
 742.3149, 686.8731, 663.201
 748.0832, 683.4967, 669.884
 751.2972, 682.2522, 673.331
 753.6974, 681.6068, 675.816
 756.82, 681.1115, 678.978
 759.9708, 680.9829, 682.131
 763.072, 681.216, 685.241
 766.0983, 681.8172, 688.327
 768.5164, 682.5845, 690.864
 770.9228, 683.6246, 693.485
 773.4219, 685.0281, 696.352
 775.3544, 686.3674, 698.703
 776.8882, 687.6092, 700.676
 779.1551, 689.7822, 703.816
 781.6478, 692.7527, 707.694
 783.0538, 694.7873, 710.167
 784.0586, 696.4582, 712.117
 785.6197, 699.58, 715.608
 786.8614, 702.8754, 719.129
 787.8251, 706.8884, 723.256
 788.1223, 710.326, 726.707
ENDTABLE

XY_TABLE_ID(13)    13 ; Sine bumps in phase (20 km/h) Segment 1
SEGMENT_XY_TABLE(13) ! table with X (m), Y (m), and calculated station S (m)
 87.4675, 711.3797, 0
 91.3454, 711.3399, 3.878
 95.2758, 711.2383, 7.81
 98.8297, 711.0978, 11.366
 102.2779, 710.9213, 14.819
 105.0122, 710.7556, 17.559
 108.4446, 710.5183, 20.999
 115.807, 709.9147, 28.386
 123.3133, 709.1945, 35.927
 132.5372, 708.2153, 45.203
 137.8984, 707.6211, 50.597
 152.6049, 706.0098, 65.391
 163.0405, 704.9861, 75.877
 166.3756, 704.6967, 79.225
 170.2575, 704.3894, 83.119
 175.0944, 704.0573, 87.967
 181.0618, 703.7381, 93.943
 185.2758, 703.5814, 98.16
 195.0917, 703.4741, 107.976
 451.5932, 703.474, 364.478
 695.0916, 703.4739, 607.976
 720.0868, 703.3621, 632.972
 723.7629, 702.6059, 636.725
 726.1716, 701.3377, 639.447
 728.2634, 699.7974, 642.045
 730.4212, 697.8657, 644.941
 734.574, 693.6317, 650.871
 739.105, 689.4072, 657.066
 741.5461, 687.5685, 660.122
 744.3418, 685.6488, 663.514
 746.7557, 684.2233, 666.317
 749.8842, 682.759, 669.771
 752.9035, 681.773, 672.947
 755.9438, 681.1824, 676.045
 758.9529, 680.9538, 679.062
 762.076, 681.0409, 682.187
 764.8618, 681.4389, 685.001
 767.9553, 682.3309, 688.22
 770.9287, 683.6551, 691.475
 773.2736, 685.0401, 694.199
 775.0796, 686.3243, 696.415
 777.4882, 688.3534, 699.564
 779.4936, 690.3457, 702.391
 781.632, 692.8189, 705.66
 782.8918, 694.5136, 707.772
 784.4233, 696.9665, 710.664
 785.6221, 699.3375, 713.321
 786.6985, 702.0749, 716.262
 787.3459, 704.2992, 718.579
 787.7693, 706.353, 720.676
 788.0455, 708.6173, 722.957
 788.1223, 710.326, 724.667
ENDTABLE

XY_TABLE_ID(14)    14 ; Urban tour Segment 1
SEGMENT_XY_TABLE(14) ! table with X (m), Y (m), and calculated station S (m)
 680.8157, -740.8939, 0
 580.8802, -740.8991, 99.936
 574.6884, -740.8546, 106.127
 568.3625, -740.7347, 112.454
 559.2914, -740.453, 121.53
 549.8492, -740.0533, 130.981
 540.6666, -739.5939, 140.175
 531.9373, -739.123, 148.917
 522.8609, -738.6292, 158.007
 512.8464, -738.117, 168.034
 504.7637, -737.7568, 176.125
 495.3718, -737.4302, 185.522
 487.972, -737.2643, 192.924
 480.8829, -737.1985, 200.013
 475.2211, -737.1694, 205.675
 469.3734, -737.0712, 211.524
 463.4519, -736.9109, 217.448
 457.5391, -736.6991, 223.364
 451.539, -736.4409, 229.37
 445.0824, -736.1257, 235.834
 437.848, -735.7409, 243.079
 430.871, -735.3538, 250.066
 423.8438, -734.9638, 257.104
 417.8504, -734.6428, 263.106
 411.4189, -734.3219, 269.546
 404.8371, -734.0312, 276.134
 398.7581, -733.8077, 282.217
 392.3175, -733.6294, 288.66
 386.2497, -733.5273, 294.729
 346.7665, -733.4985, 334.212
 344.0021, -733.4992, 336.977
 343.5728, -733.48, 337.406
 343.1228, -733.4287, 337.859
 342.6715, -733.3536, 338.317
 342.113, -733.2339, 338.888
 341.5661, -733.0907, 339.453
 341.0459, -732.9308, 339.997
 340.6125, -732.7779, 340.457
 340.0698, -732.5556, 341.044
 339.5335, -732.2873, 341.643
 339.0147, -731.9749, 342.249
 338.5512, -731.6545, 342.812
 338.166, -731.3504, 343.303
 337.7767, -731.0067, 343.822
 337.419, -730.6649, 344.317
 337.1165, -730.3655, 344.743
 336.7656, -729.9617, 345.278
 336.4739, -729.5864, 345.753
 336.201, -729.1971, 346.228
 335.9478, -728.7949, 346.704
 335.7146, -728.3807, 347.179
 335.5021, -727.9555, 347.654
 335.3109, -727.5203, 348.13
 335.1414, -727.0762, 348.605
 334.9939, -726.6244, 349.08
 334.869, -726.1658, 349.556
 334.7668, -725.7015, 350.031
 334.6876, -725.2328, 350.506
 334.6316, -724.7608, 350.982
 334.5989, -724.2866, 351.457
 334.5897, -723.8088, 351.935
 334.5895, -632.289, 443.455
 334.5471, -631.4169, 444.328
 334.4117, -630.2649, 445.488
 334.0638, -628.9128, 446.884
 333.5889, -627.6161, 448.265
 332.994, -626.3819, 449.635
 332.2864, -625.2176, 450.997
 331.4731, -624.1302, 452.355
 330.5613, -623.127, 453.711
 329.5581, -622.2153, 455.067
 328.4707, -621.4019, 456.424
 327.3063, -620.6943, 457.787
 326.0722, -620.0994, 459.157
 324.7755, -619.6245, 460.538
 323.4234, -619.2766, 461.934
 322.0232, -619.0627, 463.351
 320.8114, -618.9917, 464.564
 318.5872, -618.9904, 466.789
 315.9546, -618.9898, 469.421
 245.498, -618.9952, 539.878
 220.4905, -618.9952, 564.885
 148.3121, -618.9952, 637.064
 123.8156, -618.9952, 661.56
 87.9119, -618.9951, 697.464
 62.7642, -619.0343, 722.612
 60.9361, -619.0183, 724.44
 59.1177, -618.9558, 726.259
 57.3015, -618.846, 728.079
 53.6808, -618.4849, 731.717
 51.8787, -618.2338, 733.537
 50.0838, -617.936, 735.356
 48.2972, -617.5915, 737.176
 46.5201, -617.2007, 738.996
 44.7539, -616.7638, 740.815
 42.9996, -616.2811, 742.634
 41.2585, -615.7529, 744.454
 39.5317, -615.1797, 746.273
 37.8203, -614.5616, 748.093
 36.1257, -613.8993, 749.912
 34.4488, -613.1931, 751.732
 32.7909, -612.4436, 753.551
 31.153, -611.6511, 755.371
 29.5363, -610.8164, 757.19
 27.9419, -609.9398, 759.01
 26.3708, -609.0221, 760.829
 24.8241, -608.0638, 762.649
 23.3029, -607.0657, 764.468
 21.8081, -606.0282, 766.288
 20.3409, -604.9523, 768.107
 18.9021, -603.8385, 769.927
 17.4927, -602.6877, 771.746
 16.1139, -601.5006, 773.566
 14.7663, -600.2781, 775.385
 13.451, -599.0209, 777.205
 12.2079, -597.7417, 778.988
 11.0227, -596.4021, 780.777
 9.8998, -595.0097, 782.566
 8.8417, -593.5675, 784.355
 7.8504, -592.0786, 786.143
 6.9283, -590.546, 787.932
 6.0769, -588.9729, 789.721
 5.2984, -587.3625, 791.509
 4.594, -585.7184, 793.298
 3.9655, -584.0437, 795.087
 3.414, -582.3421, 796.875
 2.9408, -580.6172, 798.664
 2.5468, -578.8724, 800.453
 2.2328, -577.1115, 802.241
 1.9995, -575.3381, 804.03
 1.8474, -573.5558, 805.819
 1.7767, -571.7685, 807.608
 1.7713, -569.9297, 809.446
 1.7713, -568.0621, 811.314
 1.7713, -566.2064, 813.17
 1.7755, -564.776, 814.6
 1.834, -563.4984, 815.879
 2.136, -560.3309, 819.061
 2.8391, -555.7026, 823.742
 3.6865, -551.295, 828.231
 4.7253, -546.5204, 833.117
 7.3898, -535.4009, 844.551
 11.0103, -520.1746, 860.202
 12.3922, -514.3286, 866.209
 13.9952, -508.0574, 872.682
 14.6404, -505.5317, 875.289
 15.4211, -502.3769, 878.539
 16.0454, -499.648, 881.338
 16.3644, -498.0599, 882.958
 16.5535, -496.9293, 884.104
 16.6967, -495.3119, 885.728
 16.6595, -493.2914, 887.749
 16.3739, -490.7897, 890.267
 15.8103, -488.3355, 892.785
 14.9758, -485.9598, 895.303
 13.8807, -483.6923, 897.821
 12.5388, -481.5616, 900.339
 10.9671, -479.5943, 902.857
 9.1851, -477.8152, 905.375
 7.2153, -476.2466, 907.893
 5.0824, -474.9082, 910.411
 2.8132, -473.8167, 912.929
 0.4362, -472.9859, 915.447
 -2.0189, -472.4263, 917.965
 -4.5212, -472.1448, 920.484
 -7.0392, -472.1449, 923.002
 -9.5415, -472.4267, 925.52
 -11.9965, -472.9867, 928.038
 -14.3734, -473.8177, 930.556
 -16.6425, -474.9094, 933.074
 -18.7752, -476.2481, 935.592
 -20.7448, -477.8169, 938.11
 -22.5266, -479.5963, 940.628
 -24.0981, -481.5637, 943.146
 -25.4397, -483.6946, 945.664
 -26.5345, -485.9622, 948.182
 -27.3688, -488.338, 950.7
 -27.9321, -490.7922, 953.218
 -28.2174, -493.2941, 955.736
 -28.2545, -495.3121, 957.755
 -28.2428, -498.297, 960.739
 -28.2428, -545.0184, 1007.461
 -28.2428, -569.0323, 1031.475
 -28.2567, -600.965, 1063.407
 -28.2706, -619.6517, 1082.094
 -28.2707, -650.4347, 1112.877
 -28.2708, -663.8534, 1126.296
 -28.2709, -681.1908, 1143.633
 -28.2709, -700.4983, 1162.941
 -28.271, -719.185, 1181.627
 -28.2711, -725.1354, 1187.578
 -28.358, -777.213, 1239.656
 -28.3571, -924.4829, 1386.925
 -28.358, -967.7342, 1430.177
 -28.2548, -1129.6578, 1592.1
 -28.2549, -1134.0056, 1596.448
 -27.848, -1139.6773, 1602.134
 -26.5844, -1145.2652, 1607.863
 -24.4925, -1150.5987, 1613.593
 -21.6202, -1155.5558, 1619.322
 -18.0332, -1160.0231, 1625.051
 -13.8135, -1163.8982, 1630.78
 -9.0577, -1167.0926, 1636.509
 -3.8745, -1169.5333, 1642.238
 1.6175, -1171.1644, 1647.967
 7.2927, -1171.9486, 1653.696
 12.2035, -1172.0206, 1658.608
 134.1195, -1172.0206, 1780.524
 137.4302, -1172.0333, 1783.834
 142.1126, -1171.9501, 1788.517
 146.7992, -1171.6894, 1793.211
 151.4726, -1171.2518, 1797.905
 156.1261, -1170.638, 1802.599
 160.7531, -1169.8487, 1807.293
 165.3469, -1168.885, 1811.987
 169.9011, -1167.7484, 1816.68
 174.409, -1166.4404, 1821.374
 178.8642, -1164.963, 1826.068
 183.2604, -1163.3182, 1830.762
 187.5914, -1161.5084, 1835.456
 191.8508, -1159.5362, 1840.15
 196.0326, -1157.4044, 1844.843
 200.1308, -1155.1161, 1849.537
 204.1396, -1152.6744, 1854.231
 208.0533, -1150.0831, 1858.925
 211.8662, -1147.3456, 1863.619
 215.5729, -1144.4659, 1868.313
 219.1681, -1141.4482, 1873.006
 222.6466, -1138.2967, 1877.7
 229.031, -1131.9934, 1886.672
 235.1784, -1125.846, 1895.366
 241.3271, -1119.6974, 1904.061
 247.4757, -1113.5488, 1912.757
 253.6244, -1107.4002, 1921.452
 259.7731, -1101.2516, 1930.148
 265.9216, -1095.1031, 1938.843
 274.1384, -1086.6825, 1950.608
 282.2024, -1078.109, 1962.378
 288.196, -1071.6246, 1971.208
 294.179, -1065.1294, 1980.039
 300.1834, -1058.6556, 1988.869
 304.2123, -1054.3662, 1994.754
 308.1255, -1049.5744, 2000.94
 310.2198, -1046.9977, 2004.261
 312.2191, -1044.3641, 2007.567
 313.9538, -1041.8399, 2010.63
 315.808, -1038.8269, 2014.168
 317.374, -1035.9192, 2017.471
 318.7807, -1032.9311, 2020.773
 320.024, -1029.8714, 2024.076
 321.1001, -1026.7491, 2027.378
 322.006, -1023.5733, 2030.681
 322.7391, -1020.3531, 2033.983
 323.2573, -1017.3305, 2037.05
 323.6785, -1013.8175, 2040.588
 323.8822, -1010.5212, 2043.891
 323.9221, -1007.3734, 2047.039
 323.9194, -1004.1067, 2050.306
 323.9302, -1000.8503, 2053.562
 324.0096, -997.6751, 2056.738
 324.2087, -994.603, 2059.817
 324.5239, -991.7435, 2062.694
 324.9169, -989.0208, 2065.445
 325.4283, -986.5009, 2068.016
 326.0646, -984.2095, 2070.394
 326.856, -982.1729, 2072.579
 327.5117, -980.7973, 2074.103
 328.4106, -979.2308, 2075.909
 329.4612, -977.5143, 2077.921
 330.3579, -976.4552, 2079.309
 331.3762, -975.4605, 2080.733
 332.3835, -974.6275, 2082.04
 333.7646, -973.6612, 2083.725
 335.0421, -972.904, 2085.21
 336.4552, -972.185, 2086.796
 337.8228, -971.5858, 2088.289
 339.3929, -970.9955, 2089.966
 341.1127, -970.4515, 2091.77
 342.7267, -970.0268, 2093.439
 344.6072, -969.5766, 2095.373
 346.6799, -969.1269, 2097.494
 348.6909, -968.745, 2099.541
 351.0749, -968.4103, 2101.948
 353.7838, -968.1437, 2104.67
 356.7734, -967.9888, 2107.664
 359.9974, -967.8908, 2110.889
 363.4155, -967.8407, 2114.307
 366.9889, -967.829, 2117.881
 370.6793, -967.8464, 2121.571
 378.2035, -967.9076, 2129.096
 477.0153, -967.9085, 2227.908
 496.9643, -967.9087, 2247.857
 504.5103, -967.9088, 2255.403
 526.4212, -967.909, 2277.314
 575.8271, -967.9095, 2326.719
 576.6829, -967.8881, 2327.575
 577.4744, -967.7857, 2328.374
 578.2509, -967.6003, 2329.172
 579.0035, -967.3338, 2329.97
 579.7237, -966.9895, 2330.769
 580.4035, -966.5709, 2331.567
 581.0355, -966.0829, 2332.365
 581.6122, -965.5308, 2333.164
 582.1276, -964.9209, 2333.962
 582.5756, -964.2599, 2334.761
 582.9514, -963.5553, 2335.559
 583.2507, -962.8149, 2336.358
 583.4701, -962.047, 2337.157
 583.6072, -961.2601, 2337.955
 583.6605, -960.4632, 2338.754
 583.6292, -959.665, 2339.553
 583.5139, -958.8824, 2340.344
 583.3157, -958.1162, 2341.135
 583.0369, -957.3749, 2341.927
 582.6805, -956.6669, 2342.72
 582.2507, -956, 2343.513
 581.7521, -955.3819, 2344.307
 581.1903, -954.8193, 2345.103
 580.5716, -954.3186, 2345.898
 579.903, -953.8853, 2346.695
 579.1918, -953.5244, 2347.493
 578.4461, -953.2398, 2348.291
 577.6741, -953.0348, 2349.09
 576.8847, -952.9117, 2349.889
 575.8271, -952.8686, 2350.947
 526.4213, -952.8714, 2400.353
 504.5103, -952.8726, 2422.264
 496.9644, -952.873, 2429.81
 477.0154, -952.8741, 2449.759
 378.2039, -952.8796, 2548.57
 374.7929, -952.8949, 2551.981
 371.7691, -952.8849, 2555.005
 369.935, -952.8671, 2556.839
 366.8193, -952.7409, 2559.958
 365.2817, -952.6421, 2561.498
 362.423, -952.3384, 2564.373
 359.7021, -951.9159, 2567.127
 356.6571, -951.3652, 2570.221
 355.1096, -950.9875, 2571.814
 353.821, -950.5285, 2573.182
 351.7087, -949.5793, 2575.498
 350.4383, -948.8425, 2576.966
 348.6452, -947.6325, 2579.129
 347.4352, -946.7346, 2580.636
 345.4794, -945.2124, 2583.114
 343.5672, -943.6231, 2585.601
 341.1007, -941.5131, 2588.847
 339.8494, -940.4496, 2590.489
 338.7953, -939.5715, 2591.861
 337.6919, -938.679, 2593.28
 336.4179, -937.6937, 2594.891
 335.1802, -936.7944, 2596.421
 333.935, -935.9908, 2597.903
 332.6961, -935.3161, 2599.313
 331.3135, -934.6933, 2600.83
 329.7912, -934.1494, 2602.446
 328.4358, -933.779, 2603.851
 326.9183, -933.482, 2605.398
 325.2848, -933.2926, 2607.042
 323.7544, -933.2322, 2608.574
 322.2301, -933.2891, 2610.099
 320.7353, -933.4571, 2611.603
 320.0592, -933.5845, 2612.291
 319.2744, -933.7323, 2613.09
 317.852, -934.1105, 2614.562
 316.4727, -934.5876, 2616.021
 315.1406, -935.1595, 2617.471
 313.86, -935.8218, 2618.913
 312.635, -936.5706, 2620.348
 311.4695, -937.4017, 2621.78
 310.3676, -938.311, 2623.208
 309.333, -939.2945, 2624.636
 308.3699, -940.3484, 2626.063
 307.4821, -941.4686, 2627.493
 306.6737, -942.6511, 2628.925
 305.8621, -944.0682, 2630.558
 305.3112, -945.1876, 2631.806
 304.7655, -946.5334, 2633.258
 304.3156, -947.9252, 2634.721
 303.9659, -949.3588, 2636.197
 303.7204, -950.8297, 2637.688
 303.5793, -952.3819, 2639.246
 303.579, -953.3134, 2640.178
 303.5786, -954.4186, 2641.283
 303.707, -955.9297, 2642.8
 303.9459, -957.4082, 2644.297
 304.2902, -958.8495, 2645.779
 304.7355, -960.2491, 2647.248
 305.2776, -961.6025, 2648.706
 305.9123, -962.9054, 2650.155
 306.6354, -964.1537, 2651.598
 307.4428, -965.3434, 2653.035
 308.3303, -966.4704, 2654.47
 309.514, -967.7413, 2656.207
 310.3294, -968.5206, 2657.335
 311.4331, -969.4358, 2658.768
 312.6009, -970.2722, 2660.205
 313.8287, -971.0259, 2661.646
 314.3223, -971.2823, 2662.202
 315.1126, -971.6927, 2663.092
 316.4485, -972.2684, 2664.547
 317.832, -972.7488, 2666.011
 319.2589, -973.1296, 2667.488
 320.7247, -973.4067, 2668.98
 322.2247, -973.5758, 2670.49
 322.956, -973.6032, 2671.221
 323.7543, -973.6331, 2672.02
 325.3298, -973.5724, 2673.597
 327.1629, -973.3365, 2675.445
 328.3819, -973.099, 2676.687
 329.8479, -972.6953, 2678.208
 331.2672, -972.1864, 2679.715
 332.6353, -971.577, 2681.213
 333.9473, -970.8717, 2682.703
 335.1988, -970.0749, 2684.186
 336.3855, -969.1914, 2685.666
 337.503, -968.2255, 2687.143
 338.1063, -967.6222, 2687.996
 338.5469, -967.1816, 2688.619
 339.5128, -966.0641, 2690.096
 340.3963, -964.8774, 2691.576
 341.1931, -963.6259, 2693.059
 341.5835, -962.8996, 2693.884
 341.8984, -962.3138, 2694.549
 342.2133, -961.6069, 2695.323
 342.5078, -960.9459, 2696.046
 343.0167, -959.5265, 2697.554
 343.4203, -958.0605, 2699.075
 343.7142, -956.5527, 2700.611
 343.8937, -955.0084, 2702.166
 343.9514, -953.514, 2703.661
 343.8937, -951.8569, 2705.319
 343.7142, -950.3125, 2706.874
 343.504, -948.7038, 2708.497
 343.2748, -947.2372, 2709.981
 343.0053, -945.7271, 2711.515
 342.7111, -944.243, 2713.028
 342.3377, -942.5205, 2714.79
 341.9683, -940.9334, 2716.42
 341.5627, -939.2817, 2718.121
 341.1828, -937.792, 2719.658
 340.8621, -936.5627, 2720.928
 340.454, -935.2013, 2722.35
 340.1792, -934.2654, 2723.325
 339.9338, -933.2829, 2724.338
 339.6711, -932.2596, 2725.394
 339.4651, -931.3016, 2726.374
 339.2725, -930.3453, 2727.35
 339.0983, -929.2883, 2728.421
 338.8063, -926.9009, 2730.826
 338.5863, -924.1909, 2733.545
 338.4315, -921.2038, 2736.536
 338.3336, -917.9819, 2739.76
 338.3031, -916.2954, 2741.446
 338.2734, -912.7959, 2744.946
 337.0335, -849.1874, 2808.567
 336.6988, -844.5191, 2813.247
 336.4362, -840.6956, 2817.079
 336.1902, -836.8721, 2820.911
 335.9273, -833.0486, 2824.743
 335.6727, -829.2251, 2828.575
 335.4484, -825.4017, 2832.405
 335.2519, -821.5782, 2836.234
 335.0802, -817.7547, 2840.061
 334.9134, -813.9313, 2843.888
 334.7491, -810.1078, 2847.715
 334.6393, -806.2843, 2851.54
 334.5953, -802.453, 2855.372
 334.5897, -800.5418, 2857.283
 334.5897, -777.19, 2880.635
 334.6416, -776.2345, 2881.592
 334.7026, -775.7632, 2882.067
 334.7867, -775.2953, 2882.542
 334.8938, -774.8322, 2883.018
 335.0236, -774.3749, 2883.493
 335.1757, -773.9246, 2883.968
 335.3499, -773.4823, 2884.444
 335.5457, -773.0492, 2884.919
 335.7626, -772.6263, 2885.394
 336.0001, -772.2145, 2885.87
 336.2577, -771.815, 2886.345
 336.5345, -771.4286, 2886.82
 336.8302, -771.0564, 2887.296
 337.1435, -770.7, 2887.77
 337.468, -770.3544, 2888.244
 337.6845, -770.1465, 2888.544
 338.1661, -769.7355, 2889.178
 338.3857, -769.5677, 2889.454
 338.782, -769.2911, 2889.937
 339.179, -769.0433, 2890.405
 339.6212, -768.7972, 2890.911
 340.0828, -768.5701, 2891.426
 340.6055, -768.3457, 2891.995
 341.1979, -768.1299, 2892.625
 341.6911, -767.9793, 2893.141
 342.1421, -767.8636, 2893.606
 342.7194, -767.7456, 2894.196
 343.3683, -767.6532, 2894.851
 343.9615, -767.6069, 2895.446
 344.3996, -767.597, 2895.884
 380.8899, -767.597, 2932.375
 480.8873, -767.5974, 3032.372
 552.499, -767.5982, 3103.984
 627.8129, -767.5969, 3179.298
 680.8157, -767.5969, 3232.3
 683.4943, -767.5965, 3234.979
 686.0989, -767.5998, 3237.584
 690.042, -767.6199, 3241.527
 692.7117, -767.6487, 3244.197
 695.4277, -767.6941, 3246.913
 698.202, -767.7599, 3249.688
 701.0461, -767.8496, 3252.534
 703.972, -767.967, 3255.462
 706.9914, -768.1158, 3258.485
 710.116, -768.2997, 3261.615
 713.3577, -768.5224, 3264.864
 716.7279, -768.7876, 3268.245
 720.2385, -769.0993, 3271.769
 723.8637, -769.4575, 3275.412
 728.6861, -770.1603, 3280.285
 733.5087, -771.0779, 3285.195
 735.9069, -771.6044, 3287.65
 738.2945, -772.1698, 3290.103
 740.6701, -772.7694, 3292.554
 743.0323, -773.3984, 3294.998
 745.3799, -774.0519, 3297.435
 750.0258, -775.4135, 3302.276
 754.5978, -776.8152, 3307.058
 759.0867, -778.2179, 3311.761
 763.4842, -779.5821, 3316.366
 767.7834, -780.8683, 3320.853
 771.9788, -782.0359, 3325.208
 776.0666, -783.0437, 3329.418
 780.0461, -783.8486, 3333.478
 783.9181, -784.4041, 3337.39
 785.8146, -784.5726, 3339.294
 787.7294, -784.6609, 3341.211
 789.6625, -784.6071, 3343.144
 791.5301, -784.4501, 3345.019
 793.3687, -784.1916, 3346.875
 795.1749, -783.8346, 3348.716
 796.9452, -783.3818, 3350.544
 798.6768, -782.8361, 3352.359
 800.3663, -782.2005, 3354.164
 802.011, -781.4779, 3355.961
 803.6078, -780.6712, 3357.75
 805.1539, -779.7834, 3359.533
 806.6465, -778.8172, 3361.311
 808.0828, -777.7756, 3363.085
 809.4601, -776.6614, 3364.856
 810.7758, -775.4772, 3366.627
 812.027, -774.2259, 3368.396
 813.2112, -772.9103, 3370.166
 814.3256, -771.5329, 3371.938
 815.3671, -770.0966, 3373.712
 816.3333, -768.604, 3375.49
 817.2211, -767.0579, 3377.273
 818.0278, -765.4612, 3379.062
 818.7504, -763.8164, 3380.858
 819.386, -762.1269, 3382.664
 819.9316, -760.3954, 3384.479
 820.3845, -758.625, 3386.306
 820.7415, -756.8188, 3388.148
 820.9999, -754.9802, 3390.004
 821.157, -753.1126, 3391.878
 821.2099, -751.2193, 3393.772
 821.157, -749.326, 3395.667
 820.9999, -747.4585, 3397.541
 820.7415, -745.6199, 3399.397
 820.3845, -743.8138, 3401.238
 819.9316, -742.0433, 3403.066
 819.386, -740.3119, 3404.881
 818.7504, -738.6222, 3406.686
 818.0278, -736.9776, 3408.483
 817.2211, -735.3808, 3410.272
 816.3333, -733.8348, 3412.055
 815.3671, -732.3422, 3413.833
 814.3255, -730.9059, 3415.607
 813.2113, -729.5285, 3417.378
 812.0272, -728.2128, 3419.149
 810.7758, -726.9615, 3420.918
 809.4601, -725.7774, 3422.688
 808.0828, -724.6631, 3424.46
 806.6464, -723.6215, 3426.234
 805.1539, -722.6554, 3428.012
 803.6078, -721.7675, 3429.795
 802.011, -720.9609, 3431.584
 800.3664, -720.2383, 3433.38
 798.6768, -719.6026, 3435.186
 796.9453, -719.057, 3437.001
 795.1748, -718.6042, 3438.828
 793.3687, -718.2471, 3440.67
 791.5301, -717.9887, 3442.526
 789.6625, -717.8316, 3444.4
 787.731, -717.7781, 3446.333
 785.8345, -717.8604, 3448.231
 783.955, -718.0126, 3450.117
 782.0467, -718.2309, 3452.037
 780.1096, -718.5097, 3453.994
 778.1435, -718.8437, 3455.989
 776.1484, -719.2279, 3458.02
 772.0722, -720.1276, 3462.195
 767.8837, -721.1715, 3466.511
 763.5873, -722.3238, 3470.96
 759.1893, -723.5495, 3475.525
 754.697, -724.8139, 3480.192
 750.1188, -726.0829, 3484.943
 745.4638, -727.3222, 3489.76
 740.7417, -728.4981, 3494.626
 738.3588, -729.0517, 3497.073
 735.9629, -729.577, 3499.526
 733.5556, -730.0697, 3501.983
 731.1381, -730.5257, 3504.443
 728.7116, -730.941, 3506.905
 726.2778, -731.3113, 3509.366
 723.8647, -731.6295, 3511.8
 720.2384, -731.9878, 3515.444
 716.7279, -732.2994, 3518.969
 713.3577, -732.5647, 3522.349
 710.116, -732.7875, 3525.599
 706.9914, -732.9713, 3528.729
 703.972, -733.1201, 3531.752
 701.0461, -733.2375, 3534.68
 696.8069, -733.3628, 3538.921
 692.7117, -733.4383, 3543.017
 688.7209, -733.4765, 3547.008
 684.7952, -733.4896, 3550.934
 680.8157, -733.4939, 3554.913
 580.8802, -733.4991, 3654.849
ENDTABLE

XY_TABLE_ID(15)    15 ; Handling course Segment 1
SEGMENT_XY_TABLE(15) ! table with X (m), Y (m), and calculated station S (m)
 909.7618, -210.2707, 0
 914.7609, -210.3557, 5
 919.7556, -210.5856, 10
 924.7311, -211.0734, 14.999
 929.6555, -211.9289, 19.997
 934.4814, -213.2264, 24.995
 939.1365, -215.0461, 29.993
 943.5483, -217.3927, 34.99
 947.6562, -220.2369, 39.986
 951.3374, -223.6135, 44.981
 954.4324, -227.5331, 49.976
 956.9218, -231.8648, 54.972
 958.8047, -236.4929, 59.968
 960.145, -241.3079, 64.966
 961.0292, -246.227, 69.964
 961.589, -251.1954, 74.964
 962.0604, -256.1732, 79.964
 962.4654, -261.1567, 84.964
 962.8362, -266.1428, 89.964
 963.1931, -271.13, 94.964
 963.5378, -276.1181, 99.964
 963.8715, -281.107, 104.964
 964.1891, -286.0968, 109.964
 964.4827, -291.0882, 114.964
 964.7512, -296.0809, 119.964
 965.0016, -301.0746, 124.964
 965.232, -306.0693, 129.964
 965.4402, -311.065, 134.964
 965.6225, -316.0616, 139.964
 965.6235, -321.0601, 144.962
 965.1509, -326.0356, 149.96
 964.1822, -330.9385, 154.958
 962.7035, -335.7124, 159.955
 960.7186, -340.2985, 164.953
 958.238, -344.6369, 169.95
 955.2825, -348.6663, 174.947
 951.8921, -352.3377, 179.945
 948.1537, -355.6559, 184.943
 944.1551, -358.6555, 189.942
 939.9174, -361.307, 194.941
 935.4467, -363.5418, 199.939
 930.8072, -365.4013, 204.937
 926.0286, -366.8681, 209.936
 921.1446, -367.932, 214.934
 916.1869, -368.5729, 219.933
 911.2117, -368.3557, 224.913
 906.2015, -368.5257, 229.926
 901.2566, -367.7964, 234.925
 896.4018, -366.6086, 239.923
 891.6866, -364.9512, 244.921
 887.16, -362.8327, 249.919
 882.865, -360.2769, 254.916
 878.8309, -357.3262, 259.915
 875.0969, -354.004, 264.913
 871.7399, -350.3023, 269.91
 868.8088, -346.2544, 274.907
 866.3002, -341.9314, 279.906
 864.0625, -337.4602, 284.905
 861.8428, -332.98, 289.905
 859.5831, -328.5198, 294.905
 857.2998, -324.0715, 299.905
 854.9934, -319.6353, 304.905
 852.663, -315.2116, 309.905
 850.3168, -310.7962, 314.905
 847.9429, -306.3959, 319.905
 845.3023, -302.1524, 324.903
 842.2076, -298.2288, 329.9
 838.6634, -294.7062, 334.897
 834.7042, -291.6589, 339.894
 830.3569, -289.1987, 344.889
 825.6712, -287.4677, 349.884
 820.7878, -286.4109, 354.88
 815.8095, -285.9827, 359.877
 810.8162, -286.1753, 364.874
 805.8638, -286.8563, 369.873
 800.9341, -287.6917, 374.873
 795.9783, -288.3487, 379.872
 790.9874, -288.6228, 384.871
 785.9918, -288.4556, 389.869
 781.0257, -287.8841, 394.868
 776.1078, -286.9859, 399.867
 771.2572, -285.777, 404.866
 766.4654, -284.3502, 409.866
 761.7244, -282.7624, 414.866
 757.0388, -281.0182, 419.865
 752.4058, -279.1382, 424.865
 747.8294, -277.1248, 429.865
 743.317, -274.9715, 434.865
 738.8678, -272.6905, 439.865
 734.4858, -270.2829, 444.864
 730.1739, -267.752, 449.864
 725.9294, -265.1093, 454.864
 721.7205, -262.4104, 459.864
 717.5202, -259.6979, 464.864
 713.3166, -256.9907, 469.864
 709.1111, -254.2862, 474.864
 704.9038, -251.5846, 479.864
 700.6938, -248.8872, 484.864
 696.4365, -246.2655, 489.864
 692.0754, -243.8213, 494.863
 687.5801, -241.6337, 499.863
 682.9606, -239.723, 504.862
 678.2255, -238.1199, 509.861
 673.3951, -236.8328, 514.86
 668.485, -235.8952, 519.858
 663.5167, -235.3446, 524.857
 658.5201, -235.213, 529.856
 653.5309, -235.5165, 534.854
 648.5868, -236.2518, 539.852
 643.7295, -237.4298, 544.851
 639.0121, -239.0804, 549.848
 634.475, -241.1768, 554.846
 630.1483, -243.6797, 559.845
 626.0395, -246.5263, 564.843
 622.1807, -249.7039, 569.842
 618.5553, -253.146, 574.841
 615.1153, -256.7738, 579.841
 611.8823, -260.5856, 584.839
 608.8987, -264.5978, 589.839
 606.2453, -268.8337, 594.837
 604.001, -273.2995, 599.835
 602.1672, -277.9494, 604.834
 600.7635, -282.7464, 609.832
 599.8141, -287.6536, 614.83
 599.3016, -292.6257, 619.829
 599.221, -297.6235, 624.827
 599.5219, -302.6134, 629.826
 600.1386, -307.5745, 634.825
 601.0377, -312.4924, 639.825
 602.1423, -317.3685, 644.824
 603.4554, -322.1926, 649.824
 604.9879, -326.9516, 654.824
 606.7216, -331.6409, 659.823
 608.6664, -336.2467, 664.823
 610.9905, -341.0861, 670.191
 613.1481, -345.1827, 674.821
 615.6723, -349.4983, 679.821
 618.3619, -353.7129, 684.821
 621.196, -357.8319, 689.82
 624.1502, -361.8655, 694.82
 627.2183, -365.8132, 699.82
 630.4037, -369.6671, 704.82
 633.6965, -373.4295, 709.82
 637.0908, -377.1006, 714.819
 640.5956, -380.6662, 719.819
 644.2196, -384.1108, 724.819
 647.9586, -387.5251, 729.882
 651.8062, -390.6231, 734.822
 655.7557, -393.6888, 739.822
 659.8111, -396.6129, 744.822
 663.9706, -399.3872, 749.821
 668.2268, -402.0104, 754.821
 672.5727, -404.4825, 759.821
 676.9946, -406.8159, 764.821
 681.4807, -409.0233, 769.82
 686.0367, -411.0827, 774.82
 690.6443, -413.0238, 779.82
 695.3403, -414.738, 784.819
 700.1067, -416.2467, 789.819
 704.9404, -417.5242, 794.818
 709.8268, -418.5818, 799.818
 714.7613, -419.3841, 804.817
 719.7332, -419.907, 809.816
 724.7269, -420.1454, 814.816
 729.7264, -420.126, 819.815
 734.7201, -419.8827, 824.815
 739.7021, -419.4618, 829.815
 744.6733, -418.9271, 834.815
 749.6357, -418.3144, 839.815
 798.8615, -412.021, 889.441
 848.0873, -405.7276, 939.068
 853.0707, -405.3206, 944.068
 858.0587, -404.9745, 949.068
 863.0525, -404.7292, 954.067
 868.0515, -404.6444, 959.067
 873.0502, -404.7445, 964.067
 878.0395, -405.0641, 969.066
 883.0067, -405.6311, 974.066
 887.9355, -406.4674, 979.065
 892.8056, -407.5963, 984.064
 897.5887, -409.0478, 989.063
 902.2572, -410.8352, 994.062
 906.7917, -412.9403, 999.061
 911.1826, -415.3306, 1004.06
 915.4167, -417.9884, 1009.06
 919.4816, -420.8989, 1014.059
 923.3872, -424.0199, 1019.058
 927.0987, -427.3692, 1024.058
 930.6014, -430.9356, 1029.057
 933.856, -434.7301, 1034.056
 936.8275, -438.7499, 1039.054
 939.4987, -442.9755, 1044.054
 941.826, -447.3991, 1049.052
 943.7425, -452.015, 1054.05
 945.1952, -456.7969, 1059.048
 946.1431, -461.7038, 1064.045
 946.5583, -466.6842, 1069.043
 946.4683, -471.6814, 1074.041
 945.921, -476.6498, 1079.039
 944.97, -481.557, 1084.038
 943.5911, -486.3616, 1089.036
 941.8029, -491.029, 1094.035
 939.6157, -495.5238, 1099.033
 937.056, -499.8183, 1104.033
 934.144, -503.8793, 1109.03
 930.8914, -507.6747, 1114.028
 927.3789, -511.2317, 1119.027
 923.5986, -514.5024, 1124.026
 919.5924, -517.4925, 1129.025
 915.3753, -520.1771, 1134.024
 910.9701, -522.5382, 1139.022
 906.3831, -524.524, 1144.021
 901.6601, -526.1636, 1149.02
 896.8561, -527.5473, 1154.02
 891.9704, -528.6042, 1159.018
 887.0239, -529.3281, 1164.018
 882.045, -529.7804, 1169.017
 877.0505, -530.0077, 1174.017
 872.0509, -530.0227, 1179.016
 867.0538, -529.8575, 1184.016
 862.0637, -529.5466, 1189.016
 857.0813, -529.1278, 1194.016
 852.1058, -528.6334, 1199.016
 847.137, -528.0771, 1204.016
 842.1683, -527.5188, 1209.016
 837.1978, -526.9755, 1214.016
 832.2253, -526.4521, 1219.016
 827.2427, -526.0364, 1224.016
 822.2548, -525.6895, 1229.016
 817.2628, -525.4095, 1234.015
 812.2681, -525.1794, 1239.015
 807.2714, -525.0013, 1244.015
 802.2716, -524.9831, 1249.015
 797.2732, -525.0992, 1254.015
 792.2778, -525.3136, 1259.015
 787.2854, -525.589, 1264.015
 782.2929, -525.8625, 1269.015
 777.2966, -526.0488, 1274.015
 772.2969, -526.0617, 1279.014
 767.2996, -525.9056, 1284.014
 762.3118, -525.5617, 1289.014
 757.3464, -524.9795, 1294.013
 752.4317, -524.0673, 1299.012
 747.6167, -522.727, 1304.01
 742.9692, -520.8905, 1309.007
 738.5234, -518.6054, 1314.006
 734.2825, -515.9589, 1319.005
 730.2521, -513.0023, 1324.003
 726.4387, -509.7699, 1329.002
 722.8148, -506.3255, 1334.002
 719.3409, -502.7296, 1339.002
 715.9526, -499.0527, 1344.002
 712.5738, -495.3671, 1349.002
 709.1744, -491.7006, 1354.002
 705.7587, -488.0491, 1359.002
 702.3269, -484.4128, 1364.002
 698.877, -480.7937, 1369.002
 695.3223, -477.2787, 1374.001
 691.5162, -474.0382, 1379
 687.4116, -471.1832, 1383.999
 682.9982, -468.8471, 1388.993
 678.2771, -467.2238, 1393.985
 673.3191, -466.6855, 1398.972
 668.3632, -467.2862, 1403.965
 663.61, -468.8144, 1408.957
 659.1839, -471.1285, 1413.952
 655.1664, -474.1001, 1418.949
 651.5247, -477.5215, 1423.946
 648.2625, -481.3078, 1428.944
 645.3767, -485.3898, 1433.943
 642.7886, -489.667, 1438.942
 640.4488, -494.0847, 1443.941
 638.293, -498.5954, 1448.94
 636.2613, -503.1641, 1453.941
 634.258, -507.7451, 1458.94
 632.1414, -512.2751, 1463.94
 629.8455, -516.7162, 1468.94
 627.2774, -521.0052, 1473.939
 624.3809, -525.0788, 1478.937
 621.1591, -528.8999, 1483.935
 617.5981, -532.4068, 1488.933
 613.6712, -535.4966, 1493.93
 609.4316, -538.1441, 1498.928
 604.9658, -540.3895, 1503.927
 600.3374, -542.2763, 1508.925
 595.5782, -543.8052, 1513.924
 590.7265, -545.0118, 1518.923
 585.8238, -545.9918, 1523.923
 580.8939, -546.8256, 1528.923
 575.9459, -547.5445, 1533.923
 570.9836, -548.1566, 1538.923
 566.0102, -548.6701, 1543.923
 561.0254, -549.057, 1548.923
 556.0311, -549.2884, 1553.922
 551.0319, -549.2824, 1558.921
 546.0429, -548.9685, 1563.92
 541.08, -548.3634, 1568.92
 536.1594, -547.4799, 1573.919
 531.3049, -546.2861, 1578.918
 526.5409, -544.7718, 1583.917
 521.9297, -542.8439, 1588.915
 517.5521, -540.4356, 1593.912
 513.5878, -537.3988, 1598.905
 510.1202, -533.8021, 1603.901
 507.1693, -529.7695, 1608.898
 504.6779, -525.4377, 1613.895
 502.5535, -520.9118, 1618.895
 500.7268, -516.2586, 1623.894
 499.1536, -511.5125, 1628.894
 497.7166, -506.7243, 1633.893
 496.462, -501.8849, 1638.893
 495.435, -496.9915, 1643.893
 494.7069, -492.0459, 1648.892
 494.3498, -487.0601, 1653.89
 494.4243, -482.0626, 1658.888
 494.8166, -477.0782, 1663.888
 495.4859, -472.1241, 1668.887
 496.4073, -467.2104, 1673.886
 497.5857, -462.3518, 1678.886
 499.0338, -457.567, 1683.885
 500.7349, -452.8657, 1688.885
 502.6552, -448.2496, 1693.884
 504.7536, -443.7115, 1698.884
 506.9698, -439.2296, 1703.884
 509.2162, -434.7626, 1708.884
 511.4369, -430.2828, 1713.884
 513.6112, -425.7803, 1718.884
 515.6373, -421.2096, 1723.884
 517.5603, -416.5942, 1728.884
 519.3735, -411.9347, 1733.883
 521.1146, -407.2478, 1738.883
 522.6589, -402.4929, 1743.883
 523.9503, -397.6631, 1748.882
 525.0285, -392.781, 1753.882
 525.9139, -387.8604, 1758.882
 526.6342, -382.9128, 1763.881
 527.2058, -377.9456, 1768.881
 527.6462, -372.9652, 1773.881
 527.98, -367.9765, 1778.881
 528.2285, -362.9827, 1783.881
 528.4069, -357.9859, 1788.881
 528.5214, -352.9873, 1793.881
 528.5895, -347.9877, 1798.881
 528.6274, -342.9879, 1803.881
 528.6515, -337.988, 1808.881
 528.6721, -332.988, 1813.881
 528.6999, -327.988, 1818.881
 528.7494, -322.9883, 1823.881
 528.8215, -317.9888, 1828.881
 528.9289, -312.9901, 1833.881
 529.1044, -307.9931, 1838.881
 529.3891, -303.0014, 1843.881
 529.8213, -298.0204, 1848.88
 530.4513, -293.0607, 1853.88
 531.3266, -288.1386, 1858.879
 532.5192, -283.284, 1863.878
 534.0419, -278.5224, 1868.877
 535.887, -273.8765, 1873.876
 538.0571, -269.3732, 1878.875
 540.5265, -265.0266, 1883.874
 543.2154, -260.8116, 1888.874
 546.0899, -256.7208, 1893.874
 549.0942, -252.7244, 1898.873
 552.2497, -248.8461, 1903.873
 555.5417, -245.0834, 1908.873
 558.9919, -241.4649, 1913.872
 562.5767, -237.9798, 1918.872
 566.3054, -234.6492, 1923.872
 570.1636, -231.4694, 1928.871
 574.1421, -228.4415, 1933.871
 578.2484, -225.5897, 1938.87
 582.488, -222.94, 1943.87
 586.852, -220.5007, 1948.869
 591.3276, -218.2727, 1953.869
 595.8982, -216.2462, 1958.869
 600.5573, -214.433, 1963.868
 605.2936, -212.8318, 1968.868
 610.0986, -211.4513, 1973.867
 614.9629, -210.2956, 1978.867
 619.8739, -209.3592, 1983.866
 624.8235, -208.6547, 1988.866
 629.8004, -208.1778, 1993.866
 634.7924, -207.9001, 1998.865
 639.791, -207.7945, 2003.865
 644.7909, -207.8142, 2008.865
 649.79, -207.9107, 2013.865
 654.7887, -208.0238, 2018.865
 909.7618, -210.2707, 2273.848
ENDTABLE

XY_TABLE_ID(16)    16 ; Skidpad circle - 111 m radius Segment 1
SEGMENT_XY_TABLE(16) ! table with X (m), Y (m), and calculated station S (m)
 110.1748, 3.9928, 0
 110.1517, 1.6814, 2.312
 110.083, -0.6063, 4.6
 109.9694, -2.8724, 6.869
 109.8117, -5.1185, 9.121
 109.6108, -7.3424, 11.354
 109.367, -9.5482, 13.573
 109.0811, -11.7348, 15.778
 108.7536, -13.9027, 17.971
 108.3847, -16.0534, 20.153
 107.9752, -18.1862, 22.325
 107.5255, -20.3015, 24.487
 107.0359, -22.399, 26.641
 106.5065, -24.4807, 28.789
 105.9378, -26.5459, 30.931
 105.3303, -28.5941, 33.067
 104.6838, -30.6267, 35.2
 103.9991, -32.6419, 37.329
 103.2763, -34.6405, 39.454
 102.5157, -36.6221, 41.577
 101.717, -38.588, 43.699
 100.8812, -40.5361, 45.818
 100.0084, -42.4664, 47.937
 99.099, -44.3788, 50.054
 98.1526, -46.274, 52.173
 97.1704, -48.15, 54.29
 96.1529, -50.006, 56.407
 95.0992, -51.8439, 58.526
 94.0104, -53.6615, 60.644
 92.8875, -55.4578, 62.763
 91.7292, -57.2346, 64.884
 90.5379, -58.9883, 67.004
 89.3133, -60.7194, 69.124
 88.0553, -62.4285, 71.246
 86.7649, -64.1138, 73.369
 85.442, -65.7755, 75.493
 84.0877, -67.4123, 77.617
 82.7029, -69.0233, 79.742
 81.2874, -70.6086, 81.867
 79.8414, -72.1678, 83.994
 78.3673, -73.6986, 86.119
 76.8637, -75.2023, 88.245
 75.3333, -76.6762, 90.37
 73.7742, -78.1224, 92.496
 72.1891, -79.5379, 94.622
 70.5782, -80.9229, 96.746
 68.9425, -82.2765, 98.869
 67.2808, -83.5995, 100.993
 65.5956, -84.89, 103.116
 63.8871, -86.148, 105.237
 62.1553, -87.3732, 107.359
 60.4017, -88.5647, 109.479
 58.6258, -89.7226, 111.599
 56.8288, -90.8462, 113.718
 55.0109, -91.9353, 115.838
 53.1742, -92.9886, 117.955
 51.3176, -94.0066, 120.072
 49.4413, -94.9892, 122.19
 47.5466, -95.9355, 124.308
 45.6342, -96.8451, 126.426
 43.7039, -97.718, 128.544
 41.7553, -98.5543, 130.665
 39.7897, -99.353, 132.786
 37.8081, -100.1138, 134.909
 35.8097, -100.8367, 137.034
 33.7949, -101.5215, 139.162
 31.7616, -102.1684, 141.296
 29.7133, -102.7761, 143.432
 27.649, -103.3447, 145.574
 25.5674, -103.8743, 147.722
 23.4695, -104.3641, 149.876
 21.3539, -104.8141, 152.039
 19.2215, -105.2237, 154.21
 17.0704, -105.5928, 156.393
 14.903, -105.9204, 158.585
 12.7172, -106.2064, 160.789
 10.5114, -106.4504, 163.008
 8.2855, -106.6517, 165.243
 6.0394, -106.8096, 167.495
 3.7742, -106.9232, 169.763
 1.4876, -106.9921, 172.051
 -0.8246, -107.0154, 174.363
 -3.1359, -106.9923, 176.674
 -5.4237, -106.9236, 178.963
 -7.6902, -106.81, 181.233
 -9.9363, -106.6524, 183.484
 -12.1602, -106.4515, 185.717
 -14.366, -106.2077, 187.936
 -16.5526, -105.9218, 190.142
 -18.7205, -105.5943, 192.334
 -20.8711, -105.2254, 194.516
 -23.0032, -104.8161, 196.687
 -25.1197, -104.3661, 198.851
 -27.2189, -103.8761, 201.007
 -29.3005, -103.3468, 203.154
 -31.3649, -102.7784, 205.296
 -33.4127, -102.1709, 207.432
 -35.4441, -101.5247, 209.563
 -37.4593, -100.8401, 211.692
 -39.4579, -100.1174, 213.817
 -41.4403, -99.3564, 215.94
 -43.4047, -98.5584, 218.061
 -45.3531, -97.7225, 220.181
 -47.2851, -96.8491, 222.301
 -49.1975, -95.9395, 224.419
 -51.0926, -94.9932, 226.537
 -52.9683, -94.0112, 228.654
 -54.8262, -92.9927, 230.773
 -56.6633, -91.9394, 232.891
 -58.4813, -90.8504, 235.01
 -60.2777, -89.7274, 237.128
 -62.0535, -88.5696, 239.248
 -63.8073, -87.3782, 241.368
 -65.5392, -86.1532, 243.49
 -67.2476, -84.8956, 245.611
 -68.9338, -83.6044, 247.735
 -70.5955, -82.2815, 249.859
 -72.2313, -80.9281, 251.982
 -73.8417, -79.5437, 254.106
 -75.4278, -78.1274, 256.232
 -76.9865, -76.682, 258.358
 -78.5173, -75.2078, 260.483
 -80.02, -73.7053, 262.608
 -81.4943, -72.1746, 264.733
 -82.9404, -70.6154, 266.86
 -84.356, -69.0304, 268.985
 -85.741, -67.4195, 271.109
 -87.0951, -65.783, 273.234
 -88.4176, -64.1222, 275.357
 -89.7082, -62.437, 277.479
 -90.9664, -60.7281, 279.601
 -92.1912, -58.9969, 281.722
 -93.3826, -57.2434, 283.842
 -94.5405, -55.4675, 285.962
 -95.6642, -53.6705, 288.081
 -96.7531, -51.853, 290.2
 -97.8072, -50.0148, 292.319
 -98.8257, -48.1575, 294.437
 -99.8079, -46.2819, 296.555
 -100.7544, -44.3868, 298.673
 -101.6644, -42.4737, 300.791
 -102.5372, -40.5434, 302.91
 -103.3734, -38.5946, 305.03
 -104.1721, -36.6292, 307.152
 -104.933, -34.6471, 309.275
 -105.6563, -32.6479, 311.401
 -106.3408, -30.6335, 313.529
 -106.9875, -28.6009, 315.662
 -107.5948, -26.5539, 317.797
 -108.1637, -24.4887, 319.939
 -108.6934, -22.4063, 322.088
 -109.1829, -20.3096, 324.241
 -109.6331, -18.1932, 326.404
 -110.0427, -16.0603, 328.576
 -110.4117, -13.9098, 330.758
 -110.7392, -11.7427, 332.95
 -111.0254, -9.5552, 335.156
 -111.2695, -7.3482, 337.377
 -111.4706, -5.1232, 339.611
 -111.6283, -2.8796, 341.86
 -111.742, -0.6127, 344.13
 -111.8109, 1.6739, 346.417
 -111.8341, 3.9861, 348.729
 -111.811, 6.2962, 351.04
 -111.7423, 8.5848, 353.329
 -111.6287, 10.85, 355.597
 -111.471, 13.097, 357.85
 -111.2699, 15.3216, 360.084
 -111.0263, 17.5262, 362.302
 -110.7404, 19.7128, 364.507
 -110.4128, 21.8808, 366.699
 -110.044, 24.0314, 368.881
 -109.6345, 26.1643, 371.053
 -109.1847, 28.2795, 373.216
 -108.6948, 30.3787, 375.371
 -108.1654, 32.4603, 377.519
 -107.5969, 34.5247, 379.66
 -106.9893, 36.573, 381.797
 -106.3428, 38.6056, 383.93
 -105.6581, 40.6207, 386.058
 -104.9354, 42.6188, 388.183
 -104.1746, 44.6009, 390.306
 -103.3761, 46.5665, 392.428
 -102.5401, 48.5149, 394.548
 -101.6677, 50.4444, 396.665
 -100.7579, 52.3577, 398.784
 -99.8121, 54.2517, 400.901
 -98.8291, 56.1292, 403.02
 -97.8116, 57.9852, 405.137
 -96.7578, 59.823, 407.255
 -95.6689, 61.641, 409.375
 -94.5461, 63.437, 411.493
 -93.3878, 65.2136, 413.613
 -92.1965, 66.9673, 415.734
 -90.9719, 68.6985, 417.854
 -89.7138, 70.4077, 419.976
 -88.4226, 72.0939, 422.1
 -87.1002, 73.7549, 424.223
 -85.7456, 75.3921, 426.348
 -84.3607, 77.0031, 428.473
 -82.9453, 78.5882, 430.598
 -81.4993, 80.1475, 432.724
 -80.025, 81.6783, 434.85
 -78.5224, 83.181, 436.975
 -76.9917, 84.6552, 439.1
 -75.4325, 86.1013, 441.226
 -73.8471, 87.5171, 443.352
 -72.2369, 88.9015, 445.475
 -70.6011, 90.2551, 447.599
 -68.9395, 91.5781, 449.723
 -67.254, 92.8688, 451.846
 -65.5454, 94.1268, 453.967
 -63.8139, 95.3518, 456.088
 -62.0592, 96.544, 458.21
 -60.2826, 97.7023, 460.331
 -58.4863, 98.8254, 462.449
 -56.6687, 99.9143, 464.568
 -54.8317, 100.9677, 466.686
 -52.9739, 101.9863, 468.804
 -51.0983, 102.9685, 470.921
 -49.2032, 103.9149, 473.04
 -47.29, 104.8249, 475.158
 -45.3597, 105.6977, 477.277
 -43.4118, 106.5336, 479.396
 -41.4447, 107.3329, 481.52
 -39.4642, 108.0931, 483.641
 -37.4657, 108.816, 485.766
 -35.4506, 109.5008, 487.895
 -33.418, 110.1474, 490.028
 -31.3693, 110.7552, 492.165
 -29.305, 111.3238, 494.306
 -27.2222, 111.8535, 496.455
 -25.1242, 112.3433, 498.609
 -23.0078, 112.7933, 500.773
 -20.8757, 113.2028, 502.944
 -18.7251, 113.5717, 505.126
 -16.5572, 113.8992, 507.319
 -14.3702, 114.1853, 509.524
 -12.1656, 114.429, 511.742
 -9.9385, 114.6304, 513.978
 -7.6944, 114.788, 516.228
 -5.4284, 114.9016, 518.497
 -3.1418, 114.9704, 520.785
 -0.8296, 114.9936, 523.097
 1.4776, 114.9705, 525.404
 3.7653, 114.9017, 527.693
 6.0314, 114.7882, 529.962
 8.2775, 114.6305, 532.213
 10.5014, 114.4295, 534.446
 12.7071, 114.1858, 536.666
 14.8938, 113.8999, 538.871
 17.0617, 113.5723, 541.063
 19.2123, 113.2035, 543.245
 21.3453, 112.794, 545.417
 23.4605, 112.3443, 547.58
 25.5581, 111.8547, 549.734
 27.6405, 111.3251, 551.882
 29.7049, 110.7567, 554.024
 31.7531, 110.1491, 556.16
 33.7849, 109.5029, 558.292
 35.8017, 108.8177, 560.422
 37.7998, 108.095, 562.547
 39.782, 107.3342, 564.67
 41.7475, 106.5357, 566.792
 43.6962, 105.6996, 568.912
 45.6266, 104.8268, 571.031
 47.5391, 103.9173, 573.148
 49.4345, 102.9708, 575.267
 51.3106, 101.9885, 577.385
 53.1676, 100.9704, 579.503
 55.0033, 99.9179, 581.619
 56.8213, 98.8289, 583.738
 58.6177, 97.7059, 585.856
 60.3943, 96.5477, 587.977
 62.148, 95.3564, 590.097
 63.88, 94.1312, 592.219
 65.5883, 92.8737, 594.34
 67.2746, 91.5825, 596.464
 68.9363, 90.2596, 598.588
 70.5731, 88.9053, 600.712
 72.1835, 87.5209, 602.836
 73.7689, 86.1053, 604.961
 75.3282, 84.6592, 607.088
 76.859, 83.1851, 609.213
 78.3617, 81.6824, 611.338
 79.836, 80.1517, 613.463
 81.2824, 78.5922, 615.59
 82.6968, 77.0085, 617.714
 84.0823, 75.3969, 619.839
 85.4359, 73.7611, 621.962
 86.759, 72.0995, 624.086
 88.0495, 70.4144, 626.209
 89.3077, 68.7054, 628.331
 90.5324, 66.9743, 630.452
 91.7236, 65.2211, 632.571
 92.8825, 63.4438, 634.693
 94.0057, 61.6475, 636.811
 95.0945, 59.83, 638.93
 96.148, 57.9929, 641.048
 97.1666, 56.1352, 643.166
 98.1486, 54.2599, 645.283
 99.0946, 52.3661, 647.4
 100.0049, 50.4521, 649.52
 100.8778, 48.5219, 651.638
 101.7134, 46.5747, 653.757
 102.5124, 44.6084, 655.879
 103.2732, 42.6268, 658.002
 103.9966, 40.6271, 660.129
 104.6811, 38.6128, 662.256
 105.3283, 36.579, 664.39
 105.9361, 34.5304, 666.527
 106.5048, 32.4656, 668.669
 107.0341, 30.3845, 670.816
 107.524, 28.2865, 672.971
 107.9739, 26.1709, 675.134
 108.3836, 24.038, 677.306
 108.7525, 21.8874, 679.488
 109.0802, 19.7195, 681.68
 109.3663, 17.5324, 683.886
 109.6101, 15.3271, 686.105
 109.8113, 13.1024, 688.338
 109.969, 10.8576, 690.589
 110.0827, 8.5915, 692.858
 110.1516, 6.305, 695.145
 110.1748, 3.9928, 697.457
ENDTABLE

XY_TABLE_ID(17)    17 ; North/south straight Segment 1
SEGMENT_XY_TABLE(17) ! table with X (m), Y (m), and calculated station S (m)
 -426.5095, -496.0112, 0
 -426.5278, -19.0692, 476.942
 -426.5278, 22.1139, 518.125
 -426.5278, 503.9899, 1000.001
 -426.4732, 511.5745, 1007.586
 -426.4616, 513.4798, 1009.491
 -426.4483, 515.3848, 1011.396
 -426.4332, 517.2894, 1013.301
 -426.416, 519.1937, 1015.205
 -426.3965, 521.0976, 1017.109
 -426.3745, 523.0011, 1019.013
 -426.3496, 524.9042, 1020.916
 -426.3217, 526.8068, 1022.819
 -426.2905, 528.709, 1024.721
 -426.2557, 530.6107, 1026.623
 -426.2171, 532.5119, 1028.525
 -426.1744, 534.4126, 1030.426
 -426.1275, 536.3126, 1032.327
 -426.076, 538.2123, 1034.227
 -426.0197, 540.1113, 1036.127
 -425.9583, 542.0098, 1038.027
 -425.8917, 543.9076, 1039.926
 -425.8195, 545.8048, 1041.824
 -425.7415, 547.7013, 1043.722
 -425.6575, 549.5972, 1045.62
 -425.5672, 551.4924, 1047.517
 -425.4704, 553.3869, 1049.414
 -425.3668, 555.2807, 1051.311
 -425.2562, 557.1737, 1053.207
 -425.1383, 559.0661, 1055.103
 -425.0129, 560.9576, 1056.999
 -424.8797, 562.8483, 1058.894
 -424.7385, 564.7383, 1060.79
 -424.5891, 566.6275, 1062.685
 -424.4312, 568.5157, 1064.579
 -424.2645, 570.4031, 1066.474
 -424.0888, 572.2896, 1068.369
 -423.9039, 574.1753, 1070.264
 -423.7095, 576.0601, 1072.158
 -423.5054, 577.9439, 1074.053
 -423.2913, 579.8267, 1075.948
 -423.067, 581.7088, 1077.844
 -422.8322, 583.5897, 1079.739
 -422.5867, 585.4697, 1081.635
 -422.3303, 587.3488, 1083.532
 -422.0627, 589.2268, 1085.428
 -421.7836, 591.1038, 1087.326
 -421.4928, 592.9798, 1089.225
 -421.1901, 594.8548, 1091.124
 -420.8752, 596.7287, 1093.024
 -420.5479, 598.6015, 1094.925
 -420.208, 600.4733, 1096.828
 -419.8551, 602.3441, 1098.731
 -419.489, 604.2137, 1100.636
 -419.1096, 606.0823, 1102.543
 -418.7165, 607.9497, 1104.452
 -418.3095, 609.8161, 1106.362
 -417.8884, 611.6814, 1108.274
 -417.4529, 613.5456, 1110.188
 -417.0027, 615.4086, 1112.105
 -416.5377, 617.2705, 1114.024
 -416.0575, 619.1314, 1115.946
 -415.562, 620.991, 1117.87
 -415.0508, 622.8496, 1119.798
 -414.5238, 624.7071, 1121.729
 -413.9806, 626.5635, 1123.663
 -413.4211, 628.4187, 1125.601
 -412.845, 630.2728, 1127.542
 -412.252, 632.1259, 1129.488
 -411.6419, 633.9778, 1131.438
 -410.8933, 636.2522, 1133.832
 -410.0522, 638.7097, 1136.43
 -409.0594, 641.5559, 1139.444
 -407.7417, 645.3328, 1143.444
 -406.4046, 649.0486, 1147.393
 -405.0491, 652.705, 1151.293
 -403.6764, 656.3035, 1155.144
 -402.2874, 659.8459, 1158.949
 -400.8834, 663.3338, 1162.709
 -399.4653, 666.7689, 1166.426
 -398.0343, 670.1527, 1170.099
 -396.5915, 673.487, 1173.733
 -395.1379, 676.7734, 1177.326
 -393.6747, 680.0134, 1180.881
 -392.2029, 683.2089, 1184.399
 -390.7236, 686.3612, 1187.881
 -389.2379, 689.4722, 1191.329
 -387.747, 692.5434, 1194.743
 -386.2518, 695.5764, 1198.124
 -384.7535, 698.5729, 1201.475
 -383.2532, 701.5344, 1204.795
 -381.752, 704.4627, 1208.085
 -380.2509, 707.3592, 1211.348
 -378.7512, 710.2256, 1214.583
 -377.2539, 713.0635, 1217.791
 -375.7601, 715.8745, 1220.975
 -374.2709, 718.6602, 1224.133
 -372.7875, 721.4223, 1227.269
 -371.3109, 724.1622, 1230.381
 -369.8423, 726.8816, 1233.472
 -368.3828, 729.5821, 1236.541
 -366.9335, 732.2653, 1239.591
 -365.4956, 734.9328, 1242.621
 -364.0701, 737.5862, 1245.633
 -362.6583, 740.2271, 1248.628
 -361.2612, 742.857, 1251.606
 -359.88, 745.4776, 1254.568
 -358.5158, 748.0905, 1257.516
 -357.1698, 750.6972, 1260.449
 -355.843, 753.2993, 1263.37
 -354.5367, 755.8985, 1266.279
 -353.252, 758.4963, 1269.177
 -351.9901, 761.0943, 1272.066
 -350.752, 763.6941, 1274.945
 -349.5389, 766.2973, 1277.817
 -348.3521, 768.9055, 1280.683
 -347.1926, 771.5204, 1283.543
 -346.0616, 774.1435, 1286.4
 -344.9602, 776.7762, 1289.253
 -343.8896, 779.4204, 1292.106
 -342.851, 782.0775, 1294.959
 -341.8455, 784.7493, 1297.814
 -340.8742, 787.4372, 1300.672
 -339.9384, 790.1428, 1303.535
 -339.0391, 792.8678, 1306.404
 -338.1775, 795.6138, 1309.282
 -337.3548, 798.3823, 1312.17
 -336.5721, 801.1749, 1315.071
 -335.8306, 803.9934, 1317.985
 -335.1313, 806.8392, 1320.915
 -334.4756, 809.7139, 1323.864
 -333.8645, 812.6192, 1326.833
 -333.3002, 815.5569, 1329.824
 -332.7839, 818.5285, 1332.84
 -332.3168, 821.5355, 1335.883
 -331.9001, 824.5797, 1338.956
 -331.5349, 827.6623, 1342.06
 -331.2224, 830.7851, 1345.199
 -330.9637, 833.9495, 1348.374
 -330.7601, 837.1572, 1351.588
 -330.6125, 840.4096, 1354.843
 -330.5223, 843.7084, 1358.144
 -330.4904, 847.057, 1361.492
 -330.5179, 849.4138, 1363.849
 -330.5989, 851.7583, 1366.195
 -330.7329, 854.0891, 1368.53
 -330.9193, 856.4058, 1370.854
 -331.1575, 858.7078, 1373.168
 -331.4468, 860.9943, 1375.473
 -331.7868, 863.2649, 1377.769
 -332.1768, 865.5188, 1380.056
 -332.6162, 867.7556, 1382.336
 -333.1044, 869.9746, 1384.608
 -333.6409, 872.1753, 1386.873
 -334.2251, 874.3569, 1389.132
 -334.8564, 876.5189, 1391.384
 -335.5341, 878.6609, 1393.63
 -336.2577, 880.7821, 1395.872
 -337.0267, 882.8819, 1398.108
 -337.8404, 884.9597, 1400.339
 -338.6981, 887.0152, 1402.567
 -339.5994, 889.0474, 1404.79
 -340.5437, 891.0561, 1407.009
 -341.5303, 893.0403, 1409.225
 -342.5587, 894.9997, 1411.438
 -343.6282, 896.9336, 1413.648
 -344.7383, 898.8416, 1415.855
 -345.8885, 900.7229, 1418.061
 -347.078, 902.5769, 1420.263
 -348.3064, 904.4032, 1422.464
 -349.5729, 906.2012, 1424.664
 -350.8772, 907.9702, 1426.861
 -352.2184, 909.7096, 1429.058
 -353.5962, 911.419, 1431.253
 -355.0098, 913.0976, 1433.448
 -356.4588, 914.7449, 1435.642
 -357.9425, 916.3604, 1437.835
 -359.4603, 917.9435, 1440.028
 -361.0116, 919.4936, 1442.221
 -362.5959, 921.01, 1444.415
 -364.2126, 922.4923, 1446.608
 -365.8611, 923.9398, 1448.802
 -367.5408, 925.3519, 1450.996
 -369.2511, 926.7282, 1453.191
 -370.9914, 928.0679, 1455.388
 -372.7612, 929.3705, 1457.585
 -374.5599, 930.6355, 1459.784
 -376.3869, 931.8622, 1461.985
 -378.2416, 933.05, 1464.187
 -380.1234, 934.1984, 1466.392
 -382.0318, 935.3069, 1468.599
 -383.9661, 936.3747, 1470.808
 -385.9258, 937.4014, 1473.021
 -387.9103, 938.3863, 1475.236
 -389.919, 939.3289, 1477.455
 -391.9513, 940.2285, 1479.677
 -394.0066, 941.0846, 1481.904
 -396.0844, 941.8966, 1484.135
 -398.184, 942.6639, 1486.37
 -400.3049, 943.3859, 1488.61
 -402.4464, 944.0622, 1490.856
 -404.6081, 944.6919, 1493.108
 -406.7892, 945.2746, 1495.365
 -408.9892, 945.8097, 1497.63
 -411.2076, 946.2965, 1499.901
 -413.4436, 946.7346, 1502.179
 -415.6968, 947.1233, 1504.466
 -417.9664, 947.4622, 1506.76
 -420.2521, 947.7504, 1509.064
 -422.553, 947.9874, 1511.377
 -424.8687, 948.1729, 1513.7
 -427.1985, 948.3061, 1516.034
 -429.5418, 948.3863, 1518.379
 -431.8981, 948.4131, 1520.735
 -434.2544, 948.3861, 1523.092
 -436.5977, 948.3056, 1525.436
 -438.9275, 948.1724, 1527.77
 -441.2432, 947.9868, 1530.093
 -443.5441, 947.7495, 1532.406
 -445.8297, 947.4612, 1534.71
 -448.0993, 947.1223, 1537.005
 -450.3525, 946.7335, 1539.291
 -452.5886, 946.2953, 1541.57
 -454.8069, 945.8084, 1543.841
 -457.0069, 945.2733, 1546.105
 -459.1881, 944.6905, 1548.363
 -461.3498, 944.0608, 1550.614
 -463.4914, 943.3846, 1552.86
 -465.6124, 942.6626, 1555.101
 -467.712, 941.8953, 1557.336
 -469.7899, 941.0834, 1559.567
 -471.8453, 940.2273, 1561.793
 -473.8778, 939.3278, 1564.016
 -475.8866, 938.3853, 1566.235
 -477.8713, 937.4004, 1568.451
 -479.8312, 936.3739, 1570.663
 -481.7658, 935.3061, 1572.873
 -483.6744, 934.1978, 1575.08
 -485.5565, 933.0495, 1577.285
 -487.4114, 931.8617, 1579.487
 -489.2387, 930.6351, 1581.688
 -491.0378, 929.3702, 1583.887
 -492.808, 928.0676, 1586.085
 -494.5487, 926.728, 1588.282
 -496.2595, 925.3519, 1590.477
 -497.9396, 923.9398, 1592.672
 -499.5886, 922.4924, 1594.866
 -501.2058, 921.0102, 1597.06
 -502.7905, 919.4938, 1599.253
 -504.3424, 917.9437, 1601.446
 -505.8608, 916.3607, 1603.64
 -507.3451, 914.7453, 1605.834
 -508.7946, 913.0979, 1608.028
 -510.2089, 911.4192, 1610.223
 -511.5873, 909.7098, 1612.419
 -512.9293, 907.9703, 1614.616
 -514.2342, 906.2013, 1616.814
 -515.5015, 904.4032, 1619.014
 -516.7306, 902.5768, 1621.216
 -517.9208, 900.7226, 1623.419
 -519.0718, 898.8412, 1625.624
 -520.1827, 896.9331, 1627.832
 -521.253, 894.9989, 1630.043
 -522.2822, 893.0393, 1632.256
 -523.2696, 891.0548, 1634.473
 -524.2147, 889.0459, 1636.693
 -525.1168, 887.0133, 1638.917
 -525.9754, 884.9577, 1641.145
 -526.7899, 882.8794, 1643.377
 -527.5598, 880.7791, 1645.614
 -528.2842, 878.6576, 1647.855
 -528.9628, 876.5152, 1650.103
 -529.5949, 874.3527, 1652.356
 -530.1799, 872.1706, 1654.615
 -530.7172, 869.9694, 1656.881
 -531.2063, 867.7498, 1659.154
 -531.6465, 865.5125, 1661.434
 -532.0373, 863.2579, 1663.722
 -532.3781, 860.9867, 1666.019
 -532.6682, 858.6996, 1668.324
 -532.9071, 856.3969, 1670.639
 -533.0942, 854.0796, 1672.964
 -533.2289, 851.748, 1675.299
 -533.3107, 849.4029, 1677.646
 -533.3389, 847.0453, 1680.004
 -533.3079, 843.6961, 1683.353
 -533.2185, 840.3966, 1686.654
 -533.0718, 837.1435, 1689.91
 -532.869, 833.935, 1693.125
 -532.6111, 830.7697, 1696.301
 -532.2993, 827.6461, 1699.44
 -531.9348, 824.5626, 1702.545
 -531.5188, 821.5177, 1705.618
 -531.0523, 818.5097, 1708.662
 -530.5366, 815.5371, 1711.679
 -529.9728, 812.5985, 1714.671
 -529.3621, 809.6922, 1717.641
 -528.7057, 806.8167, 1720.591
 -528.0048, 803.9705, 1723.522
 -527.2605, 801.1519, 1726.437
 -526.4741, 798.3596, 1729.338
 -525.647, 795.5917, 1732.227
 -524.7814, 792.8463, 1735.105
 -523.8783, 790.122, 1737.975
 -522.9388, 787.4172, 1740.839
 -521.9642, 784.7301, 1743.697
 -520.9554, 782.0592, 1746.552
 -519.9139, 779.4029, 1749.405
 -518.8405, 776.7595, 1752.258
 -517.7366, 774.1275, 1755.113
 -516.6032, 771.5053, 1757.969
 -515.4415, 768.8913, 1760.83
 -514.2526, 766.2838, 1763.696
 -513.0377, 763.6812, 1766.568
 -511.7979, 761.0821, 1769.447
 -510.5345, 758.4846, 1772.336
 -509.2484, 755.8873, 1775.234
 -507.9409, 753.2887, 1778.143
 -506.6131, 750.6869, 1781.064
 -505.2661, 748.0806, 1783.998
 -503.9011, 745.468, 1786.946
 -502.5192, 742.8476, 1789.908
 -501.1216, 740.2178, 1792.886
 -499.7092, 737.5769, 1795.881
 -498.2835, 734.9235, 1798.893
 -496.8453, 732.2559, 1801.924
 -495.3959, 729.5725, 1804.974
 -493.9364, 726.8718, 1808.043
 -492.4679, 724.1521, 1811.134
 -490.9915, 721.4118, 1814.247
 -489.5084, 718.6493, 1817.382
 -488.0196, 715.8632, 1820.541
 -486.5262, 713.0516, 1823.725
 -485.0295, 710.2131, 1826.934
 -483.5304, 707.3461, 1830.169
 -482.0302, 704.4489, 1833.432
 -480.5298, 701.52, 1836.723
 -479.0304, 698.5577, 1840.043
 -477.5331, 695.5604, 1843.393
 -476.0389, 692.5266, 1846.775
 -474.5491, 689.4546, 1850.189
 -473.0647, 686.3429, 1853.637
 -471.5867, 683.1896, 1857.119
 -470.1162, 679.9934, 1860.638
 -468.6545, 676.7525, 1864.193
 -467.2024, 673.4653, 1867.787
 -465.7612, 670.1301, 1871.42
 -464.3319, 666.7455, 1875.094
 -462.9155, 663.3097, 1878.81
 -461.5132, 659.8209, 1882.57
 -460.1261, 656.2779, 1886.375
 -458.7553, 652.6785, 1890.227
 -457.4017, 649.0216, 1894.126
 -456.0666, 645.3051, 1898.075
 -454.8403, 641.8469, 1901.744
 -453.8425, 638.9614, 1904.797
 -452.9167, 636.2261, 1907.685
 -452.1564, 633.9689, 1910.067
 -451.5418, 632.1319, 1912.004
 -450.9445, 630.2932, 1913.937
 -450.3643, 628.4529, 1915.867
 -449.8008, 626.6107, 1917.793
 -449.2537, 624.7669, 1919.717
 -448.7229, 622.9213, 1921.637
 -448.2083, 621.0739, 1923.555
 -447.7098, 619.2248, 1925.47
 -447.2271, 617.3739, 1927.383
 -446.7599, 615.5212, 1929.293
 -446.3079, 613.6669, 1931.202
 -445.871, 611.8108, 1933.109
 -445.4488, 609.953, 1935.014
 -445.0411, 608.0936, 1936.918
 -444.6477, 606.2324, 1938.82
 -444.2683, 604.3698, 1940.721
 -443.9026, 602.5054, 1942.621
 -443.5504, 600.6395, 1944.519
 -443.2113, 598.7721, 1946.417
 -442.8853, 596.903, 1948.315
 -442.572, 595.0324, 1950.211
 -442.2711, 593.1604, 1952.107
 -441.9824, 591.2868, 1954.003
 -441.7056, 589.4118, 1955.898
 -441.4405, 587.5354, 1957.794
 -441.1868, 585.6575, 1959.688
 -440.9444, 583.7783, 1961.583
 -440.7128, 581.8976, 1963.478
 -440.4918, 580.0157, 1965.373
 -440.2813, 578.1325, 1967.268
 -440.0809, 576.2479, 1969.163
 -439.8904, 574.362, 1971.059
 -439.7095, 572.475, 1972.954
 -439.538, 570.5867, 1974.85
 -439.3756, 568.6972, 1976.747
 -439.222, 566.8065, 1978.644
 -439.077, 564.9147, 1980.541
 -438.9404, 563.0218, 1982.439
 -438.8119, 561.1278, 1984.337
 -438.6912, 559.2326, 1986.236
 -438.578, 557.3366, 1988.136
 -438.4722, 555.4394, 1990.036
 -438.3734, 553.5412, 1991.937
 -438.2814, 551.6421, 1993.838
 -438.1959, 549.7421, 1995.74
 -438.1167, 547.8411, 1997.642
 -438.0435, 545.9392, 1999.546
 -437.9761, 544.0365, 2001.45
 -437.9141, 542.1331, 2003.354
 -437.8575, 540.2287, 2005.259
 -437.8057, 538.3235, 2007.165
 -437.7587, 536.4176, 2009.072
 -437.7162, 534.511, 2010.979
 -437.6779, 532.6037, 2012.886
 -437.6435, 530.6957, 2014.795
 -437.6128, 528.787, 2016.704
 -437.5855, 526.8778, 2018.613
 -437.5613, 524.9678, 2020.523
 -437.5401, 523.0573, 2022.434
 -437.5215, 521.1464, 2024.345
 -437.5053, 519.2349, 2026.256
 -437.4913, 517.3229, 2028.169
 -437.479, 515.4104, 2030.081
 -437.4684, 513.4974, 2031.994
 -437.4591, 511.5841, 2033.907
 -437.4509, 509.6704, 2035.821
 -437.4302, 503.9899, 2041.502
 -437.4302, 11.6534, 2533.838
 -437.4302, -496.0112, 3041.503
 -437.4368, -497.8631, 3043.355
 -437.4436, -499.7776, 3045.269
 -437.451, -501.6916, 3047.183
 -437.4592, -503.6053, 3049.097
 -437.4685, -505.5187, 3051.01
 -437.4791, -507.4316, 3052.923
 -437.4913, -509.3442, 3054.836
 -437.5054, -511.2561, 3056.748
 -437.5216, -513.1676, 3058.659
 -437.5402, -515.0786, 3060.571
 -437.5614, -516.9891, 3062.481
 -437.5856, -518.899, 3064.391
 -437.6129, -520.8083, 3066.301
 -437.6436, -522.7169, 3068.21
 -437.678, -524.6249, 3070.118
 -437.7163, -526.5322, 3072.026
 -437.7588, -528.4389, 3073.933
 -437.8058, -530.3448, 3075.839
 -437.8575, -532.2499, 3077.745
 -437.9142, -534.1543, 3079.65
 -437.9761, -536.0578, 3081.555
 -438.0436, -537.9606, 3083.459
 -438.1168, -539.8624, 3085.362
 -438.196, -541.7633, 3087.264
 -438.2814, -543.6634, 3089.167
 -438.3734, -545.5625, 3091.068
 -438.4722, -547.4606, 3092.969
 -438.5781, -549.3578, 3094.869
 -438.6912, -551.2539, 3096.768
 -438.812, -553.149, 3098.667
 -438.9405, -555.0431, 3100.566
 -439.0771, -556.936, 3102.463
 -439.2221, -558.8278, 3104.361
 -439.3756, -560.7185, 3106.258
 -439.5381, -562.6079, 3108.154
 -439.7096, -564.4963, 3110.05
 -439.8904, -566.3833, 3111.946
 -440.081, -568.2691, 3113.841
 -440.2814, -570.1537, 3115.736
 -440.4919, -572.037, 3117.631
 -440.7128, -573.9189, 3119.526
 -440.9444, -575.7995, 3121.421
 -441.1869, -577.6788, 3123.316
 -441.4406, -579.5566, 3125.211
 -441.7057, -581.4331, 3127.106
 -441.9824, -583.3081, 3129.001
 -442.2711, -585.1816, 3130.897
 -442.572, -587.0536, 3132.793
 -442.8854, -588.9242, 3134.69
 -443.2114, -590.7933, 3136.587
 -443.5504, -592.6607, 3138.485
 -443.9027, -594.5267, 3140.384
 -444.2684, -596.391, 3142.284
 -444.6478, -598.2538, 3144.185
 -445.0412, -600.1148, 3146.087
 -445.4489, -601.9743, 3147.99
 -445.871, -603.832, 3149.896
 -446.308, -605.6882, 3151.802
 -446.7599, -607.5425, 3153.711
 -447.2271, -609.3951, 3155.622
 -447.7099, -611.2461, 3157.535
 -448.2084, -613.0952, 3159.45
 -448.723, -614.9425, 3161.367
 -449.2538, -616.7881, 3163.288
 -449.8008, -618.6319, 3165.211
 -450.3643, -620.4741, 3167.137
 -450.9446, -622.3145, 3169.067
 -451.5419, -624.1532, 3171
 -452.1565, -625.9901, 3172.937
 -452.9168, -628.2474, 3175.319
 -453.8426, -630.9827, 3178.207
 -454.8404, -633.8682, 3181.26
 -456.0667, -637.3263, 3184.929
 -457.4018, -641.0428, 3188.878
 -458.7553, -644.6998, 3192.778
 -460.1262, -648.2991, 3196.629
 -461.5133, -651.8422, 3200.434
 -462.9156, -655.3309, 3204.194
 -464.3319, -658.7667, 3207.91
 -465.7612, -662.1513, 3211.585
 -467.2025, -665.4866, 3215.218
 -468.6545, -668.7737, 3218.811
 -470.1163, -672.0146, 3222.367
 -471.5867, -675.2109, 3225.885
 -473.0647, -678.3641, 3229.367
 -474.5492, -681.4759, 3232.815
 -476.039, -684.5478, 3236.229
 -477.5331, -687.5817, 3239.611
 -479.0305, -690.579, 3242.962
 -480.5298, -693.5412, 3246.282
 -482.0302, -696.4701, 3249.573
 -483.5305, -699.3674, 3252.835
 -485.0296, -702.2344, 3256.071
 -486.5263, -705.0729, 3259.279
 -488.0197, -707.8844, 3262.463
 -489.5084, -710.6706, 3265.622
 -490.9916, -713.4331, 3268.757
 -492.468, -716.1733, 3271.87
 -493.9365, -718.893, 3274.961
 -495.396, -721.5938, 3278.031
 -496.8454, -724.2772, 3281.081
 -498.2835, -726.9448, 3284.111
 -499.7093, -729.5982, 3287.123
 -501.1216, -732.2391, 3290.118
 -502.5193, -734.8689, 3293.096
 -503.9012, -737.4892, 3296.059
 -505.2661, -740.1018, 3299.006
 -506.6131, -742.7082, 3301.94
 -507.941, -745.3099, 3304.861
 -509.2485, -747.9086, 3307.77
 -510.5345, -750.5059, 3310.669
 -511.798, -753.1033, 3313.557
 -513.0378, -755.7025, 3316.437
 -514.2526, -758.305, 3319.309
 -515.4415, -760.9125, 3322.175
 -516.6032, -763.5266, 3325.035
 -517.7366, -766.1488, 3327.892
 -518.8406, -768.7808, 3330.746
 -519.9139, -771.4242, 3333.599
 -520.9555, -774.0805, 3336.452
 -521.9642, -776.7513, 3339.307
 -522.9389, -779.4385, 3342.166
 -523.8784, -782.1433, 3345.029
 -524.7814, -784.8676, 3347.899
 -525.6472, -787.613, 3350.778
 -526.4741, -790.3808, 3353.666
 -527.2606, -793.1732, 3356.567
 -528.0049, -795.9917, 3359.483
 -528.7058, -798.8379, 3362.414
 -529.3622, -801.7134, 3365.363
 -529.9728, -804.6197, 3368.333
 -530.5367, -807.5585, 3371.325
 -531.0524, -810.531, 3374.342
 -531.5189, -813.5389, 3377.386
 -531.9349, -816.5839, 3380.459
 -532.2994, -819.6674, 3383.564
 -532.6111, -822.791, 3386.704
 -532.869, -825.9563, 3389.879
 -533.0719, -829.1648, 3393.094
 -533.2186, -832.4179, 3396.351
 -533.3079, -835.7173, 3399.651
 -533.3389, -839.0666, 3403.001
 -533.3107, -841.4241, 3405.358
 -533.2289, -843.7693, 3407.705
 -533.0942, -846.1009, 3410.04
 -532.9072, -848.4182, 3412.365
 -532.6682, -850.7209, 3414.68
 -532.3781, -853.008, 3416.986
 -532.0374, -855.2792, 3419.282
 -531.6465, -857.5337, 3421.571
 -531.2064, -859.7711, 3423.851
 -530.7173, -861.9906, 3426.124
 -530.1799, -864.1918, 3428.389
 -529.5949, -866.3739, 3430.649
 -528.9628, -868.5365, 3432.902
 -528.2842, -870.6789, 3435.149
 -527.5598, -872.8004, 3437.391
 -526.79, -874.9007, 3439.628
 -525.9755, -876.9789, 3441.86
 -525.1169, -879.0346, 3444.088
 -524.2147, -881.0672, 3446.311
 -523.2697, -883.076, 3448.531
 -522.2822, -885.0605, 3450.748
 -521.2531, -887.0202, 3452.961
 -520.1827, -888.9543, 3455.172
 -519.0718, -890.8624, 3457.38
 -517.9209, -892.7439, 3459.586
 -516.7307, -894.5981, 3461.789
 -515.5016, -896.4245, 3463.99
 -514.2343, -898.2225, 3466.19
 -512.9293, -899.9916, 3468.388
 -511.5874, -901.7311, 3470.585
 -510.209, -903.4404, 3472.781
 -508.7947, -905.1191, 3474.976
 -507.3451, -906.7665, 3477.171
 -505.8608, -908.3819, 3479.364
 -504.3425, -909.9651, 3481.558
 -502.7906, -911.5151, 3483.751
 -501.2058, -913.0314, 3485.945
 -499.5886, -914.5137, 3488.138
 -497.9397, -915.961, 3490.332
 -496.2595, -917.3731, 3492.527
 -494.5488, -918.7493, 3494.723
 -492.808, -920.0889, 3496.919
 -491.0378, -921.3915, 3499.117
 -489.2388, -922.6564, 3501.316
 -487.4115, -923.883, 3503.517
 -485.5565, -925.0707, 3505.72
 -483.6744, -926.219, 3507.925
 -481.7658, -927.3274, 3510.132
 -479.8312, -928.3952, 3512.341
 -477.8713, -929.4217, 3514.554
 -475.8867, -930.4065, 3516.769
 -473.8778, -931.3491, 3518.988
 -471.8454, -932.2486, 3521.211
 -469.7899, -933.1047, 3523.438
 -467.712, -933.9166, 3525.668
 -465.6124, -934.6838, 3527.904
 -463.4914, -935.4059, 3530.144
 -461.3498, -936.0821, 3532.39
 -459.1881, -936.7118, 3534.642
 -457.007, -937.2945, 3536.899
 -454.8069, -937.8297, 3539.164
 -452.5886, -938.3166, 3541.435
 -450.3525, -938.7547, 3543.713
 -448.0994, -939.1435, 3546
 -445.8297, -939.4825, 3548.295
 -443.5442, -939.7708, 3550.598
 -441.2432, -940.008, 3552.911
 -438.9276, -940.1936, 3555.234
 -436.5978, -940.3269, 3557.568
 -434.2544, -940.4074, 3559.913
 -431.8981, -940.4344, 3562.269
 -429.5419, -940.4076, 3564.626
 -427.1986, -940.3273, 3566.97
 -424.8687, -940.1941, 3569.304
 -422.5531, -940.0088, 3571.627
 -420.2521, -939.7716, 3573.94
 -417.9665, -939.4834, 3576.244
 -415.6968, -939.1446, 3578.539
 -413.4437, -938.7559, 3580.825
 -411.2076, -938.3178, 3583.104
 -408.9893, -937.8309, 3585.375
 -406.7892, -937.2958, 3587.639
 -404.6081, -936.7131, 3589.897
 -402.4465, -936.0834, 3592.148
 -400.3049, -935.4072, 3594.394
 -398.184, -934.6852, 3596.634
 -396.0844, -933.9178, 3598.87
 -394.0067, -933.1058, 3601.101
 -391.9513, -932.2497, 3603.327
 -389.9191, -931.3501, 3605.55
 -387.9104, -930.4076, 3607.768
 -385.9258, -929.4226, 3609.984
 -383.9662, -928.396, 3612.196
 -382.0319, -927.3281, 3614.406
 -380.1235, -926.2197, 3616.613
 -378.2417, -925.0713, 3618.817
 -376.387, -923.8834, 3621.02
 -374.56, -922.6567, 3623.22
 -372.7613, -921.3918, 3625.419
 -370.9915, -920.0891, 3627.617
 -369.2511, -918.7494, 3629.813
 -367.5408, -917.3732, 3632.008
 -365.8611, -915.961, 3634.203
 -364.2127, -914.5135, 3636.397
 -362.596, -913.0312, 3638.59
 -361.0117, -911.5148, 3640.783
 -359.4603, -909.9647, 3642.976
 -357.9425, -908.3817, 3645.169
 -356.4589, -906.7662, 3647.362
 -355.0099, -905.1188, 3649.556
 -353.5963, -903.4402, 3651.751
 -352.2185, -901.7309, 3653.946
 -350.8772, -899.9914, 3656.143
 -349.573, -898.2225, 3658.341
 -348.3064, -896.4245, 3660.54
 -347.078, -894.5982, 3662.741
 -345.8885, -892.7441, 3664.944
 -344.7384, -890.8628, 3667.149
 -343.6282, -888.9549, 3669.356
 -342.5587, -887.021, 3671.566
 -341.5303, -885.0615, 3673.779
 -340.5437, -883.0773, 3675.995
 -339.5995, -881.0687, 3678.215
 -338.6982, -879.0364, 3680.438
 -337.8404, -876.9811, 3682.665
 -337.0267, -874.9032, 3684.896
 -336.2578, -872.8033, 3687.133
 -335.5341, -870.6821, 3689.374
 -334.8564, -868.5402, 3691.621
 -334.2252, -866.3782, 3693.873
 -333.641, -864.1965, 3696.131
 -333.1045, -861.9958, 3698.397
 -332.6162, -859.7768, 3700.669
 -332.1768, -857.5401, 3702.948
 -331.7868, -855.2861, 3705.236
 -331.4469, -853.0155, 3707.531
 -331.1575, -850.729, 3709.836
 -330.9193, -848.4271, 3712.15
 -330.733, -846.1104, 3714.475
 -330.599, -843.7795, 3716.809
 -330.5179, -841.435, 3719.155
 -330.4904, -839.0783, 3721.512
 -330.5223, -835.7297, 3724.861
 -330.6126, -832.4309, 3728.161
 -330.7601, -829.1784, 3731.417
 -330.9638, -825.9708, 3734.631
 -331.2225, -822.8063, 3737.806
 -331.535, -819.6836, 3740.944
 -331.9002, -816.6009, 3744.048
 -332.3169, -813.5568, 3747.121
 -332.784, -810.5497, 3750.164
 -333.3002, -807.5782, 3753.18
 -333.8646, -804.6405, 3756.171
 -334.4756, -801.7351, 3759.14
 -335.1314, -798.8605, 3762.089
 -335.8306, -796.0146, 3765.019
 -336.5722, -793.1962, 3767.934
 -337.3549, -790.4035, 3770.834
 -338.1776, -787.6351, 3773.722
 -339.0392, -784.8891, 3776.6
 -339.9384, -782.164, 3779.47
 -340.8743, -779.4584, 3782.333
 -341.8455, -776.7705, 3785.191
 -342.8511, -774.0988, 3788.045
 -343.8897, -771.4416, 3790.898
 -344.9603, -768.7975, 3793.751
 -346.0616, -766.1647, 3796.605
 -347.1927, -763.5417, 3799.461
 -348.3522, -760.9268, 3802.322
 -349.539, -758.3186, 3805.187
 -350.7521, -755.7154, 3808.059
 -351.9901, -753.1155, 3810.939
 -353.2521, -750.5175, 3813.827
 -354.5368, -747.9197, 3816.725
 -355.8431, -745.3205, 3819.634
 -357.1698, -742.7184, 3822.555
 -358.5159, -740.1117, 3825.489
 -359.8801, -737.4989, 3828.436
 -361.2613, -734.8783, 3831.399
 -362.6584, -732.2483, 3834.377
 -364.0702, -729.6075, 3837.371
 -365.4957, -726.9541, 3840.383
 -366.9336, -724.2866, 3843.413
 -368.3829, -721.6034, 3846.463
 -369.8424, -718.9028, 3849.533
 -371.311, -716.1834, 3852.623
 -372.7875, -713.4435, 3855.736
 -374.271, -710.6814, 3858.871
 -375.7602, -707.8957, 3862.03
 -377.254, -705.0848, 3865.213
 -378.7513, -702.2469, 3868.422
 -380.251, -699.3804, 3871.657
 -381.752, -696.4839, 3874.919
 -383.2533, -693.5557, 3878.21
 -384.7535, -690.5942, 3881.53
 -386.2518, -687.5977, 3884.88
 -387.747, -684.5647, 3888.261
 -389.238, -681.4934, 3891.675
 -390.7237, -678.3825, 3895.123
 -392.203, -675.2301, 3898.605
 -393.6748, -672.0347, 3902.123
 -395.138, -668.7947, 3905.678
 -396.5916, -665.5083, 3909.272
 -398.0344, -662.174, 3912.905
 -399.4654, -658.7901, 3916.579
 -400.8834, -655.3551, 3920.295
 -402.2875, -651.8672, 3924.055
 -403.6764, -648.3248, 3927.86
 -405.0492, -644.7262, 3931.712
 -406.4047, -641.0699, 3935.611
 -407.7418, -637.354, 3939.56
 -409.0595, -633.5771, 3943.56
 -410.0522, -630.731, 3946.575
 -410.8934, -628.2734, 3949.172
 -411.642, -625.999, 3951.567
 -412.2521, -624.1471, 3953.516
 -412.8451, -622.2941, 3955.462
 -413.4212, -620.44, 3957.403
 -413.9807, -618.5848, 3959.341
 -414.5239, -616.7284, 3961.275
 -415.0509, -614.871, 3963.206
 -415.562, -613.0123, 3965.134
 -416.0576, -611.1526, 3967.058
 -416.5378, -609.2919, 3968.98
 -417.0028, -607.4299, 3970.899
 -417.4529, -605.5668, 3972.816
 -417.8885, -603.7026, 3974.73
 -418.3096, -601.8374, 3976.643
 -418.7166, -599.971, 3978.553
 -419.1097, -598.1035, 3980.461
 -419.4891, -596.235, 3982.368
 -419.8552, -594.3653, 3984.273
 -420.208, -592.4946, 3986.177
 -420.548, -590.6228, 3988.079
 -420.8753, -588.7499, 3989.98
 -421.1902, -586.876, 3991.881
 -421.4929, -585.001, 3993.78
 -421.7837, -583.125, 3995.678
 -422.0627, -581.248, 3997.576
 -422.3304, -579.37, 3999.473
 -422.5868, -577.491, 4001.369
 -422.8323, -575.6109, 4003.265
 -423.0671, -573.73, 4005.161
 -423.2914, -571.848, 4007.056
 -423.5055, -569.9651, 4008.951
 -423.7096, -568.0813, 4010.846
 -423.904, -566.1966, 4012.741
 -424.0889, -564.3109, 4014.636
 -424.2646, -562.4244, 4016.53
 -424.4312, -560.537, 4018.425
 -424.5892, -558.6487, 4020.32
 -424.7386, -556.7596, 4022.215
 -424.8798, -554.8696, 4024.11
 -425.0129, -552.9789, 4026.005
 -425.1384, -551.0874, 4027.901
 -425.2563, -549.195, 4029.797
 -425.3669, -547.302, 4031.693
 -425.4705, -545.4082, 4033.59
 -425.5673, -543.5137, 4035.487
 -425.6576, -541.6185, 4037.384
 -425.7416, -539.7226, 4039.282
 -425.8196, -537.826, 4041.18
 -425.8918, -535.9288, 4043.079
 -425.9584, -534.031, 4044.978
 -426.0198, -532.1326, 4046.877
 -426.0761, -530.2336, 4048.777
 -426.1276, -528.334, 4050.677
 -426.1745, -526.4338, 4052.578
 -426.2172, -524.5332, 4054.479
 -426.2558, -522.6319, 4056.381
 -426.2906, -520.7302, 4058.283
 -426.3218, -518.8281, 4060.185
 -426.3497, -516.9255, 4062.088
 -426.3745, -515.0224, 4063.991
 -426.3966, -513.1189, 4065.895
 -426.4161, -511.215, 4067.799
 -426.4332, -509.3107, 4069.703
 -426.4483, -507.4061, 4071.608
 -426.4616, -505.5011, 4073.513
 -426.4733, -503.5957, 4075.419
 -426.4837, -501.6901, 4077.324
 -426.493, -499.7842, 4079.23
 -426.5016, -497.8779, 4081.136
 -426.5095, -496.0112, 4083.003
ENDTABLE


!------------------------------------------------------------------------------------
! VS TERRAIN
!------------------------------------------------------------------------------------
VS_TERRAIN_FILE Scene_Import\VS_Scene_Builder\Proving_Ground.vsterrain ;

!------------------------------------------------------------------------------------
! STATE VARIABLES (NEEDED FOR RESTART)
!------------------------------------------------------------------------------------
SV_ABS_ON_OFF_L1    1 ; - ! ABS state: 1 -> apply brake, 0 -> release, wheel L1
SV_ABS_ON_OFF_L2    1 ; - ! ABS state: 1 -> apply brake, 0 -> release, wheel L2
SV_ABS_ON_OFF_R1    1 ; - ! ABS state: 1 -> apply brake, 0 -> release, wheel L1
SV_ABS_ON_OFF_R2    1 ; - ! ABS state: 1 -> apply brake, 0 -> release, wheel L2
SV_AERO_ROAD_ID_1   1 ; - ! Road surface ID for tracked aero road point
SV_AERO_ROAD_STA_1  0 ; m ! Road path station for tracked aero road point
SV_AT_LOCKED        0 ; - ! Lock state of automatic transmission {TC_Lock}
SV_AVX   0.1772818139 ; deg/s ! ODE: Body-X roll rate of sprung-mass {AVx}
SV_AVX_A2 -0.4041480594 ; deg/s ! ODE: Roll rate of axle 2
SV_AVY  -0.1016815757 ; deg/s ! ODE: Body-Y pitch rate of sprung-mass {AVy}
SV_AVY_L1 0.6801052902 ; rpm ! ODE: Spin of wheel L1 {AVy_L1}
SV_AVY_L1_OLD 0.6801052902 ; rpm ! Spin of wheel L1 (previous time step)
SV_AVY_L2 0.4958834746 ; rpm ! ODE: Spin of wheel L2 {AVy_L2}
SV_AVY_L2_OLD 0.4958834746 ; rpm ! Spin of wheel L2 (previous time step)
SV_AVY_R1 0.02506989638 ; rpm ! ODE: Spin of wheel R1 {AVy_R1}
SV_AVY_R1_OLD 0.02506989638 ; rpm ! Spin of wheel R1 (previous time step)
SV_AVY_R2 0.4420575535 ; rpm ! ODE: Spin of wheel R2 {AVy_R2}
SV_AVY_R2_OLD 0.4420575535 ; rpm ! Spin of wheel R2 (previous time step)
SV_AVZ  -0.6551574129 ; deg/s ! ODE: Body-Z yaw rate of sprung-mass {AVz}
SV_AV_CL  639.0136891 ; rpm ! Clutch relative spin
SV_AV_COL_CONTROL   0 ; deg/s ! ODE: Steering wheel angular rate
SV_AV_ENG 649.2502548 ; rpm ! ODE: Engine crankshaft spin {AV_Eng}
SV_AV_SHAFT_L_D1 0.6801052902 ; rpm ! ODE: Diff1 Left (first) output shaft speed
                              ! {AV_DS_L1}
SV_AV_SHAFT_L_D2 0.4958834746 ; rpm ! ODE: Diff2 Left (first) output shaft speed
                              ! {AV_DS_L2}
SV_AV_SHAFT_L_D3 1.445609132 ; rpm ! ODE: Diff3 Left (first) output shaft speed 
SV_AV_SHAFT_R_D1 0.02506989638 ; rpm ! ODE: Diff1 Right (second) output shaft speed
                               ! {AV_DS_R1}
SV_AV_SHAFT_R_D2 0.4420575535 ; rpm ! ODE: Diff2 Right (second) output shaft speed
                              ! {AV_DS_R2}
SV_AV_SHAFT_R_D3 1.922779108 ; rpm ! ODE: Diff3 Right (second) output shaft speed 
SV_AV_SW  21.09650339 ; deg/s ! ODE: Steering wheel angular rate {StrAV_SW}
SV_AV_TC  10.23656564 ; rpm ! ODE: Torque coupling output shaft spin {AV_TC}
SV_AV_TR_OUT 2.893319854 ; rpm ! ODE: Transmission output shaft spin
SV_A_CONTROL        0 ; deg ! ODE: Str whl angle from driver model in torque control
SV_BETA   61.98997748 ; deg ! Sideslip (ISO)
SV_BETA_RD 61.98997748 ; deg ! Sideslip using road axes
SV_BRAKE_STATE      1 ; - ! Braking state, used for clutch control
SV_CL_2ND_DIFF_LOCKED_1 0 ; - ! 2nd Clutch lock state for front diff
SV_CL_2ND_DIFF_LOCKED_2 0 ; - ! 2nd Clutch lock state for rear diff
SV_CL_2ND_DIFF_LOCKED_3 0 ; - ! 2nd Clutch lock state for transfer case
SV_CL_2ND_DIFF_SLIP_REF_1 0 ; deg ! 2nd Clutch ref. angle for front diff
SV_CL_2ND_DIFF_SLIP_REF_2 0 ; deg ! 2nd Clutch ref. angle for rear diff
SV_CL_2ND_DIFF_SLIP_REF_3 0 ; deg ! 2nd Clutch ref. angle for transfer case
SV_CL_2ND_DIFF_SPIN_1 0 ; rpm ! 2nd Clutch rel. spin for front diff
SV_CL_2ND_DIFF_SPIN_2 0 ; rpm ! 2nd Clutch rel. spin for rear diff
SV_CL_2ND_DIFF_SPIN_3 0 ; rpm ! 2nd Clutch rel. spin for transfer case
SV_CL_ACCEL_SHIFT   0 ; - ! Is clutch in auto control for low-speed accel?
SV_CL_AUTO_BRAKE    0 ; - ! Boolean: 1 if auto clutch for low-speed braking
SV_CL_AUTO_SHIFT    0 ; - ! Boolean: 1 if auto clutch for a gear shift
SV_CL_CON           0 ; - ! Transmission clutch control {ClutchTr}
SV_CL_DIFF_LOCKED_1 0 ; - ! Clutch lock state for front diff
SV_CL_DIFF_LOCKED_2 0 ; - ! Clutch lock state for rear diff
SV_CL_DIFF_LOCKED_3 0 ; - ! Clutch lock state for transfer case
SV_CL_DIFF_SLIP_REF_1 0 ; deg ! Clutch ref. angle for front diff
SV_CL_DIFF_SLIP_REF_2 0 ; deg ! Clutch ref. angle for rear diff
SV_CL_DIFF_SLIP_REF_3 0 ; deg ! Clutch ref. angle for transfer case
SV_CL_DIFF_SPIN_1 0.6550353938 ; rpm ! Clutch rel. spin for front diff
SV_CL_DIFF_SPIN_2 0.05382592112 ; rpm ! Clutch rel. spin for rear diff
SV_CL_DIFF_SPIN_3 -0.4771699753 ; rpm ! Clutch rel. spin for transfer case
SV_CL_LOCKED        0 ; - ! Clutch lockup state {Cl_Stat}
SV_CL_PRESS         0 ; - ! Initial direction state for automatic clutch
SV_CL_TWIN_LOCKED_LF 0 ; - ! Lock state of LF twin clutch
SV_CL_TWIN_LOCKED_LR 0 ; - ! Lock state of LR twin clutch
SV_CL_TWIN_LOCKED_RF 0 ; - ! Lock state of RF twin clutch
SV_CL_TWIN_LOCKED_RR 0 ; - ! Lock state of RR twin clutch
SV_CL_TWIN_SPIN_LF  0 ; rpm ! Rel. spin of LF twin clutch
SV_CL_TWIN_SPIN_LR  0 ; rpm ! Rel. spin of LR twin clutch
SV_CL_TWIN_SPIN_RF  0 ; rpm ! Rel. spin of RF twin clutch
SV_CL_TWIN_SPIN_RR  0 ; rpm ! Rel. spin of RR twin clutch
SV_CMP_S_L1 58.86354856 ; mm ! Compression of ride spring L1
SV_CMP_S_L2 62.12068625 ; mm ! Compression of ride spring L2
SV_CMP_S_R1 60.35099451 ; mm ! Compression of ride spring R1
SV_CMP_S_R2 63.48686076 ; mm ! Compression of ride spring R2
SV_CONTACT_ID_L1    1 ; - ! Road surface ID for tire contact {RdID_L1}
SV_CONTACT_ID_L2    1 ; - ! Road surface ID for tire contact {RdID_L2}
SV_CONTACT_ID_R1    1 ; - ! Road surface ID for tire contact {RdID_R1}
SV_CONTACT_ID_R2    1 ; - ! Road surface ID for tire contact {RdID_R2}
SV_CONTACT_STA_L1   0 ; m ! Road path station for tire contact {S_Rd_L1}
SV_CONTACT_STA_L2   0 ; m ! Road path station for tire contact {S_Rd_L2}
SV_CONTACT_STA_R1   0 ; m ! Road path station for tire contact {S_Rd_R1}
SV_CONTACT_STA_R2   0 ; m ! Road path station for tire contact {S_Rd_R2}
SV_DRGEAR_CVT      -0 ; - ! Derivative of delayed CVT gear ratio
SV_DZDX_GND        -0 ; - ! dZ/dX of ground at vehicle aero ref. pt (saved)
SV_DZDX_L1          0 ; - ! Ground X slope under tire L1 (saved)
SV_DZDX_L2          0 ; - ! Ground X slope under tire L2 (saved)
SV_DZDX_R1          0 ; - ! Ground X slope under tire R1 (saved)
SV_DZDX_R2          0 ; - ! Ground X slope under tire R2 (saved)
SV_DZDY_GND         0 ; - ! dZ/dY of ground at vehicle aero ref. pt (saved)
SV_DZDY_L1          0 ; - ! Ground Y slope under tire L1  (saved)
SV_DZDY_L2          0 ; - ! Ground Y slope under tire L2  (saved)
SV_DZDY_R1         -0 ; - ! Ground Y slope under tire R1  (saved)
SV_DZDY_R2          0 ; - ! Ground Y slope under tire R2  (saved)
SV_D_ALPHA_L1       0 ; - ! Delta Alpha (Fy 0-crossing), tire L1
SV_D_ALPHA_L2       0 ; - ! Delta Alpha (Fy 0-crossing), tire L2
SV_D_ALPHA_MX_L1    0 ; - ! Delta Alpha (Mx 0-crossing), tire L1
SV_D_ALPHA_MX_L2    0 ; - ! Delta Alpha (Mx 0-crossing), tire L2
SV_D_ALPHA_MX_R1    0 ; - ! Delta Alpha (Mx 0-crossing), tire R1
SV_D_ALPHA_MX_R2    0 ; - ! Delta Alpha (Mx 0-crossing), tire R2
SV_D_ALPHA_R1       0 ; - ! Delta Alpha (Fy 0-crossing), tire R1
SV_D_ALPHA_R2       0 ; - ! Delta Alpha (Fy 0-crossing), tire R2
SV_D_CONI_L1        0 ; - ! Delta Coni (Mz 0-crossing), tire L1
SV_D_CONI_L2        0 ; - ! Delta Coni (Mz 0-crossing), tire L2
SV_D_CONI_R1        0 ; - ! Delta Coni (Mz 0-crossing), tire R1
SV_D_CONI_R2        0 ; - ! Delta Coni (Mz 0-crossing), tire R2
SV_D_KAPPA_L1       0 ; - ! Delta Kappa (Fx 0-crossing), tire L1
SV_D_KAPPA_L2       0 ; - ! Delta Kappa (Fx 0-crossing), tire L2
SV_D_KAPPA_R1       0 ; - ! Delta Kappa (Fx 0-crossing), tire R1
SV_D_KAPPA_R2       0 ; - ! Delta Kappa (Fx 0-crossing), tire R2
SV_ESC_STATE        0 ; - ! State of ESC engine torque control
SV_FBK              0 ; N ! ODE: Instant boost force (above input force)
SV_FBOOST -6.135231631 ; N ! ODE: Delayed boost force {F_boost}
SV_FS_L1  8581.116654 ; N ! Force from ride spring L1
SV_FS_L2  2871.767808 ; N ! Force from ride spring L2
SV_FS_R1  8802.139336 ; N ! Force from ride spring R1
SV_FS_R2  2937.703762 ; N ! Force from ride spring R2
SV_FUEL             0 ; kg ! ODE: Mass of fuel consumed {Mfuel}
SV_FX_SM_L1 -3210.340004 ; N ! Tire force [sx] component, wheel L1
SV_FX_SM_L2 -1094.836549 ; N ! Tire force [sx] component, wheel L2
SV_FX_SM_R1 -2243.64961 ; N ! Tire force [sx] component, wheel R1
SV_FX_SM_R2 -1085.862051 ; N ! Tire force [sx] component, wheel R2
SV_FY_SM_L1 -284.8630853 ; N ! Tire force [sy] component, wheel L1
SV_FY_SM_L2 157.129603 ; N ! Tire force [sy] component, wheel L2
SV_FY_SM_R1 19.0934516 ; N ! Tire force [sy] component, wheel R1
SV_FY_SM_R2 154.8461782 ; N ! Tire force [sy] component, wheel R2
SV_FZ_SM_L1 6736.59422 ; N ! Tire force force [sz] component, wheel L1
SV_FZ_SM_L2 3749.633897 ; N ! Tire force force [sz] component, wheel L2
SV_FZ_SM_R1 6717.303814 ; N ! Tire force force [sz] component, wheel R1
SV_FZ_SM_R2 4017.016628 ; N ! Tire force force [sz] component, wheel R2
SV_F_HYS_RACK_A1 -1.016006377 ; N ! Friction force at rack
SV_F_HYS_RACK_A2    0 ; N ! Friction force at rack
SV_GEAR             1 ; - ! Automatic transmission gear {Gear_CL}
SV_GEAR_DELAY       1 ; - ! Delayed transmission gear position {Gear_Del}
SV_GEAR_MEM         2 ; - ! Gear saved in memory, used for transition
SV_GEAR_STAT        1 ; - ! Transmission gear status {GearStat}
SV_IVERR 0.09732747445 ; m ! ODE: Integral of SC speed error {Vx_IErr}
SV_I_GEAR_SHIFT 0.037 ; kg-m2 ! Transmission gear inertia modulated by shift
SV_I_GEAR_SHIFT_START 0.034 ; kg-m2 ! Gear spin inertia when automatic shift started
SV_JNCR_A2 0.00366595505 ; m/s ! ODE: Jounce rate of axle 2
SV_JNCR_L1 -0.004413588375 ; m/s ! ODE: Jounce rate at wheel L1
SV_JNCR_R1 -0.001080059058 ; m/s ! ODE: Jounce rate at wheel R1
SV_JNC_A2 -0.004990024316 ; m ! ODE: Jounce of axle 2
SV_JNC_L1 0.0105289903 ; m ! ODE: Jounce movement at wheel L1
SV_JNC_R1 0.01296303702 ; m ! ODE: Jounce movement at wheel R1
SV_LK_WHL_L1        0 ; - ! Lockup state for wheel L1
SV_LK_WHL_L2        0 ; - ! Lockup state for wheel L2
SV_LK_WHL_R1        1 ; - ! Lockup state for wheel R1
SV_LK_WHL_R2        0 ; - ! Lockup state for wheel R2
SV_LOCKED_CLUTCH_NEUTRAL 0 ; - ! Is clutch locked while in neutral?
SV_MBOOST           0 ; N-m ! ODE: Delayed boost torque {M_boost}
SV_MY_BRK_L1 1209.331853 ; N-m ! Spin moment, wheel L1
SV_MY_BRK_L2 410.525882 ; N-m ! Spin moment, wheel L2
SV_MY_BRK_R1 847.8730421 ; N-m ! Spin moment, wheel R1
SV_MY_BRK_R2 412.7058729 ; N-m ! Spin moment, wheel R2
SV_MZ_WHEEL_L1 0.371064873 ; N-m ! Tire Mz, wheel L1
SV_MZ_WHEEL_L2 -0.09531456067 ; N-m ! Tire Mz, wheel L2
SV_MZ_WHEEL_R1 -0.01547859605 ; N-m ! Tire Mz, wheel R1
SV_MZ_WHEEL_R2 0.8042945027 ; N-m ! Tire Mz, wheel R2
SV_M_CL2_CAP_FD_DYN 0 ; N-m ! ODE: 2nd Clutch capacity for front diff
SV_M_CL2_CAP_RD_DYN 0 ; N-m ! ODE: 2nd Clutch capacity for rear diff
SV_M_CL2_CAP_XC_DYN 0 ; N-m ! ODE: 2nd Clutch capacity for transfer case
SV_M_CLUTCH_DEL     0 ; N-m ! ODE: Time delayed clutch torque capacity
SV_M_CL_CAP_FD_DYN  0 ; N-m ! ODE: Clutch capacity for front diff
SV_M_CL_CAP_RD_DYN  0 ; N-m ! ODE: Clutch capacity for rear diff
SV_M_CL_CAP_XC_DYN  0 ; N-m ! ODE: Clutch capacity for transfer case
SV_M_CL_LF_CAP_DYN  0 ; N-m ! ODE: Left twin clutch capacity for front diff
SV_M_CL_LR_CAP_DYN  0 ; N-m ! ODE: Left twin clutch capacity for rear diff
SV_M_CL_L_D3_CAP_DYN 0 ; N-m ! ODE: Left twin clutch capacity for transfer case
SV_M_CL_RF_CAP_DYN  0 ; N-m ! ODE: Right twin clutch capacity for front diff
SV_M_CL_RR_CAP_DYN  0 ; N-m ! ODE: Right twin clutch capacity for rear diff
SV_M_CL_R_D3_CAP_DYN 0 ; N-m ! ODE: Right twin clutch capacity for transfer case
SV_M_ENG_ESC_APPLY  0 ; N-m ! ODE: Applied engine torque from ESC/TCS
SV_M_ENG_ESC_ERROR  0 ; N-m-s ! ODE: Integral of error from ESC request
SV_M_HYS_COL 0.199999102 ; N-m ! Steering column friction
SV_M_HYS_GEAR_A1    0 ; N-m ! Friction torque for recirculating ball
SV_M_HYS_GEAR_A2    0 ; N-m ! Friction torque for recirculating ball
SV_M_KP_L1 -86.29628012 ; N-m ! Kingpin moment, wheel L1
SV_M_KP_L2          0 ; N-m ! Kingpin moment, wheel L2
SV_M_KP_R1 79.64422392 ; N-m ! Kingpin moment, wheel R1
SV_M_KP_R2          0 ; N-m ! Kingpin moment, wheel R2
SV_M_PARK_L1 0.3160330587 ; N-m ! Kingpin steer park torque, wheel L1
SV_M_PARK_L2        0 ; N-m ! Kingpin steer park torque, wheel L2
SV_M_PARK_R1 0.2071923451 ; N-m ! Kingpin steer park torque, wheel R1
SV_M_PARK_R2        0 ; N-m ! Kingpin steer park torque, wheel R2
SV_M_TC   52.32084874 ; N-m ! Transmission input shaft torque {M_TC}
SV_N_START_CROSS    0 ; - ! Count of start-crossings on looped driver path
SV_PBK_L1           4 ; MPa ! ODE: Brake actuator pressure for wheel L1
SV_PBK_L2           4 ; MPa ! ODE: Brake actuator pressure for wheel L2
SV_PBK_R1 3.999639254 ; MPa ! ODE: Brake actuator pressure for wheel R1
SV_PBK_R2           4 ; MPa ! ODE: Brake actuator pressure for wheel R2
SV_PITCH 0.6298662315 ; deg ! ODE: Pitch of sprung mass {Pitch}
SV_RGEAR_CVT        0 ; - ! ODE: Delayed CVT gear ratio
SV_ROLL 0.08454159557 ; deg ! ODE: Roll (Euler) of sprung mass {Roll_E}
SV_ROLL_A2 -0.06523004232 ; deg ! ODE: Roll of axle 2
SV_ROT_L1 84.39945932 ; rev ! ODE: Rotation of wheel L1
SV_ROT_L2 84.79222993 ; rev ! ODE: Rotation of wheel L2
SV_ROT_LK_L1        0 ; rev ! Rotation reference of wheel L1 in "locked" mode
SV_ROT_LK_L2        0 ; rev ! Rotation reference of wheel L2 in "locked" mode
SV_ROT_LK_R1 80.70074525 ; rev ! Rotation reference of wheel R1 in "locked" mode
SV_ROT_LK_R2        0 ; rev ! Rotation reference of wheel R2 in "locked" mode
SV_ROT_R1 80.70107362 ; rev ! ODE: Rotation of wheel R1
SV_ROT_R2 82.00641114 ; rev ! ODE: Rotation of wheel R2
SV_ROT_SHAFT_1 338.4560925 ; rev ! ODE: Front diff input shaft rotation {Rot_D3f}
SV_ROT_SHAFT_2 341.9372142 ; rev ! ODE: Rear diff input shaft rotation {Rot_D3r}
SV_ROT_SHAFT_3 340.1966534 ; rev ! ODE: Transfer case input shaft rotation 
SV_ROT_SHAFT_L_D1 84.39945932 ; rev ! ODE: Diff1 Left (first) output shaft rotation
SV_ROT_SHAFT_L_D2 84.79222993 ; rev ! ODE: Diff2 Left (first) output shaft rotation
SV_ROT_SHAFT_L_D3 338.4560925 ; rev ! ODE: Diff3 Left (first) output shaft rotation
SV_ROT_SHAFT_R_D1 80.70107362 ; rev ! ODE: Diff1 Right (second) output shaft
                              ! rotation
SV_ROT_SHAFT_R_D2 82.00641114 ; rev ! ODE: Diff2 Right (second) output shaft
                              ! rotation
SV_ROT_SHAFT_R_D3 341.9372142 ; rev ! ODE: Diff3 Right (second) output shaft
                              ! rotation
SV_ROT_TC 288.2772808 ; rev ! ODE: Torque coupling output shaft rotation {Rot_TC}
SV_ROT_TR_OUT 340.2477293 ; rev ! ODE: Transmission output shaft rotation
SV_R_GEAR_SHIFT 3.538 ; - ! Transmission gear ratio modulated by gear shift
SV_R_GEAR_SHIFT_START 2.06 ; - ! Gear ratio when automatic shift started
SV_R_GEAR_TOTAL_SC 14.5058 ; - ! Driveline total gear ratio for speed controller
SV_R_KP_GND_L1 -1.011906531 ; - ! Kingpin steer / ground steer (-1 for vertical KP)
SV_R_KP_GND_L2      0 ; - ! Kingpin steer / ground steer (-1 for vertical KP)
SV_R_KP_GND_R1 -1.01221797 ; - ! Kingpin steer / ground steer (-1 for vertical KP)
SV_R_KP_GND_R2      0 ; - ! Kingpin steer / ground steer (-1 for vertical KP)
SV_R_L1  0.3885118509 ; m ! Deflected radius for tire L1 (saved)
SV_R_L2  0.3945066322 ; m ! Deflected radius for tire L2 (saved)
SV_R_R1  0.3885705513 ; m ! Deflected radius for tire R1 (saved)
SV_R_R2  0.3939742333 ; m ! Deflected radius for tire R2 (saved)
SV_SHIFT_DELAY      0 ; - ! Is shifting delay in T.C. active?
SV_SLIP_LAT_L1 0.005931612393 ; - ! ODE: Lagged tan of lateral slip, tire L1
SV_SLIP_LAT_L2 -0.00454481803 ; - ! ODE: Lagged tan of lateral slip, tire L2
SV_SLIP_LAT_R1 0.0008453960125 ; - ! ODE: Lagged tan of lateral slip, tire R1
SV_SLIP_LAT_R2 -0.004853316227 ; - ! ODE: Lagged tan of lateral slip, tire R2
SV_SLIP_LONG_L1 -0.04999970051 ; - ! ODE: Lagged long. slip, tire L1 {KappL_L1}
SV_SLIP_LONG_L2 -0.02514552618 ; - ! ODE: Lagged long. slip, tire L2 {KappL_L2}
SV_SLIP_LONG_R1 -0.1755498251 ; - ! ODE: Lagged long. slip, tire R1 {KappL_R1}
SV_SLIP_LONG_R2 -0.03007839579 ; - ! ODE: Lagged long. slip, tire R2 {KappL_R2}
SV_SO_DIST 216.0362881 ; m ! ODE: Distance  used for tire "wandering profiles"
                       ! {Sta_Prof}
SV_SPEED_DVDS       0 ; - ! dVdS derivative for speed control
SV_SPEED_PREVIEW_SSTART 0 ; m ! Start station in path preview array
SV_SPEED_PREVIEW_V_TARGET 0 ; km/h ! Initial target speed in preview array
SV_STATION 206.0339185 ; m ! Station of vehicle on driver path PATH_ID_DM {Station}
SV_STA_ROAD 339.6435645 ; m ! Vehicle station on road CURRENT_ROAD_ID {Sta_Road}
SV_STR_DM -0.6315073706 ; deg ! Road-wheel steer from driver model
SV_STR_DM_OLD -0.6315073706 ; deg ! Road-wheel steer from driver model (prev. time
                            ! step)
SV_STR_IN_DGR_A1 0.01879689327 ; - ! ODE: Steering gear input rate, axle 1
SV_STR_IN_DGR_A2    0 ; - ! ODE: Steering gear input rate, axle 2
SV_STR_IN_GR_A1 -0.2070635368 ; - ! ODE: Steering gear input position, axle 1
                              ! {A_StrIn1}
SV_STR_IN_GR_A2     0 ; - ! ODE: Steering gear input position, axle 2 {A_StrIn2}
SV_STR_KP_L1 -0.6352999972 ; deg ! Kingpin steer angle, wheel L1
SV_STR_KP_L1_OLD -0.6352999972 ; deg ! Kingpin steer angle, wheel L1 (previous time
                               ! step)
SV_STR_KP_L2_OLD    0 ; deg ! Kingpin steer angle, wheel L2 (previous time step)
SV_STR_KP_R1 -0.688567422 ; deg ! Kingpin steer angle, wheel R1
SV_STR_KP_R1_OLD -0.688567422 ; deg ! Kingpin steer angle, wheel R1 (previous time
                              ! step)
SV_STR_KP_R2_OLD    0 ; deg ! Kingpin steer angle, wheel R2 (previous time step)
SV_STR_OUT_GR_A1 -0.00151791584 ; - ! Steering gear output
SV_STR_OUT_GR_A2    0 ; - ! Steering gear output
SV_SWA   -11.73537958 ; deg ! ODE: Steering wheel angle
SV_SWA_DM -11.73537958 ; deg ! Steering wheel angle from DM
SV_SWA_OL           0 ; deg ! Steering wheel angle from open loop control
SV_SWA_OLD -11.73537958 ; deg ! Steering wheel angle (previous time step)
SV_THROTTLE 5.071682032e-33 ; - ! ODE: Time delayed engine throttle
SV_THR_REQ          0 ; - ! Requested Throttle
SV_TH_AUTO_SHIFT    0 ; - ! Boolean: 1 if auto throttle for a gear shift
SV_TROT_L1          0 ; C ! ODE: Brake rotor L1 temperature {T_Rtr_L1}
SV_TROT_L2          0 ; C ! ODE: Brake rotor L2 temperature {T_Rtr_L2}
SV_TROT_R1          0 ; C ! ODE: Brake rotor R1 temperature {T_Rtr_R1}
SV_TROT_R2          0 ; C ! ODE: Brake rotor R2 temperature {T_Rtr_R2}
SV_T_ESC_STATE_CHANGE -10000000 ; s ! Time of ESC control status changed
SV_T_SHIFT_START 8.6765 ; s ! Time when automatic gear shift started
SV_VBK_L1           0 ; mm3 ! ODE: Brake caliper L1 volume
SV_VBK_L2           0 ; mm3 ! ODE: Brake caliper L2 volume
SV_VBK_R1           0 ; mm3 ! ODE: Brake caliper R1 volume
SV_VBK_R2           0 ; mm3 ! ODE: Brake caliper R2 volume
SV_VERR_OLD         0 ; km/h ! Speed controller error at previous time step
SV_VXS 0.006390536175 ; km/h ! ODE: Body-X speed of laden sprung-mass CG
SV_VYS 0.003137792284 ; m/s ! ODE: Body-Y speed of laden sprung-mass CG
SV_VZS -0.0005264695469 ; m/s ! ODE: Body-Z speed of laden sprung-mass CG
SV_XO     339.6435645 ; m ! ODE: Global X coord. of sprung-mass origin {Xo}
SV_X_GND  338.1686831 ; m ! X coord, ground, vehicle aero ref. pt (saved)
SV_YAW   0.3622001923 ; deg ! ODE: Yaw of sprung mass {Yaw}
SV_YO     492.4688585 ; m ! ODE: Global Y coord. of sprung-mass origin {Yo}
SV_Y_GND  492.4595348 ; m ! Y coord, ground, vehicle aero ref. pt (saved)
SV_ZO  -0.01318275754 ; m ! ODE: Global Z coord. of sprung-mass origin {Zo}
SV_Z_CTC_L1 -5.551115123e-17 ; m ! Center of tire contact L1 {Zgnd_L1}
SV_Z_CTC_L2        -0 ; m ! Center of tire contact L2 {Zgnd_L2}
SV_Z_CTC_R1        -0 ; m ! Center of tire contact R1 {Zgnd_R1}
SV_Z_CTC_R2        -0 ; m ! Center of tire contact R2 {Zgnd_R2}
SV_Z_GND            0 ; m ! Z coord, ground, vehicle aero ref. pt (saved)


END
