PARSFILE
#FullDataName Generic VS Commands`Obstacle Type Definitions`Pedestrian Euro NCAP
#VehCode Detect Obstacle Type

#MiscYellow0
define_output PedType1 =DETECT_TYPE(ID_CAM, OBJ_NEAR); -; check type of closest object
define_output PedType2 =DETECT_TYPE(ID_CAM, OBJ_MID); - ; check type of 2nd closest object
define_output PedType3 =DETECT_TYPE(ID_CAM, OBJ_FAR); - ; check type of 3rd closest object

! run through each object type (using nested if-statements), to see which one is the pedestrian type
define_output OBJ_PROX = if( PedType1==PEDESTRIAN, OBJ_NEAR, ...
if( PedType2==PEDESTRIAN, OBJ_MID, OBJ_FAR) ) ;- ; ...
determine which obj. = ped.

!PedTypeUsed shows the object type that will be used for AEB logic calculations
define_output PedTypeUsed =DETECT_TYPE(ID_CAM, OBJ_PROX)
#ENDMYellow

*MODELCODE Detect Obstacle Type
PARSFILE Animator\HUD\HUD_ba3324b0-fcb9-45f8-abcd-5ab3d2d1a3cd.par
#BlueLink0 Animator: HUD`FCW Alert (small - right side)` Euro NCAP` , Miscellaneous`HUD_ba3324b0-fcb9-45f8-abcd-5ab3d2d1a3cd


#EMBEDDED_NOTES
#Logic to generate a forward collision warning (FCW) using the current sensor <<s>> and a parameter for the acceptable deceleration.
#
#An equation is included for open-loop brake pressure via the configurable function PBK_CON.
#
#Nested-if statement used here to cycle through each of the detected object to find which one is a pedestrain
#- then OBJ_PROX is set to that detected object
#
#
#END_EMBEDDED_NOTES

LOG_ENTRY Used Dataset: Generic VS Commands; { Pedestrian Euro NCAP } Obstacle Type Definitions
#Library : Generic VS Commands
#DataSet : Obstacle Type Definitions
#Category: Pedestrian Euro NCAP
#FileID  : GenVS_a6a62230-7eed-4dc6-9aa6-a0d0a7356afa
#Product : CarSim 2021.0
#VehCode Detect Obstacle Type

END
